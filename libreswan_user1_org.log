Sep 13 20:56:45.385204: NSS DB directory: sql:/etc/ipsec.d
Sep 13 20:56:45.385287: Initializing NSS
Sep 13 20:56:45.385295: Opening NSS database "sql:/etc/ipsec.d" read-only
Sep 13 20:56:45.416421: NSS crypto library initialized
Sep 13 20:56:45.416463: FIPS Mode: NO
Sep 13 20:56:45.416469: FIPS mode disabled for pluto daemon
Sep 13 20:56:45.416471: FIPS HMAC integrity support [disabled]
Sep 13 20:56:45.416531: libcap-ng support [enabled]
Sep 13 20:56:45.416535: Linux audit support [disabled]
Sep 13 20:56:45.416538: Starting Pluto (Libreswan Version 3.32 XFRM(netkey) XFRMI esp-hw-offload FORK PTHREAD_SETSCHEDPRIO NSS (AVA copy) (native-PRF) SYSTEMD_WATCHDOG LIBCAP_NG XAUTH_PAM NETWORKMANAGER CURL(non-NSS)) pid:20319
Sep 13 20:56:45.416540: core dump dir: /run/pluto
Sep 13 20:56:45.416542: secrets file: /etc/ipsec.secrets
Sep 13 20:56:45.416544: leak-detective enabled
Sep 13 20:56:45.416546: NSS crypto [enabled]
Sep 13 20:56:45.416547: XAUTH PAM support [enabled]
Sep 13 20:56:45.416630: | libevent is using pluto's memory allocator
Sep 13 20:56:45.416641: Initializing libevent in pthreads mode: headers: 2.0.21-stable (2001500); library: 2.0.21-stable (2001500)
Sep 13 20:56:45.416646: | libevent_malloc: newref ptr-libevent@0x55b124e36418 size 40
Sep 13 20:56:45.416650: | libevent_malloc: newref ptr-libevent@0x55b124e37c58 size 40
Sep 13 20:56:45.416654: | libevent_malloc: newref ptr-libevent@0x55b124e37cb8 size 40
Sep 13 20:56:45.416656: | creating event base
Sep 13 20:56:45.416658: | libevent_malloc: newref ptr-libevent@0x55b124e37d18 size 32
Sep 13 20:56:45.416660: | libevent_malloc: newref ptr-libevent@0x55b124e37d68 size 640
Sep 13 20:56:45.416666: | libevent_malloc: newref ptr-libevent@0x55b124e37c18 size 16
Sep 13 20:56:45.416668: | libevent_malloc: newref ptr-libevent@0x55b124e38018 size 384
Sep 13 20:56:45.416678: | libevent_malloc: newref ptr-libevent@0x55b124e381c8 size 16
Sep 13 20:56:45.416680: | libevent_malloc: newref ptr-libevent@0x55b124e38208 size 40
Sep 13 20:56:45.416683: | libevent_malloc: newref ptr-libevent@0x55b124e38268 size 48
Sep 13 20:56:45.416686: | libevent_realloc: newref ptr-libevent@0x55b124e382c8 size 256
Sep 13 20:56:45.416688: | libevent_malloc: newref ptr-libevent@0x55b124e383f8 size 24
Sep 13 20:56:45.416692: | libevent_free: delref ptr-libevent@0x55b124e37d18
Sep 13 20:56:45.416694: | libevent initialized
Sep 13 20:56:45.416697: | libevent_realloc: newref ptr-libevent@0x55b124e38448 size 64
Sep 13 20:56:45.416700: | global periodic timer EVENT_RESET_LOG_RATE_LIMIT enabled with interval of 3600 seconds
Sep 13 20:56:45.416713: | init_nat_traversal() initialized with keep_alive=0s
Sep 13 20:56:45.416716: NAT-Traversal support  [enabled]
Sep 13 20:56:45.416718: | global one-shot timer EVENT_NAT_T_KEEPALIVE initialized
Sep 13 20:56:45.416728: | global one-shot timer EVENT_FREE_ROOT_CERTS initialized
Sep 13 20:56:45.416736: | global periodic timer EVENT_REINIT_SECRET enabled with interval of 3600 seconds
Sep 13 20:56:45.416765: | checking IKEv1 state table
Sep 13 20:56:45.416768: |   MAIN_R0: category: half-open IKE SA; flags: 0:
Sep 13 20:56:45.416771: |     -> MAIN_R1 EVENT_SO_DISCARD (main_inI1_outR1)
Sep 13 20:56:45.416773: |   MAIN_I1: category: half-open IKE SA; flags: 0:
Sep 13 20:56:45.416774: |     -> MAIN_I2 EVENT_RETRANSMIT (main_inR1_outI2)
Sep 13 20:56:45.416776: |   MAIN_R1: category: open IKE SA; flags: 0:
Sep 13 20:56:45.416778: |     -> MAIN_R2 EVENT_RETRANSMIT (main_inI2_outR2)
Sep 13 20:56:45.416780: |     -> MAIN_R1 EVENT_RETRANSMIT (unexpected)
Sep 13 20:56:45.416782: |     -> MAIN_R1 EVENT_RETRANSMIT (unexpected)
Sep 13 20:56:45.416783: |   MAIN_I2: category: open IKE SA; flags: 0:
Sep 13 20:56:45.416785: |     -> MAIN_I3 EVENT_RETRANSMIT (main_inR2_outI3)
Sep 13 20:56:45.416787: |     -> MAIN_I2 EVENT_RETRANSMIT (unexpected)
Sep 13 20:56:45.416788: |     -> MAIN_I2 EVENT_RETRANSMIT (unexpected)
Sep 13 20:56:45.416790: |   MAIN_R2: category: open IKE SA; flags: 0:
Sep 13 20:56:45.416792: |     -> MAIN_R3 EVENT_SA_REPLACE (main_inI3_outR3)
Sep 13 20:56:45.416794: |     -> MAIN_R3 EVENT_SA_REPLACE (main_inI3_outR3)
Sep 13 20:56:45.416800: |     -> MAIN_R2 EVENT_SA_REPLACE (unexpected)
Sep 13 20:56:45.416802: |   MAIN_I3: category: open IKE SA; flags: 0:
Sep 13 20:56:45.416804: |     -> MAIN_I4 EVENT_SA_REPLACE (main_inR3)
Sep 13 20:56:45.416806: |     -> MAIN_I4 EVENT_SA_REPLACE (main_inR3)
Sep 13 20:56:45.416808: |     -> MAIN_I3 EVENT_SA_REPLACE (unexpected)
Sep 13 20:56:45.416809: |   MAIN_R3: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416811: |     -> MAIN_R3 EVENT_NULL (unexpected)
Sep 13 20:56:45.416813: |   MAIN_I4: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416815: |     -> MAIN_I4 EVENT_NULL (unexpected)
Sep 13 20:56:45.416817: |   AGGR_R0: category: half-open IKE SA; flags: 0:
Sep 13 20:56:45.416818: |     -> AGGR_R1 EVENT_SO_DISCARD (aggr_inI1_outR1)
Sep 13 20:56:45.416820: |   AGGR_I1: category: half-open IKE SA; flags: 0:
Sep 13 20:56:45.416822: |     -> AGGR_I2 EVENT_SA_REPLACE (aggr_inR1_outI2)
Sep 13 20:56:45.416824: |     -> AGGR_I2 EVENT_SA_REPLACE (aggr_inR1_outI2)
Sep 13 20:56:45.416825: |   AGGR_R1: category: open IKE SA; flags: 0:
Sep 13 20:56:45.416827: |     -> AGGR_R2 EVENT_SA_REPLACE (aggr_inI2)
Sep 13 20:56:45.416829: |     -> AGGR_R2 EVENT_SA_REPLACE (aggr_inI2)
Sep 13 20:56:45.416831: |   AGGR_I2: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416832: |     -> AGGR_I2 EVENT_NULL (unexpected)
Sep 13 20:56:45.416834: |   AGGR_R2: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416836: |     -> AGGR_R2 EVENT_NULL (unexpected)
Sep 13 20:56:45.416838: |   QUICK_R0: category: established CHILD SA; flags: 0:
Sep 13 20:56:45.416839: |     -> QUICK_R1 EVENT_RETRANSMIT (quick_inI1_outR1)
Sep 13 20:56:45.416841: |   QUICK_I1: category: established CHILD SA; flags: 0:
Sep 13 20:56:45.416843: |     -> QUICK_I2 EVENT_SA_REPLACE (quick_inR1_outI2)
Sep 13 20:56:45.416845: |   QUICK_R1: category: established CHILD SA; flags: 0:
Sep 13 20:56:45.416847: |     -> QUICK_R2 EVENT_SA_REPLACE (quick_inI2)
Sep 13 20:56:45.416849: |   QUICK_I2: category: established CHILD SA; flags: 0:
Sep 13 20:56:45.416850: |     -> QUICK_I2 EVENT_NULL (unexpected)
Sep 13 20:56:45.416852: |   QUICK_R2: category: established CHILD SA; flags: 0:
Sep 13 20:56:45.416854: |     -> QUICK_R2 EVENT_NULL (unexpected)
Sep 13 20:56:45.416856: |   INFO: category: informational; flags: 0:
Sep 13 20:56:45.416857: |     -> INFO EVENT_NULL (informational)
Sep 13 20:56:45.416859: |   INFO_PROTECTED: category: informational; flags: 0:
Sep 13 20:56:45.416861: |     -> INFO_PROTECTED EVENT_NULL (informational)
Sep 13 20:56:45.416863: |   XAUTH_R0: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416865: |     -> XAUTH_R1 EVENT_NULL (xauth_inR0)
Sep 13 20:56:45.416866: |   XAUTH_R1: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416868: |     -> MAIN_R3 EVENT_SA_REPLACE (xauth_inR1)
Sep 13 20:56:45.416870: |   MODE_CFG_R0: category: informational; flags: 0:
Sep 13 20:56:45.416872: |     -> MODE_CFG_R1 EVENT_SA_REPLACE (modecfg_inR0)
Sep 13 20:56:45.416874: |   MODE_CFG_R1: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416875: |     -> MODE_CFG_R2 EVENT_SA_REPLACE (modecfg_inR1)
Sep 13 20:56:45.416877: |   MODE_CFG_R2: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416879: |     -> MODE_CFG_R2 EVENT_NULL (unexpected)
Sep 13 20:56:45.416881: |   MODE_CFG_I1: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416882: |     -> MAIN_I4 EVENT_SA_REPLACE (modecfg_inR1)
Sep 13 20:56:45.416884: |   XAUTH_I0: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416886: |     -> XAUTH_I1 EVENT_RETRANSMIT (xauth_inI0)
Sep 13 20:56:45.416888: |   XAUTH_I1: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416890: |     -> MAIN_I4 EVENT_RETRANSMIT (xauth_inI1)
Sep 13 20:56:45.416893: | checking IKEv2 state table
Sep 13 20:56:45.416895: |   V2_REKEY_IKE_I0: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416897: |     -> V2_REKEY_IKE_I EVENT_RETRANSMIT send-request (Initiate CREATE_CHILD_SA IKE Rekey)
Sep 13 20:56:45.416899: |   V2_REKEY_CHILD_I0: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416904: |     -> V2_REKEY_CHILD_I EVENT_RETRANSMIT send-request (Initiate CREATE_CHILD_SA IPsec Rekey SA)
Sep 13 20:56:45.416906: |   V2_CREATE_I0: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416908: |     -> V2_CREATE_I EVENT_RETRANSMIT send-request (Initiate CREATE_CHILD_SA IPsec SA)
Sep 13 20:56:45.416910: |   PARENT_I0: category: ignore; flags: 0:
Sep 13 20:56:45.416911: |     -> PARENT_I1 EVENT_RETRANSMIT send-request (initiate IKE_SA_INIT)
Sep 13 20:56:45.416913: |   PARENT_I1: category: half-open IKE SA; flags: 0:
Sep 13 20:56:45.416915: |     -> PARENT_I1 EVENT_RETAIN send-request (Initiator: process SA_INIT reply notification)
Sep 13 20:56:45.416917: |     -> PARENT_I2 EVENT_RETRANSMIT send-request (Initiator: process IKE_SA_INIT reply, initiate IKE_AUTH)
Sep 13 20:56:45.416919: |   PARENT_I2: category: open IKE SA; flags: 0:
Sep 13 20:56:45.416921: |     -> PARENT_I2 EVENT_NULL (Initiator: process INVALID_SYNTAX AUTH notification)
Sep 13 20:56:45.416923: |     -> PARENT_I2 EVENT_NULL (Initiator: process AUTHENTICATION_FAILED AUTH notification)
Sep 13 20:56:45.416925: |     -> PARENT_I2 EVENT_NULL (Initiator: process UNSUPPORTED_CRITICAL_PAYLOAD AUTH notification)
Sep 13 20:56:45.416927: |     -> V2_IPSEC_I EVENT_SA_REPLACE (Initiator: process IKE_AUTH response)
Sep 13 20:56:45.416928: |     -> PARENT_I2 EVENT_NULL (IKE SA: process IKE_AUTH response containing unknown notification)
Sep 13 20:56:45.416930: |   PARENT_R0: category: half-open IKE SA; flags: 0:
Sep 13 20:56:45.416932: |     -> PARENT_R1 EVENT_SO_DISCARD send-response (Respond to IKE_SA_INIT)
Sep 13 20:56:45.416934: |   PARENT_R1: category: half-open IKE SA; flags: 0:
Sep 13 20:56:45.416936: |     -> PARENT_R1 EVENT_SA_REPLACE send-response (Responder: process IKE_AUTH request (no SKEYSEED))
Sep 13 20:56:45.416938: |     -> V2_IPSEC_R EVENT_SA_REPLACE send-response (Responder: process IKE_AUTH request)
Sep 13 20:56:45.416940: |   V2_REKEY_IKE_R: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416941: |     -> PARENT_R2 EVENT_SA_REPLACE send-response (Respond to CREATE_CHILD_SA IKE Rekey)
Sep 13 20:56:45.416943: |   V2_REKEY_IKE_I: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416945: |     -> PARENT_I3 EVENT_SA_REPLACE (Process CREATE_CHILD_SA IKE Rekey Response)
Sep 13 20:56:45.416947: |   V2_CREATE_I: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416949: |     -> V2_IPSEC_I EVENT_SA_REPLACE (Process CREATE_CHILD_SA IPsec SA Response)
Sep 13 20:56:45.416951: |   V2_CREATE_R: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416952: |     -> V2_IPSEC_R EVENT_SA_REPLACE send-response (Respond to CREATE_CHILD_SA IPsec SA Request)
Sep 13 20:56:45.416954: |   PARENT_I3: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416956: |     -> PARENT_I3 EVENT_RETAIN (I3: Informational Request)
Sep 13 20:56:45.416958: |     -> PARENT_I3 EVENT_RETAIN (I3: Informational Response)
Sep 13 20:56:45.416960: |     -> PARENT_I3 EVENT_RETAIN (I3: INFORMATIONAL Request)
Sep 13 20:56:45.416961: |     -> PARENT_I3 EVENT_RETAIN (I3: INFORMATIONAL Response)
Sep 13 20:56:45.416963: |   PARENT_R2: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416965: |     -> PARENT_R2 EVENT_RETAIN (R2: process Informational Request)
Sep 13 20:56:45.416967: |     -> PARENT_R2 EVENT_RETAIN (R2: process Informational Response)
Sep 13 20:56:45.416969: |     -> PARENT_R2 EVENT_RETAIN (R2: process INFORMATIONAL Request)
Sep 13 20:56:45.416970: |     -> PARENT_R2 EVENT_RETAIN (R2: process INFORMATIONAL Response)
Sep 13 20:56:45.416972: |   IKESA_DEL: category: established IKE SA; flags: 0:
Sep 13 20:56:45.416974: |     -> IKESA_DEL EVENT_RETAIN (IKE_SA_DEL: process INFORMATIONAL)
Sep 13 20:56:45.416976: | global one-shot timer EVENT_REVIVE_CONNS initialized
Sep 13 20:56:45.416978: | global periodic timer EVENT_PENDING_DDNS enabled with interval of 60 seconds
Sep 13 20:56:45.416981: | global periodic timer EVENT_PENDING_PHASE2 enabled with interval of 120 seconds
Sep 13 20:56:45.416993: | encryption algorithm assertion checks
Sep 13 20:56:45.417000: | encryption algorithm AES_CCM_16, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: 16, IKEv2 id: 16
Sep 13 20:56:45.417004: | IKEv1 ESP ID id: 16 enum name: AES_CCM_C
Sep 13 20:56:45.417006: | IKEv2 ID id: 16 enum name: AES_CCM_C
Sep 13 20:56:45.417009: | encryption algorithm AES_CCM_12, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: 15, IKEv2 id: 15
Sep 13 20:56:45.417011: | IKEv1 ESP ID id: 15 enum name: AES_CCM_B
Sep 13 20:56:45.417013: | IKEv2 ID id: 15 enum name: AES_CCM_B
Sep 13 20:56:45.417016: | encryption algorithm AES_CCM_8, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: 14, IKEv2 id: 14
Sep 13 20:56:45.417018: | IKEv1 ESP ID id: 14 enum name: AES_CCM_A
Sep 13 20:56:45.417020: | IKEv2 ID id: 14 enum name: AES_CCM_A
Sep 13 20:56:45.417022: | encryption algorithm 3DES_CBC, IKEv1 OAKLEY id: 5, IKEv1 ESP_INFO id: 3, IKEv2 id: 3
Sep 13 20:56:45.417025: | IKEv1 OAKLEY ID id: 5 enum name: 3DES_CBC
Sep 13 20:56:45.417027: | IKEv1 ESP ID id: 3 enum name: 3DES
Sep 13 20:56:45.417029: | IKEv2 ID id: 3 enum name: 3DES
Sep 13 20:56:45.417031: | encryption algorithm CAMELLIA_CTR, IKEv1 OAKLEY id: 24, IKEv1 ESP_INFO id: 24, IKEv2 id: 24
Sep 13 20:56:45.417033: | IKEv1 OAKLEY ID id: 24 enum name: CAMELLIA_CTR
Sep 13 20:56:45.417035: | IKEv1 ESP ID id: 24 enum name: CAMELLIA_CTR
Sep 13 20:56:45.417037: | IKEv2 ID id: 24 enum name: CAMELLIA_CTR
Sep 13 20:56:45.417039: | encryption algorithm CAMELLIA_CBC, IKEv1 OAKLEY id: 8, IKEv1 ESP_INFO id: 22, IKEv2 id: 23
Sep 13 20:56:45.417042: | IKEv1 OAKLEY ID id: 8 enum name: CAMELLIA_CBC
Sep 13 20:56:45.417044: | IKEv1 ESP ID id: 22 enum name: CAMELLIA
Sep 13 20:56:45.417045: | IKEv2 ID id: 23 enum name: CAMELLIA_CBC
Sep 13 20:56:45.417048: | encryption algorithm AES_GCM_16, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: 20, IKEv2 id: 20
Sep 13 20:56:45.417050: | IKEv1 ESP ID id: 20 enum name: AES_GCM_C
Sep 13 20:56:45.417052: | IKEv2 ID id: 20 enum name: AES_GCM_C
Sep 13 20:56:45.417054: | encryption algorithm AES_GCM_12, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: 19, IKEv2 id: 19
Sep 13 20:56:45.417056: | IKEv1 ESP ID id: 19 enum name: AES_GCM_B
Sep 13 20:56:45.417058: | IKEv2 ID id: 19 enum name: AES_GCM_B
Sep 13 20:56:45.417061: | encryption algorithm AES_GCM_8, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: 18, IKEv2 id: 18
Sep 13 20:56:45.417063: | IKEv1 ESP ID id: 18 enum name: AES_GCM_A
Sep 13 20:56:45.417065: | IKEv2 ID id: 18 enum name: AES_GCM_A
Sep 13 20:56:45.417067: | encryption algorithm AES_CTR, IKEv1 OAKLEY id: 13, IKEv1 ESP_INFO id: 13, IKEv2 id: 13
Sep 13 20:56:45.417069: | IKEv1 OAKLEY ID id: 13 enum name: AES_CTR
Sep 13 20:56:45.417071: | IKEv1 ESP ID id: 13 enum name: AES_CTR
Sep 13 20:56:45.417073: | IKEv2 ID id: 13 enum name: AES_CTR
Sep 13 20:56:45.417075: | encryption algorithm AES_CBC, IKEv1 OAKLEY id: 7, IKEv1 ESP_INFO id: 12, IKEv2 id: 12
Sep 13 20:56:45.417077: | IKEv1 OAKLEY ID id: 7 enum name: AES_CBC
Sep 13 20:56:45.417079: | IKEv1 ESP ID id: 12 enum name: AES
Sep 13 20:56:45.417081: | IKEv2 ID id: 12 enum name: AES_CBC
Sep 13 20:56:45.417083: | encryption algorithm SERPENT_CBC, IKEv1 OAKLEY id: 65004, IKEv1 ESP_INFO id: 252, IKEv2 id: 65004
Sep 13 20:56:45.417086: | IKEv1 OAKLEY ID id: 65004 enum name: SERPENT_CBC
Sep 13 20:56:45.417088: | IKEv1 ESP ID id: 252 enum name: SERPENT
Sep 13 20:56:45.417089: | IKEv2 ID id: 65004 enum name: SERPENT_CBC
Sep 13 20:56:45.417092: | encryption algorithm TWOFISH_CBC, IKEv1 OAKLEY id: 65005, IKEv1 ESP_INFO id: 253, IKEv2 id: 65005
Sep 13 20:56:45.417094: | IKEv1 OAKLEY ID id: 65005 enum name: TWOFISH_CBC
Sep 13 20:56:45.417096: | IKEv1 ESP ID id: 253 enum name: TWOFISH
Sep 13 20:56:45.417098: | IKEv2 ID id: 65005 enum name: TWOFISH_CBC
Sep 13 20:56:45.417100: | encryption algorithm TWOFISH_SSH, IKEv1 OAKLEY id: 65289, IKEv1 ESP_INFO id: -1, IKEv2 id: 65289
Sep 13 20:56:45.417102: | IKEv1 OAKLEY ID id: 65289 enum name: TWOFISH_CBC_SSH
Sep 13 20:56:45.417104: | IKEv2 ID id: 65289 enum name: TWOFISH_CBC_SSH
Sep 13 20:56:45.417107: | encryption algorithm NULL_AUTH_AES_GMAC, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: 23, IKEv2 id: 21
Sep 13 20:56:45.417112: | IKEv1 ESP ID id: 23 enum name: NULL_AUTH_AES_GMAC
Sep 13 20:56:45.417114: | IKEv2 ID id: 21 enum name: NULL_AUTH_AES_GMAC
Sep 13 20:56:45.417117: | encryption algorithm NULL, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: 11, IKEv2 id: 11
Sep 13 20:56:45.417119: | IKEv1 ESP ID id: 11 enum name: NULL
Sep 13 20:56:45.417121: | IKEv2 ID id: 11 enum name: NULL
Sep 13 20:56:45.417123: | encryption algorithm CHACHA20_POLY1305, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: -1, IKEv2 id: 28
Sep 13 20:56:45.417126: | IKEv2 ID id: 28 enum name: CHACHA20_POLY1305
Sep 13 20:56:45.417128: Encryption algorithms:
Sep 13 20:56:45.417132:   AES_CCM_16              IKEv1:     ESP     IKEv2:     ESP     FIPS  {256,192,*128}  aes_ccm, aes_ccm_c
Sep 13 20:56:45.417135:   AES_CCM_12              IKEv1:     ESP     IKEv2:     ESP     FIPS  {256,192,*128}  aes_ccm_b
Sep 13 20:56:45.417138:   AES_CCM_8               IKEv1:     ESP     IKEv2:     ESP     FIPS  {256,192,*128}  aes_ccm_a
Sep 13 20:56:45.417141:   3DES_CBC                IKEv1: IKE ESP     IKEv2: IKE ESP     FIPS  [*192]  3des
Sep 13 20:56:45.417143:   CAMELLIA_CTR            IKEv1:     ESP     IKEv2:     ESP           {256,192,*128}
Sep 13 20:56:45.417146:   CAMELLIA_CBC            IKEv1: IKE ESP     IKEv2: IKE ESP           {256,192,*128}  camellia
Sep 13 20:56:45.417149:   AES_GCM_16              IKEv1:     ESP     IKEv2: IKE ESP     FIPS  {256,192,*128}  aes_gcm, aes_gcm_c
Sep 13 20:56:45.417151:   AES_GCM_12              IKEv1:     ESP     IKEv2: IKE ESP     FIPS  {256,192,*128}  aes_gcm_b
Sep 13 20:56:45.417154:   AES_GCM_8               IKEv1:     ESP     IKEv2: IKE ESP     FIPS  {256,192,*128}  aes_gcm_a
Sep 13 20:56:45.417156:   AES_CTR                 IKEv1: IKE ESP     IKEv2: IKE ESP     FIPS  {256,192,*128}  aesctr
Sep 13 20:56:45.417159:   AES_CBC                 IKEv1: IKE ESP     IKEv2: IKE ESP     FIPS  {256,192,*128}  aes
Sep 13 20:56:45.417162:   SERPENT_CBC             IKEv1: IKE ESP     IKEv2: IKE ESP           {256,192,*128}  serpent
Sep 13 20:56:45.417164:   TWOFISH_CBC             IKEv1: IKE ESP     IKEv2: IKE ESP           {256,192,*128}  twofish
Sep 13 20:56:45.417167:   TWOFISH_SSH             IKEv1: IKE         IKEv2: IKE ESP           {256,192,*128}  twofish_cbc_ssh
Sep 13 20:56:45.417170:   NULL_AUTH_AES_GMAC      IKEv1:     ESP     IKEv2:     ESP     FIPS  {256,192,*128}  aes_gmac
Sep 13 20:56:45.417172:   NULL                    IKEv1:     ESP     IKEv2:     ESP           []
Sep 13 20:56:45.417175:   CHACHA20_POLY1305       IKEv1:             IKEv2: IKE ESP           [*256]  chacha20poly1305
Sep 13 20:56:45.417177: | hash algorithm assertion checks
Sep 13 20:56:45.417178: | hash algorithm MD5, IKEv1 OAKLEY id: 1, IKEv1 ESP_INFO id: -1, IKEv2 id: -1
Sep 13 20:56:45.417181: | IKEv1 OAKLEY ID id: 1 enum name: MD5
Sep 13 20:56:45.417183: | hash algorithm SHA1, IKEv1 OAKLEY id: 2, IKEv1 ESP_INFO id: -1, IKEv2 id: -1
Sep 13 20:56:45.417185: | IKEv1 OAKLEY ID id: 2 enum name: SHA1
Sep 13 20:56:45.417187: | hash algorithm SHA2_256, IKEv1 OAKLEY id: 4, IKEv1 ESP_INFO id: -1, IKEv2 id: -1
Sep 13 20:56:45.417189: | IKEv1 OAKLEY ID id: 4 enum name: SHA2_256
Sep 13 20:56:45.417192: | hash algorithm SHA2_384, IKEv1 OAKLEY id: 5, IKEv1 ESP_INFO id: -1, IKEv2 id: -1
Sep 13 20:56:45.417194: | IKEv1 OAKLEY ID id: 5 enum name: SHA2_384
Sep 13 20:56:45.417196: | hash algorithm SHA2_512, IKEv1 OAKLEY id: 6, IKEv1 ESP_INFO id: -1, IKEv2 id: -1
Sep 13 20:56:45.417198: | IKEv1 OAKLEY ID id: 6 enum name: SHA2_512
Sep 13 20:56:45.417200: Hash algorithms:
Sep 13 20:56:45.417202:   MD5                     IKEv1: IKE         IKEv2:                 
Sep 13 20:56:45.417204:   SHA1                    IKEv1: IKE         IKEv2:             FIPS  sha
Sep 13 20:56:45.417207:   SHA2_256                IKEv1: IKE         IKEv2:             FIPS  sha2, sha256
Sep 13 20:56:45.417209:   SHA2_384                IKEv1: IKE         IKEv2:             FIPS  sha384
Sep 13 20:56:45.417211:   SHA2_512                IKEv1: IKE         IKEv2:             FIPS  sha512
Sep 13 20:56:45.417215: | PRF algorithm assertion checks
Sep 13 20:56:45.417217: | PRF algorithm HMAC_MD5, IKEv1 OAKLEY id: 1, IKEv1 ESP_INFO id: -1, IKEv2 id: 1
Sep 13 20:56:45.417219: | IKEv1 OAKLEY ID id: 1 enum name: MD5
Sep 13 20:56:45.417221: | IKEv2 ID id: 1 enum name: HMAC_MD5
Sep 13 20:56:45.417224: | PRF algorithm HMAC_SHA1, IKEv1 OAKLEY id: 2, IKEv1 ESP_INFO id: -1, IKEv2 id: 2
Sep 13 20:56:45.417226: | IKEv1 OAKLEY ID id: 2 enum name: SHA1
Sep 13 20:56:45.417228: | IKEv2 ID id: 2 enum name: HMAC_SHA1
Sep 13 20:56:45.417230: | PRF algorithm HMAC_SHA2_256, IKEv1 OAKLEY id: 4, IKEv1 ESP_INFO id: -1, IKEv2 id: 5
Sep 13 20:56:45.417233: | IKEv1 OAKLEY ID id: 4 enum name: SHA2_256
Sep 13 20:56:45.417235: | IKEv2 ID id: 5 enum name: HMAC_SHA2_256
Sep 13 20:56:45.417237: | PRF algorithm HMAC_SHA2_384, IKEv1 OAKLEY id: 5, IKEv1 ESP_INFO id: -1, IKEv2 id: 6
Sep 13 20:56:45.417239: | IKEv1 OAKLEY ID id: 5 enum name: SHA2_384
Sep 13 20:56:45.417241: | IKEv2 ID id: 6 enum name: HMAC_SHA2_384
Sep 13 20:56:45.417244: | PRF algorithm HMAC_SHA2_512, IKEv1 OAKLEY id: 6, IKEv1 ESP_INFO id: -1, IKEv2 id: 7
Sep 13 20:56:45.417246: | IKEv1 OAKLEY ID id: 6 enum name: SHA2_512
Sep 13 20:56:45.417248: | IKEv2 ID id: 7 enum name: HMAC_SHA2_512
Sep 13 20:56:45.417250: | PRF algorithm AES_XCBC, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: -1, IKEv2 id: 4
Sep 13 20:56:45.417252: | IKEv2 ID id: 4 enum name: AES128_XCBC
Sep 13 20:56:45.417254: PRF algorithms:
Sep 13 20:56:45.417256:   HMAC_MD5                IKEv1: IKE         IKEv2: IKE               md5
Sep 13 20:56:45.417259:   HMAC_SHA1               IKEv1: IKE         IKEv2: IKE         FIPS  sha, sha1
Sep 13 20:56:45.417261:   HMAC_SHA2_256           IKEv1: IKE         IKEv2: IKE         FIPS  sha2, sha256, sha2_256
Sep 13 20:56:45.417264:   HMAC_SHA2_384           IKEv1: IKE         IKEv2: IKE         FIPS  sha384, sha2_384
Sep 13 20:56:45.417266:   HMAC_SHA2_512           IKEv1: IKE         IKEv2: IKE         FIPS  sha512, sha2_512
Sep 13 20:56:45.417268:   AES_XCBC                IKEv1:             IKEv2: IKE               aes128_xcbc
Sep 13 20:56:45.417270: | integrity algorithm assertion checks
Sep 13 20:56:45.417272: | integrity algorithm HMAC_MD5_96, IKEv1 OAKLEY id: 1, IKEv1 ESP_INFO id: 1, IKEv2 id: 1
Sep 13 20:56:45.417274: | IKEv1 OAKLEY ID id: 1 enum name: MD5
Sep 13 20:56:45.417276: | IKEv1 ESP ID id: 1 enum name: HMAC_MD5
Sep 13 20:56:45.417278: | IKEv2 ID id: 1 enum name: HMAC_MD5_96
Sep 13 20:56:45.417281: | integrity algorithm HMAC_SHA1_96, IKEv1 OAKLEY id: 2, IKEv1 ESP_INFO id: 2, IKEv2 id: 2
Sep 13 20:56:45.417283: | IKEv1 OAKLEY ID id: 2 enum name: SHA1
Sep 13 20:56:45.417285: | IKEv1 ESP ID id: 2 enum name: HMAC_SHA1
Sep 13 20:56:45.417287: | IKEv2 ID id: 2 enum name: HMAC_SHA1_96
Sep 13 20:56:45.417290: | integrity algorithm HMAC_SHA2_512_256, IKEv1 OAKLEY id: 6, IKEv1 ESP_INFO id: 7, IKEv2 id: 14
Sep 13 20:56:45.417292: | IKEv1 OAKLEY ID id: 6 enum name: SHA2_512
Sep 13 20:56:45.417294: | IKEv1 ESP ID id: 7 enum name: HMAC_SHA2_512
Sep 13 20:56:45.417296: | IKEv2 ID id: 14 enum name: HMAC_SHA2_512_256
Sep 13 20:56:45.417299: | integrity algorithm HMAC_SHA2_384_192, IKEv1 OAKLEY id: 5, IKEv1 ESP_INFO id: 6, IKEv2 id: 13
Sep 13 20:56:45.417302: | IKEv1 OAKLEY ID id: 5 enum name: SHA2_384
Sep 13 20:56:45.417304: | IKEv1 ESP ID id: 6 enum name: HMAC_SHA2_384
Sep 13 20:56:45.417306: | IKEv2 ID id: 13 enum name: HMAC_SHA2_384_192
Sep 13 20:56:45.417309: | integrity algorithm HMAC_SHA2_256_128, IKEv1 OAKLEY id: 4, IKEv1 ESP_INFO id: 5, IKEv2 id: 12
Sep 13 20:56:45.417311: | IKEv1 OAKLEY ID id: 4 enum name: SHA2_256
Sep 13 20:56:45.417313: | IKEv1 ESP ID id: 5 enum name: HMAC_SHA2_256
Sep 13 20:56:45.417315: | IKEv2 ID id: 12 enum name: HMAC_SHA2_256_128
Sep 13 20:56:45.417318: | integrity algorithm HMAC_SHA2_256_TRUNCBUG, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: 252, IKEv2 id: -1
Sep 13 20:56:45.417321: | IKEv1 ESP ID id: 252 enum name: HMAC_SHA2_256_TRUNCBUG
Sep 13 20:56:45.417323: | integrity algorithm AES_XCBC_96, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: 9, IKEv2 id: 5
Sep 13 20:56:45.417327: | IKEv1 ESP ID id: 9 enum name: AES_XCBC
Sep 13 20:56:45.417329: | IKEv2 ID id: 5 enum name: AES_XCBC_96
Sep 13 20:56:45.417332: | integrity algorithm AES_CMAC_96, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: 250, IKEv2 id: 8
Sep 13 20:56:45.417334: | IKEv1 ESP ID id: 250 enum name: AES_CMAC_96
Sep 13 20:56:45.417336: | IKEv2 ID id: 8 enum name: AES_CMAC_96
Sep 13 20:56:45.417339: | integrity algorithm NONE, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: 0, IKEv2 id: 0
Sep 13 20:56:45.417341: | IKEv1 ESP ID id: 0 enum name: NONE
Sep 13 20:56:45.417343: | IKEv2 ID id: 0 enum name: NONE
Sep 13 20:56:45.417345: Integrity algorithms:
Sep 13 20:56:45.417347:   HMAC_MD5_96             IKEv1: IKE ESP AH  IKEv2: IKE ESP AH        md5, hmac_md5
Sep 13 20:56:45.417350:   HMAC_SHA1_96            IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS  sha, sha1, sha1_96, hmac_sha1
Sep 13 20:56:45.417353:   HMAC_SHA2_512_256       IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS  sha512, sha2_512, sha2_512_256, hmac_sha2_512
Sep 13 20:56:45.417355:   HMAC_SHA2_384_192       IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS  sha384, sha2_384, sha2_384_192, hmac_sha2_384
Sep 13 20:56:45.417358:   HMAC_SHA2_256_128       IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS  sha2, sha256, sha2_256, sha2_256_128, hmac_sha2_256
Sep 13 20:56:45.417361:   HMAC_SHA2_256_TRUNCBUG  IKEv1:     ESP AH  IKEv2:         AH      
Sep 13 20:56:45.417363:   AES_XCBC_96             IKEv1:     ESP AH  IKEv2: IKE ESP AH        aes_xcbc, aes128_xcbc, aes128_xcbc_96
Sep 13 20:56:45.417365:   AES_CMAC_96             IKEv1:     ESP AH  IKEv2:     ESP AH  FIPS  aes_cmac
Sep 13 20:56:45.417368:   NONE                    IKEv1:     ESP     IKEv2: IKE ESP     FIPS  null
Sep 13 20:56:45.417370: | DH algorithm assertion checks
Sep 13 20:56:45.417371: | DH algorithm NONE, IKEv1 OAKLEY id: -1, IKEv1 ESP_INFO id: -1, IKEv2 id: 0
Sep 13 20:56:45.417374: | IKEv2 ID id: 0 enum name: NONE
Sep 13 20:56:45.417376: | DH algorithm MODP1024, IKEv1 OAKLEY id: 2, IKEv1 ESP_INFO id: 2, IKEv2 id: 2
Sep 13 20:56:45.417378: | IKEv1 OAKLEY ID id: 2 enum name: MODP1024
Sep 13 20:56:45.417379: | IKEv1 ESP ID id: 2 enum name: MODP1024
Sep 13 20:56:45.417381: | IKEv2 ID id: 2 enum name: MODP1024
Sep 13 20:56:45.417383: | DH algorithm MODP1536, IKEv1 OAKLEY id: 5, IKEv1 ESP_INFO id: 5, IKEv2 id: 5
Sep 13 20:56:45.417385: | IKEv1 OAKLEY ID id: 5 enum name: MODP1536
Sep 13 20:56:45.417387: | IKEv1 ESP ID id: 5 enum name: MODP1536
Sep 13 20:56:45.417389: | IKEv2 ID id: 5 enum name: MODP1536
Sep 13 20:56:45.417391: | DH algorithm MODP2048, IKEv1 OAKLEY id: 14, IKEv1 ESP_INFO id: 14, IKEv2 id: 14
Sep 13 20:56:45.417393: | IKEv1 OAKLEY ID id: 14 enum name: MODP2048
Sep 13 20:56:45.417395: | IKEv1 ESP ID id: 14 enum name: MODP2048
Sep 13 20:56:45.417397: | IKEv2 ID id: 14 enum name: MODP2048
Sep 13 20:56:45.417399: | DH algorithm MODP3072, IKEv1 OAKLEY id: 15, IKEv1 ESP_INFO id: 15, IKEv2 id: 15
Sep 13 20:56:45.417401: | IKEv1 OAKLEY ID id: 15 enum name: MODP3072
Sep 13 20:56:45.417402: | IKEv1 ESP ID id: 15 enum name: MODP3072
Sep 13 20:56:45.417404: | IKEv2 ID id: 15 enum name: MODP3072
Sep 13 20:56:45.417406: | DH algorithm MODP4096, IKEv1 OAKLEY id: 16, IKEv1 ESP_INFO id: 16, IKEv2 id: 16
Sep 13 20:56:45.417408: | IKEv1 OAKLEY ID id: 16 enum name: MODP4096
Sep 13 20:56:45.417410: | IKEv1 ESP ID id: 16 enum name: MODP4096
Sep 13 20:56:45.417412: | IKEv2 ID id: 16 enum name: MODP4096
Sep 13 20:56:45.417414: | DH algorithm MODP6144, IKEv1 OAKLEY id: 17, IKEv1 ESP_INFO id: 17, IKEv2 id: 17
Sep 13 20:56:45.417416: | IKEv1 OAKLEY ID id: 17 enum name: MODP6144
Sep 13 20:56:45.417417: | IKEv1 ESP ID id: 17 enum name: MODP6144
Sep 13 20:56:45.417419: | IKEv2 ID id: 17 enum name: MODP6144
Sep 13 20:56:45.417421: | DH algorithm MODP8192, IKEv1 OAKLEY id: 18, IKEv1 ESP_INFO id: 18, IKEv2 id: 18
Sep 13 20:56:45.417423: | IKEv1 OAKLEY ID id: 18 enum name: MODP8192
Sep 13 20:56:45.417425: | IKEv1 ESP ID id: 18 enum name: MODP8192
Sep 13 20:56:45.417427: | IKEv2 ID id: 18 enum name: MODP8192
Sep 13 20:56:45.417429: | DH algorithm DH19, IKEv1 OAKLEY id: 19, IKEv1 ESP_INFO id: -1, IKEv2 id: 19
Sep 13 20:56:45.417432: | IKEv1 OAKLEY ID id: 19 enum name: ECP_256
Sep 13 20:56:45.417434: | IKEv2 ID id: 19 enum name: ECP_256
Sep 13 20:56:45.417437: | DH algorithm DH20, IKEv1 OAKLEY id: 20, IKEv1 ESP_INFO id: -1, IKEv2 id: 20
Sep 13 20:56:45.417439: | IKEv1 OAKLEY ID id: 20 enum name: ECP_384
Sep 13 20:56:45.417440: | IKEv2 ID id: 20 enum name: ECP_384
Sep 13 20:56:45.417442: | DH algorithm DH21, IKEv1 OAKLEY id: 21, IKEv1 ESP_INFO id: -1, IKEv2 id: 21
Sep 13 20:56:45.417444: | IKEv1 OAKLEY ID id: 21 enum name: ECP_521
Sep 13 20:56:45.417446: | IKEv2 ID id: 21 enum name: ECP_521
Sep 13 20:56:45.417448: DH algorithms:
Sep 13 20:56:45.417451:   NONE                    IKEv1:             IKEv2: IKE ESP AH  FIPS  null, dh0
Sep 13 20:56:45.417453:   MODP1024                IKEv1: IKE ESP AH  IKEv2: IKE ESP AH        dh2
Sep 13 20:56:45.417455:   MODP1536                IKEv1: IKE ESP AH  IKEv2: IKE ESP AH        dh5
Sep 13 20:56:45.417457:   MODP2048                IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS  dh14
Sep 13 20:56:45.417459:   MODP3072                IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS  dh15
Sep 13 20:56:45.417461:   MODP4096                IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS  dh16
Sep 13 20:56:45.417464:   MODP6144                IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS  dh17
Sep 13 20:56:45.417466:   MODP8192                IKEv1: IKE ESP AH  IKEv2: IKE ESP AH  FIPS  dh18
Sep 13 20:56:45.417468:   DH19                    IKEv1: IKE         IKEv2: IKE ESP AH  FIPS  ecp_256, ecp256
Sep 13 20:56:45.417470:   DH20                    IKEv1: IKE         IKEv2: IKE ESP AH  FIPS  ecp_384, ecp384
Sep 13 20:56:45.417473:   DH21                    IKEv1: IKE         IKEv2: IKE ESP AH  FIPS  ecp_521, ecp521
Sep 13 20:56:45.417475: testing CAMELLIA_CBC:
Sep 13 20:56:45.417477:   Camellia: 16 bytes with 128-bit key
Sep 13 20:56:45.417479: | decode_to_chunk: raw_key: input "0x00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
Sep 13 20:56:45.417482: | decode_to_chunk: output: 
Sep 13 20:56:45.417483: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417501: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.417504: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.417505: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.417507: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.417509: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.417527: |     result: newref symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.417530: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.417532: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.417533: |     target: CAMELLIA_CBC
Sep 13 20:56:45.417536: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.417537: |     key_size: 16-bytes
Sep 13 20:56:45.417539: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.417541: |     operation: FLAGS_ONLY
Sep 13 20:56:45.417542: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.417548: |     result: newref symkey-key@0x55b124e39e10 (16-bytes, CAMELLIA_CBC)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.417550: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.417553: | decode_to_chunk: IV: : input "0x00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
Sep 13 20:56:45.417556: | decode_to_chunk: output: 
Sep 13 20:56:45.417557: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417559: | decode_to_chunk: new IV: : input "0x07 92 3A 39 EB 0A 81 7D 1C 4D 87 BD B8 2D 1F 1C"
Sep 13 20:56:45.417561: | decode_to_chunk: output: 
Sep 13 20:56:45.417563: |   07 92 3a 39  eb 0a 81 7d  1c 4d 87 bd  b8 2d 1f 1c
Sep 13 20:56:45.417565: | decode_to_chunk: plaintext: : input "0x80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
Sep 13 20:56:45.417567: | decode_to_chunk: output: 
Sep 13 20:56:45.417568: |   80 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417570: | decode_to_chunk: ciphertext: : input "0x07 92 3A 39 EB 0A 81 7D 1C 4D 87 BD B8 2D 1F 1C"
Sep 13 20:56:45.417574: | decode_to_chunk: output: 
Sep 13 20:56:45.417590: |   07 92 3a 39  eb 0a 81 7d  1c 4d 87 bd  b8 2d 1f 1c
Sep 13 20:56:45.417596: | NSS ike_alg_nss_cbc: camellia - enter
Sep 13 20:56:45.417614: | NSS ike_alg_nss_cbc: camellia - exit
Sep 13 20:56:45.417617: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.417619: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.417621: | decode_to_chunk: IV: : input "0x00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
Sep 13 20:56:45.417624: | decode_to_chunk: output: 
Sep 13 20:56:45.417625: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417627: | decode_to_chunk: new IV: : input "0x07 92 3A 39 EB 0A 81 7D 1C 4D 87 BD B8 2D 1F 1C"
Sep 13 20:56:45.417629: | decode_to_chunk: output: 
Sep 13 20:56:45.417631: |   07 92 3a 39  eb 0a 81 7d  1c 4d 87 bd  b8 2d 1f 1c
Sep 13 20:56:45.417632: | decode_to_chunk: cipertext: : input "0x07 92 3A 39 EB 0A 81 7D 1C 4D 87 BD B8 2D 1F 1C"
Sep 13 20:56:45.417634: | decode_to_chunk: output: 
Sep 13 20:56:45.417636: |   07 92 3a 39  eb 0a 81 7d  1c 4d 87 bd  b8 2d 1f 1c
Sep 13 20:56:45.417638: | decode_to_chunk: plaintext: : input "0x80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
Sep 13 20:56:45.417640: | decode_to_chunk: output: 
Sep 13 20:56:45.417641: |   80 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417643: | NSS ike_alg_nss_cbc: camellia - enter
Sep 13 20:56:45.417648: | NSS ike_alg_nss_cbc: camellia - exit
Sep 13 20:56:45.417650: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.417652: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.417654: | test_cbc_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.417657: | test_ctr_vector: Camellia: 16 bytes with 128-bit key passed
Sep 13 20:56:45.417659:   Camellia: 16 bytes with 128-bit key
Sep 13 20:56:45.417661: | decode_to_chunk: raw_key: input "0x00 11 22 33 44 55 66 77 88 99 AA BB CC DD EE FF"
Sep 13 20:56:45.417663: | decode_to_chunk: output: 
Sep 13 20:56:45.417664: |   00 11 22 33  44 55 66 77  88 99 aa bb  cc dd ee ff
Sep 13 20:56:45.417667: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.417668: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.417670: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.417672: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.417674: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.417684: |     result: newref symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.417687: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.417689: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.417690: |     target: CAMELLIA_CBC
Sep 13 20:56:45.417692: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.417694: |     key_size: 16-bytes
Sep 13 20:56:45.417695: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.417697: |     operation: FLAGS_ONLY
Sep 13 20:56:45.417699: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.417704: |     result: newref symkey-key@0x55b124e39e10 (16-bytes, CAMELLIA_CBC)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.417706: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.417708: | decode_to_chunk: IV: : input "0x00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
Sep 13 20:56:45.417710: | decode_to_chunk: output: 
Sep 13 20:56:45.417712: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417714: | decode_to_chunk: new IV: : input "0x14 4D 2B 0F 50 0C 27 B7 EC 2C D1 2D 91 59 6F 37"
Sep 13 20:56:45.417716: | decode_to_chunk: output: 
Sep 13 20:56:45.417718: |   14 4d 2b 0f  50 0c 27 b7  ec 2c d1 2d  91 59 6f 37
Sep 13 20:56:45.417719: | decode_to_chunk: plaintext: : input "0x00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 "
Sep 13 20:56:45.417721: | decode_to_chunk: output: 
Sep 13 20:56:45.417723: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 01
Sep 13 20:56:45.417725: | decode_to_chunk: ciphertext: : input "0x14 4D 2B 0F 50 0C 27 B7 EC 2C D1 2D 91 59 6F 37"
Sep 13 20:56:45.417730: | decode_to_chunk: output: 
Sep 13 20:56:45.417731: |   14 4d 2b 0f  50 0c 27 b7  ec 2c d1 2d  91 59 6f 37
Sep 13 20:56:45.417733: | NSS ike_alg_nss_cbc: camellia - enter
Sep 13 20:56:45.417737: | NSS ike_alg_nss_cbc: camellia - exit
Sep 13 20:56:45.417739: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.417741: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.417743: | decode_to_chunk: IV: : input "0x00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
Sep 13 20:56:45.417745: | decode_to_chunk: output: 
Sep 13 20:56:45.417747: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417748: | decode_to_chunk: new IV: : input "0x14 4D 2B 0F 50 0C 27 B7 EC 2C D1 2D 91 59 6F 37"
Sep 13 20:56:45.417750: | decode_to_chunk: output: 
Sep 13 20:56:45.417752: |   14 4d 2b 0f  50 0c 27 b7  ec 2c d1 2d  91 59 6f 37
Sep 13 20:56:45.417754: | decode_to_chunk: cipertext: : input "0x14 4D 2B 0F 50 0C 27 B7 EC 2C D1 2D 91 59 6F 37"
Sep 13 20:56:45.417756: | decode_to_chunk: output: 
Sep 13 20:56:45.417757: |   14 4d 2b 0f  50 0c 27 b7  ec 2c d1 2d  91 59 6f 37
Sep 13 20:56:45.417759: | decode_to_chunk: plaintext: : input "0x00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 "
Sep 13 20:56:45.417761: | decode_to_chunk: output: 
Sep 13 20:56:45.417762: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 01
Sep 13 20:56:45.417764: | NSS ike_alg_nss_cbc: camellia - enter
Sep 13 20:56:45.417768: | NSS ike_alg_nss_cbc: camellia - exit
Sep 13 20:56:45.417770: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.417771: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.417773: | test_cbc_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.417776: | test_ctr_vector: Camellia: 16 bytes with 128-bit key passed
Sep 13 20:56:45.417778:   Camellia: 16 bytes with 256-bit key
Sep 13 20:56:45.417780: | decode_to_chunk: raw_key: input "0x00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
Sep 13 20:56:45.417782: | decode_to_chunk: output: 
Sep 13 20:56:45.417784: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417785: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417787: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.417789: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.417791: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.417792: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.417794: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.417804: |     result: newref symkey-key@0x55b124e3b690 (48-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.417806: |     key-offset: 0, key-size: 32
Sep 13 20:56:45.417808: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.417810: |     target: CAMELLIA_CBC
Sep 13 20:56:45.417811: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.417813: |     key_size: 32-bytes
Sep 13 20:56:45.417815: |     base: base-key@0x55b124e3b690 (48-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.417816: |     operation: FLAGS_ONLY
Sep 13 20:56:45.417818: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.417823: |     result: newref symkey-key@0x55b124e39e10 (32-bytes, CAMELLIA_CBC)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.417825: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.417827: | decode_to_chunk: IV: : input "0x00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
Sep 13 20:56:45.417830: | decode_to_chunk: output: 
Sep 13 20:56:45.417831: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417833: | decode_to_chunk: new IV: : input "0xB0 C6 B8 8A EA 51 8A B0 9E 84 72 48 E9 1B 1B 9D"
Sep 13 20:56:45.417835: | decode_to_chunk: output: 
Sep 13 20:56:45.417837: |   b0 c6 b8 8a  ea 51 8a b0  9e 84 72 48  e9 1b 1b 9d
Sep 13 20:56:45.417838: | decode_to_chunk: plaintext: : input "0x80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
Sep 13 20:56:45.417840: | decode_to_chunk: output: 
Sep 13 20:56:45.417842: |   80 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417846: | decode_to_chunk: ciphertext: : input "0xB0 C6 B8 8A EA 51 8A B0 9E 84 72 48 E9 1B 1B 9D"
Sep 13 20:56:45.417848: | decode_to_chunk: output: 
Sep 13 20:56:45.417850: |   b0 c6 b8 8a  ea 51 8a b0  9e 84 72 48  e9 1b 1b 9d
Sep 13 20:56:45.417851: | NSS ike_alg_nss_cbc: camellia - enter
Sep 13 20:56:45.417857: | NSS ike_alg_nss_cbc: camellia - exit
Sep 13 20:56:45.417859: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.417861: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.417863: | decode_to_chunk: IV: : input "0x00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
Sep 13 20:56:45.417865: | decode_to_chunk: output: 
Sep 13 20:56:45.417867: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417868: | decode_to_chunk: new IV: : input "0xB0 C6 B8 8A EA 51 8A B0 9E 84 72 48 E9 1B 1B 9D"
Sep 13 20:56:45.417870: | decode_to_chunk: output: 
Sep 13 20:56:45.417872: |   b0 c6 b8 8a  ea 51 8a b0  9e 84 72 48  e9 1b 1b 9d
Sep 13 20:56:45.417874: | decode_to_chunk: cipertext: : input "0xB0 C6 B8 8A EA 51 8A B0 9E 84 72 48 E9 1B 1B 9D"
Sep 13 20:56:45.417876: | decode_to_chunk: output: 
Sep 13 20:56:45.417877: |   b0 c6 b8 8a  ea 51 8a b0  9e 84 72 48  e9 1b 1b 9d
Sep 13 20:56:45.417879: | decode_to_chunk: plaintext: : input "0x80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
Sep 13 20:56:45.417881: | decode_to_chunk: output: 
Sep 13 20:56:45.417882: |   80 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417884: | NSS ike_alg_nss_cbc: camellia - enter
Sep 13 20:56:45.417889: | NSS ike_alg_nss_cbc: camellia - exit
Sep 13 20:56:45.417891: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.417893: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.417895: | test_cbc_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.417897: | test_ctr_vector: Camellia: 16 bytes with 256-bit key passed
Sep 13 20:56:45.417899:   Camellia: 16 bytes with 256-bit key
Sep 13 20:56:45.417901: | decode_to_chunk: raw_key: input "0x00 11 22 33 44 55 66 77 88 99 AA BB CC DD EE FF FF EE DD CC BB AA 99 88 77 66 55 44 33 22 11 00"
Sep 13 20:56:45.417903: | decode_to_chunk: output: 
Sep 13 20:56:45.417905: |   00 11 22 33  44 55 66 77  88 99 aa bb  cc dd ee ff
Sep 13 20:56:45.417907: |   ff ee dd cc  bb aa 99 88  77 66 55 44  33 22 11 00
Sep 13 20:56:45.417909: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.417910: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.417912: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.417914: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.417915: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.417925: |     result: newref symkey-key@0x55b124e3b690 (48-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.417928: |     key-offset: 0, key-size: 32
Sep 13 20:56:45.417929: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.417931: |     target: CAMELLIA_CBC
Sep 13 20:56:45.417932: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.417934: |     key_size: 32-bytes
Sep 13 20:56:45.417936: |     base: base-key@0x55b124e3b690 (48-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.417937: |     operation: FLAGS_ONLY
Sep 13 20:56:45.417939: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.417944: |     result: newref symkey-key@0x55b124e39e10 (32-bytes, CAMELLIA_CBC)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.417946: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.417948: | decode_to_chunk: IV: : input "0x00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
Sep 13 20:56:45.417951: | decode_to_chunk: output: 
Sep 13 20:56:45.417952: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417954: | decode_to_chunk: new IV: : input "0xCC 39 FF EE 18 56 D3 EB 61 02 5E 93 21 9B 65 23 "
Sep 13 20:56:45.417956: | decode_to_chunk: output: 
Sep 13 20:56:45.417958: |   cc 39 ff ee  18 56 d3 eb  61 02 5e 93  21 9b 65 23
Sep 13 20:56:45.417959: | decode_to_chunk: plaintext: : input "0x00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01"
Sep 13 20:56:45.417963: | decode_to_chunk: output: 
Sep 13 20:56:45.417965: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 01
Sep 13 20:56:45.417967: | decode_to_chunk: ciphertext: : input "0xCC 39 FF EE 18 56 D3 EB 61 02 5E 93 21 9B 65 23 "
Sep 13 20:56:45.417969: | decode_to_chunk: output: 
Sep 13 20:56:45.417970: |   cc 39 ff ee  18 56 d3 eb  61 02 5e 93  21 9b 65 23
Sep 13 20:56:45.417972: | NSS ike_alg_nss_cbc: camellia - enter
Sep 13 20:56:45.417976: | NSS ike_alg_nss_cbc: camellia - exit
Sep 13 20:56:45.417978: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.417980: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.417982: | decode_to_chunk: IV: : input "0x00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
Sep 13 20:56:45.417984: | decode_to_chunk: output: 
Sep 13 20:56:45.417986: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.417987: | decode_to_chunk: new IV: : input "0xCC 39 FF EE 18 56 D3 EB 61 02 5E 93 21 9B 65 23 "
Sep 13 20:56:45.417989: | decode_to_chunk: output: 
Sep 13 20:56:45.417991: |   cc 39 ff ee  18 56 d3 eb  61 02 5e 93  21 9b 65 23
Sep 13 20:56:45.417993: | decode_to_chunk: cipertext: : input "0xCC 39 FF EE 18 56 D3 EB 61 02 5E 93 21 9B 65 23 "
Sep 13 20:56:45.417995: | decode_to_chunk: output: 
Sep 13 20:56:45.417996: |   cc 39 ff ee  18 56 d3 eb  61 02 5e 93  21 9b 65 23
Sep 13 20:56:45.417998: | decode_to_chunk: plaintext: : input "0x00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01"
Sep 13 20:56:45.418000: | decode_to_chunk: output: 
Sep 13 20:56:45.418001: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 01
Sep 13 20:56:45.418003: | NSS ike_alg_nss_cbc: camellia - enter
Sep 13 20:56:45.418007: | NSS ike_alg_nss_cbc: camellia - exit
Sep 13 20:56:45.418009: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.418011: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.418013: | test_cbc_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.418015: | test_ctr_vector: Camellia: 16 bytes with 256-bit key passed
Sep 13 20:56:45.418017: testing AES_GCM_16:
Sep 13 20:56:45.418019:   empty string
Sep 13 20:56:45.418021: | decode_to_chunk: raw_key: input "0xcf063a34d4a9a76c2c86787d3f96db71"
Sep 13 20:56:45.418023: | decode_to_chunk: output: 
Sep 13 20:56:45.418025: |   cf 06 3a 34  d4 a9 a7 6c  2c 86 78 7d  3f 96 db 71
Sep 13 20:56:45.418027: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418028: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.418030: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.418032: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418033: |     params: 16-bytes@0x7ffee51a5ae0
Sep 13 20:56:45.418043: |     result: newref symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.418046: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.418047: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.418049: |     target: AES_GCM
Sep 13 20:56:45.418050: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.418052: |     key_size: 16-bytes
Sep 13 20:56:45.418054: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.418055: |     operation: FLAGS_ONLY
Sep 13 20:56:45.418057: |     params: 8-bytes@0x7ffee51a5ac8
Sep 13 20:56:45.418062: |     result: newref symkey-key@0x55b124e39e10 (16-bytes, AES_GCM)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.418064: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.418067: | decode_to_chunk: salted IV: input "0x113b9785971864c83b01c787"
Sep 13 20:56:45.418069: | decode_to_chunk: output: 
Sep 13 20:56:45.418071: |   11 3b 97 85  97 18 64 c8  3b 01 c7 87
Sep 13 20:56:45.418072: | decode_to_chunk: AAD: input ""
Sep 13 20:56:45.418074: | decode_to_chunk: output: 
Sep 13 20:56:45.418076: | 
Sep 13 20:56:45.418078: | decode_to_chunk: plaintext: input ""
Sep 13 20:56:45.418079: | decode_to_chunk: output: 
Sep 13 20:56:45.418081: | 
Sep 13 20:56:45.418083: | decode_to_chunk: ciphertext: input ""
Sep 13 20:56:45.418084: | decode_to_chunk: output: 
Sep 13 20:56:45.418086: | 
Sep 13 20:56:45.418089: | decode_to_chunk: tag: input "0x72ac8493e3a5228b5d130a69d2510e42"
Sep 13 20:56:45.418092: | decode_to_chunk: output: 
Sep 13 20:56:45.418093: |   72 ac 84 93  e3 a5 22 8b  5d 13 0a 69  d2 51 0e 42
Sep 13 20:56:45.418096: | test_gcm_vector: decrypt: aad-size=0 salt-size=4 wire-IV-size=8 text-size=0 tag-size=16
Sep 13 20:56:45.418097: | test_gcm_vector: text+tag on call
Sep 13 20:56:45.418099: |   72 ac 84 93  e3 a5 22 8b  5d 13 0a 69  d2 51 0e 42
Sep 13 20:56:45.418108: | verify_chunk_data: output ciphertext: ok
Sep 13 20:56:45.418110: | verify_chunk_data: TAG: ok
Sep 13 20:56:45.418112: | test_gcm_vector: text+tag on return
Sep 13 20:56:45.418114: |   72 ac 84 93  e3 a5 22 8b  5d 13 0a 69  d2 51 0e 42
Sep 13 20:56:45.418116: | test_gcm_vector: encrypt: aad-size=0 salt-size=4 wire-IV-size=8 text-size=0 tag-size=16
Sep 13 20:56:45.418117: | test_gcm_vector: text+tag on call
Sep 13 20:56:45.418119: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.418123: | verify_chunk_data: output ciphertext: ok
Sep 13 20:56:45.418125: | verify_chunk_data: TAG: ok
Sep 13 20:56:45.418126: | test_gcm_vector: text+tag on return
Sep 13 20:56:45.418128: |   72 ac 84 93  e3 a5 22 8b  5d 13 0a 69  d2 51 0e 42
Sep 13 20:56:45.418130: | test_gcm_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.418133: | test_gcm_vector: passed
Sep 13 20:56:45.418134:   one block
Sep 13 20:56:45.418136: | decode_to_chunk: raw_key: input "0xe98b72a9881a84ca6b76e0f43e68647a"
Sep 13 20:56:45.418138: | decode_to_chunk: output: 
Sep 13 20:56:45.418140: |   e9 8b 72 a9  88 1a 84 ca  6b 76 e0 f4  3e 68 64 7a
Sep 13 20:56:45.418142: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418143: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.418145: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.418147: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418149: |     params: 16-bytes@0x7ffee51a5ae0
Sep 13 20:56:45.418158: |     result: newref symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.418161: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.418162: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.418164: |     target: AES_GCM
Sep 13 20:56:45.418165: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.418167: |     key_size: 16-bytes
Sep 13 20:56:45.418169: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.418170: |     operation: FLAGS_ONLY
Sep 13 20:56:45.418172: |     params: 8-bytes@0x7ffee51a5ac8
Sep 13 20:56:45.418177: |     result: newref symkey-key@0x55b124e39e10 (16-bytes, AES_GCM)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.418179: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.418182: | decode_to_chunk: salted IV: input "0x8b23299fde174053f3d652ba"
Sep 13 20:56:45.418184: | decode_to_chunk: output: 
Sep 13 20:56:45.418185: |   8b 23 29 9f  de 17 40 53  f3 d6 52 ba
Sep 13 20:56:45.418187: | decode_to_chunk: AAD: input ""
Sep 13 20:56:45.418189: | decode_to_chunk: output: 
Sep 13 20:56:45.418190: | 
Sep 13 20:56:45.418192: | decode_to_chunk: plaintext: input "0x28286a321293253c3e0aa2704a278032"
Sep 13 20:56:45.418194: | decode_to_chunk: output: 
Sep 13 20:56:45.418196: |   28 28 6a 32  12 93 25 3c  3e 0a a2 70  4a 27 80 32
Sep 13 20:56:45.418198: | decode_to_chunk: ciphertext: input "0x5a3c1cf1985dbb8bed818036fdd5ab42"
Sep 13 20:56:45.418200: | decode_to_chunk: output: 
Sep 13 20:56:45.418201: |   5a 3c 1c f1  98 5d bb 8b  ed 81 80 36  fd d5 ab 42
Sep 13 20:56:45.418203: | decode_to_chunk: tag: input "0x23c7ab0f952b7091cd324835043b5eb5"
Sep 13 20:56:45.418205: | decode_to_chunk: output: 
Sep 13 20:56:45.418207: |   23 c7 ab 0f  95 2b 70 91  cd 32 48 35  04 3b 5e b5
Sep 13 20:56:45.418209: | test_gcm_vector: decrypt: aad-size=0 salt-size=4 wire-IV-size=8 text-size=16 tag-size=16
Sep 13 20:56:45.418211: | test_gcm_vector: text+tag on call
Sep 13 20:56:45.418212: |   5a 3c 1c f1  98 5d bb 8b  ed 81 80 36  fd d5 ab 42
Sep 13 20:56:45.418214: |   23 c7 ab 0f  95 2b 70 91  cd 32 48 35  04 3b 5e b5
Sep 13 20:56:45.418223: | verify_chunk_data: output ciphertext: ok
Sep 13 20:56:45.418226: | verify_chunk_data: TAG: ok
Sep 13 20:56:45.418227: | test_gcm_vector: text+tag on return
Sep 13 20:56:45.418229: |   28 28 6a 32  12 93 25 3c  3e 0a a2 70  4a 27 80 32
Sep 13 20:56:45.418231: |   23 c7 ab 0f  95 2b 70 91  cd 32 48 35  04 3b 5e b5
Sep 13 20:56:45.418232: | test_gcm_vector: encrypt: aad-size=0 salt-size=4 wire-IV-size=8 text-size=16 tag-size=16
Sep 13 20:56:45.418234: | test_gcm_vector: text+tag on call
Sep 13 20:56:45.418236: |   28 28 6a 32  12 93 25 3c  3e 0a a2 70  4a 27 80 32
Sep 13 20:56:45.418237: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.418241: | verify_chunk_data: output ciphertext: ok
Sep 13 20:56:45.418243: | verify_chunk_data: TAG: ok
Sep 13 20:56:45.418244: | test_gcm_vector: text+tag on return
Sep 13 20:56:45.418246: |   5a 3c 1c f1  98 5d bb 8b  ed 81 80 36  fd d5 ab 42
Sep 13 20:56:45.418248: |   23 c7 ab 0f  95 2b 70 91  cd 32 48 35  04 3b 5e b5
Sep 13 20:56:45.418250: | test_gcm_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.418252: | test_gcm_vector: passed
Sep 13 20:56:45.418254:   two blocks
Sep 13 20:56:45.418256: | decode_to_chunk: raw_key: input "0xbfd414a6212958a607a0f5d3ab48471d"
Sep 13 20:56:45.418258: | decode_to_chunk: output: 
Sep 13 20:56:45.418259: |   bf d4 14 a6  21 29 58 a6  07 a0 f5 d3  ab 48 47 1d
Sep 13 20:56:45.418261: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418263: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.418265: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.418266: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418268: |     params: 16-bytes@0x7ffee51a5ae0
Sep 13 20:56:45.418277: |     result: newref symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.418280: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.418281: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.418283: |     target: AES_GCM
Sep 13 20:56:45.418285: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.418286: |     key_size: 16-bytes
Sep 13 20:56:45.418288: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.418290: |     operation: FLAGS_ONLY
Sep 13 20:56:45.418291: |     params: 8-bytes@0x7ffee51a5ac8
Sep 13 20:56:45.418296: |     result: newref symkey-key@0x55b124e39e10 (16-bytes, AES_GCM)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.418298: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.418301: | decode_to_chunk: salted IV: input "0x86d8ea0ab8e40dcc481cd0e2"
Sep 13 20:56:45.418303: | decode_to_chunk: output: 
Sep 13 20:56:45.418305: |   86 d8 ea 0a  b8 e4 0d cc  48 1c d0 e2
Sep 13 20:56:45.418306: | decode_to_chunk: AAD: input ""
Sep 13 20:56:45.418308: | decode_to_chunk: output: 
Sep 13 20:56:45.418310: | 
Sep 13 20:56:45.418311: | decode_to_chunk: plaintext: input "0xa6b76a066e63392c9443e60272ceaeb9d25c991b0f2e55e2804e168c05ea591a"
Sep 13 20:56:45.418314: | decode_to_chunk: output: 
Sep 13 20:56:45.418315: |   a6 b7 6a 06  6e 63 39 2c  94 43 e6 02  72 ce ae b9
Sep 13 20:56:45.418317: |   d2 5c 99 1b  0f 2e 55 e2  80 4e 16 8c  05 ea 59 1a
Sep 13 20:56:45.418319: | decode_to_chunk: ciphertext: input "0x62171db33193292d930bf6647347652c1ef33316d7feca99d54f1db4fcf513f8"
Sep 13 20:56:45.418321: | decode_to_chunk: output: 
Sep 13 20:56:45.418323: |   62 17 1d b3  31 93 29 2d  93 0b f6 64  73 47 65 2c
Sep 13 20:56:45.418324: |   1e f3 33 16  d7 fe ca 99  d5 4f 1d b4  fc f5 13 f8
Sep 13 20:56:45.418326: | decode_to_chunk: tag: input "0xc28280aa5c6c7a8bd366f28c1cfd1f6e"
Sep 13 20:56:45.418328: | decode_to_chunk: output: 
Sep 13 20:56:45.418330: |   c2 82 80 aa  5c 6c 7a 8b  d3 66 f2 8c  1c fd 1f 6e
Sep 13 20:56:45.418332: | test_gcm_vector: decrypt: aad-size=0 salt-size=4 wire-IV-size=8 text-size=32 tag-size=16
Sep 13 20:56:45.418333: | test_gcm_vector: text+tag on call
Sep 13 20:56:45.418335: |   62 17 1d b3  31 93 29 2d  93 0b f6 64  73 47 65 2c
Sep 13 20:56:45.418339: |   1e f3 33 16  d7 fe ca 99  d5 4f 1d b4  fc f5 13 f8
Sep 13 20:56:45.418341: |   c2 82 80 aa  5c 6c 7a 8b  d3 66 f2 8c  1c fd 1f 6e
Sep 13 20:56:45.418345: | verify_chunk_data: output ciphertext: ok
Sep 13 20:56:45.418347: | verify_chunk_data: TAG: ok
Sep 13 20:56:45.418348: | test_gcm_vector: text+tag on return
Sep 13 20:56:45.418350: |   a6 b7 6a 06  6e 63 39 2c  94 43 e6 02  72 ce ae b9
Sep 13 20:56:45.418352: |   d2 5c 99 1b  0f 2e 55 e2  80 4e 16 8c  05 ea 59 1a
Sep 13 20:56:45.418353: |   c2 82 80 aa  5c 6c 7a 8b  d3 66 f2 8c  1c fd 1f 6e
Sep 13 20:56:45.418355: | test_gcm_vector: encrypt: aad-size=0 salt-size=4 wire-IV-size=8 text-size=32 tag-size=16
Sep 13 20:56:45.418357: | test_gcm_vector: text+tag on call
Sep 13 20:56:45.418358: |   a6 b7 6a 06  6e 63 39 2c  94 43 e6 02  72 ce ae b9
Sep 13 20:56:45.418360: |   d2 5c 99 1b  0f 2e 55 e2  80 4e 16 8c  05 ea 59 1a
Sep 13 20:56:45.418362: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.418365: | verify_chunk_data: output ciphertext: ok
Sep 13 20:56:45.418367: | verify_chunk_data: TAG: ok
Sep 13 20:56:45.418368: | test_gcm_vector: text+tag on return
Sep 13 20:56:45.418370: |   62 17 1d b3  31 93 29 2d  93 0b f6 64  73 47 65 2c
Sep 13 20:56:45.418372: |   1e f3 33 16  d7 fe ca 99  d5 4f 1d b4  fc f5 13 f8
Sep 13 20:56:45.418373: |   c2 82 80 aa  5c 6c 7a 8b  d3 66 f2 8c  1c fd 1f 6e
Sep 13 20:56:45.418375: | test_gcm_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.418378: | test_gcm_vector: passed
Sep 13 20:56:45.418380:   two blocks with associated data
Sep 13 20:56:45.418381: | decode_to_chunk: raw_key: input "0x006c458100fc5f4d62949d2c833b82d1"
Sep 13 20:56:45.418383: | decode_to_chunk: output: 
Sep 13 20:56:45.418385: |   00 6c 45 81  00 fc 5f 4d  62 94 9d 2c  83 3b 82 d1
Sep 13 20:56:45.418387: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418389: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.418390: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.418392: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418394: |     params: 16-bytes@0x7ffee51a5ae0
Sep 13 20:56:45.418403: |     result: newref symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.418406: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.418407: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.418409: |     target: AES_GCM
Sep 13 20:56:45.418410: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.418412: |     key_size: 16-bytes
Sep 13 20:56:45.418414: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.418415: |     operation: FLAGS_ONLY
Sep 13 20:56:45.418417: |     params: 8-bytes@0x7ffee51a5ac8
Sep 13 20:56:45.418422: |     result: newref symkey-key@0x55b124e39e10 (16-bytes, AES_GCM)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.418424: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.418427: | decode_to_chunk: salted IV: input "0xa4e9c4bc5725a21ff42c82b2"
Sep 13 20:56:45.418429: | decode_to_chunk: output: 
Sep 13 20:56:45.418430: |   a4 e9 c4 bc  57 25 a2 1f  f4 2c 82 b2
Sep 13 20:56:45.418432: | decode_to_chunk: AAD: input "0x2efb14fb3657cdd6b9a8ff1a5f5a39b9"
Sep 13 20:56:45.418434: | decode_to_chunk: output: 
Sep 13 20:56:45.418436: |   2e fb 14 fb  36 57 cd d6  b9 a8 ff 1a  5f 5a 39 b9
Sep 13 20:56:45.418438: | decode_to_chunk: plaintext: input "0xf381d3bfbee0a879f7a4e17b623278cedd6978053dd313530a18f1a836100950"
Sep 13 20:56:45.418440: | decode_to_chunk: output: 
Sep 13 20:56:45.418442: |   f3 81 d3 bf  be e0 a8 79  f7 a4 e1 7b  62 32 78 ce
Sep 13 20:56:45.418443: |   dd 69 78 05  3d d3 13 53  0a 18 f1 a8  36 10 09 50
Sep 13 20:56:45.418445: | decode_to_chunk: ciphertext: input "0xf39b4db3542d8542fb73fd2d66be568f26d7f814b3f87d1eceac3dd09a8d697e"
Sep 13 20:56:45.418447: | decode_to_chunk: output: 
Sep 13 20:56:45.418449: |   f3 9b 4d b3  54 2d 85 42  fb 73 fd 2d  66 be 56 8f
Sep 13 20:56:45.418451: |   26 d7 f8 14  b3 f8 7d 1e  ce ac 3d d0  9a 8d 69 7e
Sep 13 20:56:45.418452: | decode_to_chunk: tag: input "0x39f045cb23b698c925db134d56c5"
Sep 13 20:56:45.418456: | decode_to_chunk: output: 
Sep 13 20:56:45.418458: |   39 f0 45 cb  23 b6 98 c9  25 db 13 4d  56 c5
Sep 13 20:56:45.418460: | test_gcm_vector: decrypt: aad-size=16 salt-size=4 wire-IV-size=8 text-size=32 tag-size=14
Sep 13 20:56:45.418462: | test_gcm_vector: text+tag on call
Sep 13 20:56:45.418463: |   f3 9b 4d b3  54 2d 85 42  fb 73 fd 2d  66 be 56 8f
Sep 13 20:56:45.418465: |   26 d7 f8 14  b3 f8 7d 1e  ce ac 3d d0  9a 8d 69 7e
Sep 13 20:56:45.418467: |   39 f0 45 cb  23 b6 98 c9  25 db 13 4d  56 c5
Sep 13 20:56:45.418470: | verify_chunk_data: output ciphertext: ok
Sep 13 20:56:45.418473: | verify_chunk_data: TAG: ok
Sep 13 20:56:45.418474: | test_gcm_vector: text+tag on return
Sep 13 20:56:45.418476: |   f3 81 d3 bf  be e0 a8 79  f7 a4 e1 7b  62 32 78 ce
Sep 13 20:56:45.418477: |   dd 69 78 05  3d d3 13 53  0a 18 f1 a8  36 10 09 50
Sep 13 20:56:45.418479: |   39 f0 45 cb  23 b6 98 c9  25 db 13 4d  56 c5
Sep 13 20:56:45.418481: | test_gcm_vector: encrypt: aad-size=16 salt-size=4 wire-IV-size=8 text-size=32 tag-size=14
Sep 13 20:56:45.418483: | test_gcm_vector: text+tag on call
Sep 13 20:56:45.418484: |   f3 81 d3 bf  be e0 a8 79  f7 a4 e1 7b  62 32 78 ce
Sep 13 20:56:45.418486: |   dd 69 78 05  3d d3 13 53  0a 18 f1 a8  36 10 09 50
Sep 13 20:56:45.418487: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00
Sep 13 20:56:45.418491: | verify_chunk_data: output ciphertext: ok
Sep 13 20:56:45.418493: | verify_chunk_data: TAG: ok
Sep 13 20:56:45.418494: | test_gcm_vector: text+tag on return
Sep 13 20:56:45.418496: |   f3 9b 4d b3  54 2d 85 42  fb 73 fd 2d  66 be 56 8f
Sep 13 20:56:45.418498: |   26 d7 f8 14  b3 f8 7d 1e  ce ac 3d d0  9a 8d 69 7e
Sep 13 20:56:45.418499: |   39 f0 45 cb  23 b6 98 c9  25 db 13 4d  56 c5
Sep 13 20:56:45.418501: | test_gcm_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.418503: | test_gcm_vector: passed
Sep 13 20:56:45.418505: testing AES_CTR:
Sep 13 20:56:45.418507:   Encrypting 16 octets using AES-CTR with 128-bit key
Sep 13 20:56:45.418509: | decode_to_chunk: raw_key: input "0x AE 68 52 F8 12 10 67 CC 4B F7 A5 76 55 77 F3 9E"
Sep 13 20:56:45.418511: | decode_to_chunk: output: 
Sep 13 20:56:45.418513: |   ae 68 52 f8  12 10 67 cc  4b f7 a5 76  55 77 f3 9e
Sep 13 20:56:45.418515: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418516: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.418518: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.418520: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418522: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.418531: |     result: newref symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.418533: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.418535: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.418537: |     target: AES_CTR
Sep 13 20:56:45.418538: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.418540: |     key_size: 16-bytes
Sep 13 20:56:45.418541: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.418543: |     operation: FLAGS_ONLY
Sep 13 20:56:45.418545: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.418550: |     result: newref symkey-key@0x55b124e39e10 (16-bytes, AES_CTR)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.418552: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.418554: | decode_to_chunk: input counter-block: : input "0x 00 00 00 30  00 00 00 00 00 00 00 00  00 00 00 01"
Sep 13 20:56:45.418557: | decode_to_chunk: output: 
Sep 13 20:56:45.418558: |   00 00 00 30  00 00 00 00  00 00 00 00  00 00 00 01
Sep 13 20:56:45.418560: | decode_to_chunk: Plaintext: input "0x 53 69 6E 67 6C 65 20 62 6C 6F 63 6B 20 6D 73 67"
Sep 13 20:56:45.418562: | decode_to_chunk: output: 
Sep 13 20:56:45.418564: |   53 69 6e 67  6c 65 20 62  6c 6f 63 6b  20 6d 73 67
Sep 13 20:56:45.418565: | decode_to_chunk: Ciphertext: input "0x E4 09 5D 4F B7 A7 B3 79 2D 61 75 A3 26 13 11 B8"
Sep 13 20:56:45.418569: | decode_to_chunk: output: 
Sep 13 20:56:45.418571: |   e4 09 5d 4f  b7 a7 b3 79  2d 61 75 a3  26 13 11 b8
Sep 13 20:56:45.418573: | decode_to_chunk: expected counter-block: : input "0x 00 00 00 30 00 00 00 00 00 00 00 00 00 00 00 02"
Sep 13 20:56:45.418607: | decode_to_chunk: output: 
Sep 13 20:56:45.418611: |   00 00 00 30  00 00 00 00  00 00 00 00  00 00 00 02
Sep 13 20:56:45.418613: | do_aes_ctr: enter
Sep 13 20:56:45.418619: | do_aes_ctr: counter-block updated from 0x1 to 0x2 for 16 bytes
Sep 13 20:56:45.418621: | do_aes_ctr: exit
Sep 13 20:56:45.418622: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.418624: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.418626: | decode_to_chunk: input counter-block: : input "0x 00 00 00 30  00 00 00 00 00 00 00 00  00 00 00 01"
Sep 13 20:56:45.418628: | decode_to_chunk: output: 
Sep 13 20:56:45.418630: |   00 00 00 30  00 00 00 00  00 00 00 00  00 00 00 01
Sep 13 20:56:45.418632: | decode_to_chunk: Ciphertext: input "0x E4 09 5D 4F B7 A7 B3 79 2D 61 75 A3 26 13 11 B8"
Sep 13 20:56:45.418634: | decode_to_chunk: output: 
Sep 13 20:56:45.418635: |   e4 09 5d 4f  b7 a7 b3 79  2d 61 75 a3  26 13 11 b8
Sep 13 20:56:45.418637: | decode_to_chunk: Plaintext: input "0x 53 69 6E 67 6C 65 20 62 6C 6F 63 6B 20 6D 73 67"
Sep 13 20:56:45.418639: | decode_to_chunk: output: 
Sep 13 20:56:45.418640: |   53 69 6e 67  6c 65 20 62  6c 6f 63 6b  20 6d 73 67
Sep 13 20:56:45.418642: | decode_to_chunk: expected counter-block: : input "0x 00 00 00 30 00 00 00 00 00 00 00 00 00 00 00 02"
Sep 13 20:56:45.418644: | decode_to_chunk: output: 
Sep 13 20:56:45.418646: |   00 00 00 30  00 00 00 00  00 00 00 00  00 00 00 02
Sep 13 20:56:45.418647: | do_aes_ctr: enter
Sep 13 20:56:45.418651: | do_aes_ctr: counter-block updated from 0x1 to 0x2 for 16 bytes
Sep 13 20:56:45.418652: | do_aes_ctr: exit
Sep 13 20:56:45.418654: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.418656: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.418658: | test_ctr_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.418661: | test_ctr_vector: Encrypting 16 octets using AES-CTR with 128-bit key passed
Sep 13 20:56:45.418663:   Encrypting 32 octets using AES-CTR with 128-bit key
Sep 13 20:56:45.418665: | decode_to_chunk: raw_key: input "0x 7E 24 06 78 17 FA E0 D7 43 D6 CE 1F 32 53 91 63"
Sep 13 20:56:45.418667: | decode_to_chunk: output: 
Sep 13 20:56:45.418668: |   7e 24 06 78  17 fa e0 d7  43 d6 ce 1f  32 53 91 63
Sep 13 20:56:45.418670: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418672: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.418674: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.418676: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418677: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.418687: |     result: newref symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.418690: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.418692: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.418693: |     target: AES_CTR
Sep 13 20:56:45.418695: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.418696: |     key_size: 16-bytes
Sep 13 20:56:45.418698: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.418700: |     operation: FLAGS_ONLY
Sep 13 20:56:45.418701: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.418706: |     result: newref symkey-key@0x55b124e39e10 (16-bytes, AES_CTR)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.418709: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.418711: | decode_to_chunk: input counter-block: : input "0x 00 6C B6 DB C0 54 3B 59 DA 48 D9 0B 00 00 00 01"
Sep 13 20:56:45.418713: | decode_to_chunk: output: 
Sep 13 20:56:45.418715: |   00 6c b6 db  c0 54 3b 59  da 48 d9 0b  00 00 00 01
Sep 13 20:56:45.418717: | decode_to_chunk: Plaintext: input "0x00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F"
Sep 13 20:56:45.418719: | decode_to_chunk: output: 
Sep 13 20:56:45.418724: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.418726: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.418727: | decode_to_chunk: Ciphertext: input "0x51 04 A1 06 16 8A 72 D9 79 0D 41 EE 8E DA D3 88EB 2E 1E FC 46 DA 57 C8 FC E6 30 DF 91 41 BE 28"
Sep 13 20:56:45.418730: | decode_to_chunk: output: 
Sep 13 20:56:45.418732: |   51 04 a1 06  16 8a 72 d9  79 0d 41 ee  8e da d3 88
Sep 13 20:56:45.418733: |   eb 2e 1e fc  46 da 57 c8  fc e6 30 df  91 41 be 28
Sep 13 20:56:45.418735: | decode_to_chunk: expected counter-block: : input "0x 00 6C B6 DB C0 54 3B 59 DA 48 D9 0B 00 00 00 03"
Sep 13 20:56:45.418737: | decode_to_chunk: output: 
Sep 13 20:56:45.418739: |   00 6c b6 db  c0 54 3b 59  da 48 d9 0b  00 00 00 03
Sep 13 20:56:45.418740: | do_aes_ctr: enter
Sep 13 20:56:45.418744: | do_aes_ctr: counter-block updated from 0x1 to 0x3 for 32 bytes
Sep 13 20:56:45.418746: | do_aes_ctr: exit
Sep 13 20:56:45.418748: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.418749: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.418751: | decode_to_chunk: input counter-block: : input "0x 00 6C B6 DB C0 54 3B 59 DA 48 D9 0B 00 00 00 01"
Sep 13 20:56:45.418753: | decode_to_chunk: output: 
Sep 13 20:56:45.418755: |   00 6c b6 db  c0 54 3b 59  da 48 d9 0b  00 00 00 01
Sep 13 20:56:45.418757: | decode_to_chunk: Ciphertext: input "0x51 04 A1 06 16 8A 72 D9 79 0D 41 EE 8E DA D3 88EB 2E 1E FC 46 DA 57 C8 FC E6 30 DF 91 41 BE 28"
Sep 13 20:56:45.418759: | decode_to_chunk: output: 
Sep 13 20:56:45.418761: |   51 04 a1 06  16 8a 72 d9  79 0d 41 ee  8e da d3 88
Sep 13 20:56:45.418762: |   eb 2e 1e fc  46 da 57 c8  fc e6 30 df  91 41 be 28
Sep 13 20:56:45.418764: | decode_to_chunk: Plaintext: input "0x00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F"
Sep 13 20:56:45.418766: | decode_to_chunk: output: 
Sep 13 20:56:45.418768: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.418769: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.418771: | decode_to_chunk: expected counter-block: : input "0x 00 6C B6 DB C0 54 3B 59 DA 48 D9 0B 00 00 00 03"
Sep 13 20:56:45.418773: | decode_to_chunk: output: 
Sep 13 20:56:45.418775: |   00 6c b6 db  c0 54 3b 59  da 48 d9 0b  00 00 00 03
Sep 13 20:56:45.418776: | do_aes_ctr: enter
Sep 13 20:56:45.418779: | do_aes_ctr: counter-block updated from 0x1 to 0x3 for 32 bytes
Sep 13 20:56:45.418781: | do_aes_ctr: exit
Sep 13 20:56:45.418783: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.418784: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.418787: | test_ctr_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.418789: | test_ctr_vector: Encrypting 32 octets using AES-CTR with 128-bit key passed
Sep 13 20:56:45.418791:   Encrypting 36 octets using AES-CTR with 128-bit key
Sep 13 20:56:45.418793: | decode_to_chunk: raw_key: input "0x 76 91 BE 03 5E 50 20 A8 AC 6E 61 85 29 F9 A0 DC"
Sep 13 20:56:45.418795: | decode_to_chunk: output: 
Sep 13 20:56:45.418796: |   76 91 be 03  5e 50 20 a8  ac 6e 61 85  29 f9 a0 dc
Sep 13 20:56:45.418798: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418800: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.418801: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.418803: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418805: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.418814: |     result: newref symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.418817: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.418818: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.418820: |     target: AES_CTR
Sep 13 20:56:45.418821: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.418823: |     key_size: 16-bytes
Sep 13 20:56:45.418825: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.418826: |     operation: FLAGS_ONLY
Sep 13 20:56:45.418828: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.418833: |     result: newref symkey-key@0x55b124e39e10 (16-bytes, AES_CTR)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.418837: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.418840: | decode_to_chunk: input counter-block: : input "0x 00 E0 01 7B  27 77 7F 3F 4A 17 86 F0  00 00 00 01"
Sep 13 20:56:45.418843: | decode_to_chunk: output: 
Sep 13 20:56:45.418844: |   00 e0 01 7b  27 77 7f 3f  4a 17 86 f0  00 00 00 01
Sep 13 20:56:45.418846: | decode_to_chunk: Plaintext: input "0x00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F20 21 22 23"
Sep 13 20:56:45.418849: | decode_to_chunk: output: 
Sep 13 20:56:45.418850: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.418852: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.418854: |   20 21 22 23
Sep 13 20:56:45.418855: | decode_to_chunk: Ciphertext: input "0xC1 CF 48 A8 9F 2F FD D9 CF 46 52 E9 EF DB 72 D745 40 A4 2B DE 6D 78 36 D5 9A 5C EA AE F3 10 5325 B2 07 2F"
Sep 13 20:56:45.418858: | decode_to_chunk: output: 
Sep 13 20:56:45.418859: |   c1 cf 48 a8  9f 2f fd d9  cf 46 52 e9  ef db 72 d7
Sep 13 20:56:45.418861: |   45 40 a4 2b  de 6d 78 36  d5 9a 5c ea  ae f3 10 53
Sep 13 20:56:45.418863: |   25 b2 07 2f
Sep 13 20:56:45.418864: | decode_to_chunk: expected counter-block: : input "0x 00 E0 01 7B  27 77 7F 3F 4A 17 86 F0  00 00 00 04"
Sep 13 20:56:45.418866: | decode_to_chunk: output: 
Sep 13 20:56:45.418868: |   00 e0 01 7b  27 77 7f 3f  4a 17 86 f0  00 00 00 04
Sep 13 20:56:45.418870: | do_aes_ctr: enter
Sep 13 20:56:45.418873: | do_aes_ctr: counter-block updated from 0x1 to 0x4 for 36 bytes
Sep 13 20:56:45.418875: | do_aes_ctr: exit
Sep 13 20:56:45.418877: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.418878: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.418880: | decode_to_chunk: input counter-block: : input "0x 00 E0 01 7B  27 77 7F 3F 4A 17 86 F0  00 00 00 01"
Sep 13 20:56:45.418882: | decode_to_chunk: output: 
Sep 13 20:56:45.418884: |   00 e0 01 7b  27 77 7f 3f  4a 17 86 f0  00 00 00 01
Sep 13 20:56:45.418886: | decode_to_chunk: Ciphertext: input "0xC1 CF 48 A8 9F 2F FD D9 CF 46 52 E9 EF DB 72 D745 40 A4 2B DE 6D 78 36 D5 9A 5C EA AE F3 10 5325 B2 07 2F"
Sep 13 20:56:45.418888: | decode_to_chunk: output: 
Sep 13 20:56:45.418889: |   c1 cf 48 a8  9f 2f fd d9  cf 46 52 e9  ef db 72 d7
Sep 13 20:56:45.418891: |   45 40 a4 2b  de 6d 78 36  d5 9a 5c ea  ae f3 10 53
Sep 13 20:56:45.418893: |   25 b2 07 2f
Sep 13 20:56:45.418894: | decode_to_chunk: Plaintext: input "0x00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F20 21 22 23"
Sep 13 20:56:45.418897: | decode_to_chunk: output: 
Sep 13 20:56:45.418898: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.418900: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.418901: |   20 21 22 23
Sep 13 20:56:45.418903: | decode_to_chunk: expected counter-block: : input "0x 00 E0 01 7B  27 77 7F 3F 4A 17 86 F0  00 00 00 04"
Sep 13 20:56:45.418905: | decode_to_chunk: output: 
Sep 13 20:56:45.418907: |   00 e0 01 7b  27 77 7f 3f  4a 17 86 f0  00 00 00 04
Sep 13 20:56:45.418908: | do_aes_ctr: enter
Sep 13 20:56:45.418911: | do_aes_ctr: counter-block updated from 0x1 to 0x4 for 36 bytes
Sep 13 20:56:45.418913: | do_aes_ctr: exit
Sep 13 20:56:45.418915: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.418916: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.418918: | test_ctr_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.418921: | test_ctr_vector: Encrypting 36 octets using AES-CTR with 128-bit key passed
Sep 13 20:56:45.418923:   Encrypting 16 octets using AES-CTR with 192-bit key
Sep 13 20:56:45.418924: | decode_to_chunk: raw_key: input "0x16 AF 5B 14 5F C9 F5 79 C1 75 F9 3E 3B FB 0E ED86 3D 06 CC FD B7 85 15"
Sep 13 20:56:45.418927: | decode_to_chunk: output: 
Sep 13 20:56:45.418928: |   16 af 5b 14  5f c9 f5 79  c1 75 f9 3e  3b fb 0e ed
Sep 13 20:56:45.418930: |   86 3d 06 cc  fd b7 85 15
Sep 13 20:56:45.418932: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418935: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.418937: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.418939: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.418941: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.418950: |     result: newref symkey-key@0x55b124e3b690 (40-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.418953: |     key-offset: 0, key-size: 24
Sep 13 20:56:45.418955: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.418956: |     target: AES_CTR
Sep 13 20:56:45.418958: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.418959: |     key_size: 24-bytes
Sep 13 20:56:45.418961: |     base: base-key@0x55b124e3b690 (40-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.418963: |     operation: FLAGS_ONLY
Sep 13 20:56:45.418964: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.418969: |     result: newref symkey-key@0x55b124e39e10 (24-bytes, AES_CTR)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.418971: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.418974: | decode_to_chunk: input counter-block: : input "0x 00 00 00 48  36 73 3C 14 7D 6D 93 CB  00 00 00 01"
Sep 13 20:56:45.418976: | decode_to_chunk: output: 
Sep 13 20:56:45.418978: |   00 00 00 48  36 73 3c 14  7d 6d 93 cb  00 00 00 01
Sep 13 20:56:45.418979: | decode_to_chunk: Plaintext: input "0x 53 69 6E 67 6C 65 20 62 6C 6F 63 6B 20 6D 73 67"
Sep 13 20:56:45.418981: | decode_to_chunk: output: 
Sep 13 20:56:45.418983: |   53 69 6e 67  6c 65 20 62  6c 6f 63 6b  20 6d 73 67
Sep 13 20:56:45.418985: | decode_to_chunk: Ciphertext: input "0x 4B 55 38 4F E2 59 C9 C8 4E 79 35 A0 03 CB E9 28"
Sep 13 20:56:45.418987: | decode_to_chunk: output: 
Sep 13 20:56:45.418988: |   4b 55 38 4f  e2 59 c9 c8  4e 79 35 a0  03 cb e9 28
Sep 13 20:56:45.418990: | decode_to_chunk: expected counter-block: : input "0x 00 00 00 48  36 73 3C 14 7D 6D 93 CB  00 00 00 02"
Sep 13 20:56:45.418992: | decode_to_chunk: output: 
Sep 13 20:56:45.418994: |   00 00 00 48  36 73 3c 14  7d 6d 93 cb  00 00 00 02
Sep 13 20:56:45.418995: | do_aes_ctr: enter
Sep 13 20:56:45.418999: | do_aes_ctr: counter-block updated from 0x1 to 0x2 for 16 bytes
Sep 13 20:56:45.419001: | do_aes_ctr: exit
Sep 13 20:56:45.419002: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.419004: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.419006: | decode_to_chunk: input counter-block: : input "0x 00 00 00 48  36 73 3C 14 7D 6D 93 CB  00 00 00 01"
Sep 13 20:56:45.419008: | decode_to_chunk: output: 
Sep 13 20:56:45.419010: |   00 00 00 48  36 73 3c 14  7d 6d 93 cb  00 00 00 01
Sep 13 20:56:45.419011: | decode_to_chunk: Ciphertext: input "0x 4B 55 38 4F E2 59 C9 C8 4E 79 35 A0 03 CB E9 28"
Sep 13 20:56:45.419013: | decode_to_chunk: output: 
Sep 13 20:56:45.419015: |   4b 55 38 4f  e2 59 c9 c8  4e 79 35 a0  03 cb e9 28
Sep 13 20:56:45.419017: | decode_to_chunk: Plaintext: input "0x 53 69 6E 67 6C 65 20 62 6C 6F 63 6B 20 6D 73 67"
Sep 13 20:56:45.419019: | decode_to_chunk: output: 
Sep 13 20:56:45.419020: |   53 69 6e 67  6c 65 20 62  6c 6f 63 6b  20 6d 73 67
Sep 13 20:56:45.419022: | decode_to_chunk: expected counter-block: : input "0x 00 00 00 48  36 73 3C 14 7D 6D 93 CB  00 00 00 02"
Sep 13 20:56:45.419024: | decode_to_chunk: output: 
Sep 13 20:56:45.419025: |   00 00 00 48  36 73 3c 14  7d 6d 93 cb  00 00 00 02
Sep 13 20:56:45.419027: | do_aes_ctr: enter
Sep 13 20:56:45.419030: | do_aes_ctr: counter-block updated from 0x1 to 0x2 for 16 bytes
Sep 13 20:56:45.419032: | do_aes_ctr: exit
Sep 13 20:56:45.419034: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.419035: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.419037: | test_ctr_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.419039: | test_ctr_vector: Encrypting 16 octets using AES-CTR with 192-bit key passed
Sep 13 20:56:45.419041:   Encrypting 32 octets using AES-CTR with 192-bit key
Sep 13 20:56:45.419043: | decode_to_chunk: raw_key: input "0x7C 5C B2 40 1B 3D C3 3C 19 E7 34 08 19 E0 F6 9C67 8C 3D B8 E6 F6 A9 1A"
Sep 13 20:56:45.419048: | decode_to_chunk: output: 
Sep 13 20:56:45.419049: |   7c 5c b2 40  1b 3d c3 3c  19 e7 34 08  19 e0 f6 9c
Sep 13 20:56:45.419051: |   67 8c 3d b8  e6 f6 a9 1a
Sep 13 20:56:45.419053: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419055: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.419056: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.419058: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419060: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.419069: |     result: newref symkey-key@0x55b124e3b690 (40-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.419071: |     key-offset: 0, key-size: 24
Sep 13 20:56:45.419073: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.419075: |     target: AES_CTR
Sep 13 20:56:45.419076: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.419078: |     key_size: 24-bytes
Sep 13 20:56:45.419080: |     base: base-key@0x55b124e3b690 (40-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.419081: |     operation: FLAGS_ONLY
Sep 13 20:56:45.419083: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.419088: |     result: newref symkey-key@0x55b124e39e10 (24-bytes, AES_CTR)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.419090: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.419092: | decode_to_chunk: input counter-block: : input "0x 00 96 B0 3B  02 0C 6E AD C2 CB 50 0D  00 00 00 01"
Sep 13 20:56:45.419095: | decode_to_chunk: output: 
Sep 13 20:56:45.419096: |   00 96 b0 3b  02 0c 6e ad  c2 cb 50 0d  00 00 00 01
Sep 13 20:56:45.419098: | decode_to_chunk: Plaintext: input "0x00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F"
Sep 13 20:56:45.419100: | decode_to_chunk: output: 
Sep 13 20:56:45.419102: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.419104: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.419105: | decode_to_chunk: Ciphertext: input "0x45 32 43 FC 60 9B 23 32 7E DF AA FA 71 31 CD 9F84 90 70 1C 5A D4 A7 9C FC 1F E0 FF 42 F4 FB 00"
Sep 13 20:56:45.419108: | decode_to_chunk: output: 
Sep 13 20:56:45.419109: |   45 32 43 fc  60 9b 23 32  7e df aa fa  71 31 cd 9f
Sep 13 20:56:45.419111: |   84 90 70 1c  5a d4 a7 9c  fc 1f e0 ff  42 f4 fb 00
Sep 13 20:56:45.419113: | decode_to_chunk: expected counter-block: : input "0x 00 96 B0 3B  02 0C 6E AD C2 CB 50 0D  00 00 00 03"
Sep 13 20:56:45.419115: | decode_to_chunk: output: 
Sep 13 20:56:45.419116: |   00 96 b0 3b  02 0c 6e ad  c2 cb 50 0d  00 00 00 03
Sep 13 20:56:45.419118: | do_aes_ctr: enter
Sep 13 20:56:45.419121: | do_aes_ctr: counter-block updated from 0x1 to 0x3 for 32 bytes
Sep 13 20:56:45.419123: | do_aes_ctr: exit
Sep 13 20:56:45.419125: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.419126: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.419128: | decode_to_chunk: input counter-block: : input "0x 00 96 B0 3B  02 0C 6E AD C2 CB 50 0D  00 00 00 01"
Sep 13 20:56:45.419130: | decode_to_chunk: output: 
Sep 13 20:56:45.419132: |   00 96 b0 3b  02 0c 6e ad  c2 cb 50 0d  00 00 00 01
Sep 13 20:56:45.419133: | decode_to_chunk: Ciphertext: input "0x45 32 43 FC 60 9B 23 32 7E DF AA FA 71 31 CD 9F84 90 70 1C 5A D4 A7 9C FC 1F E0 FF 42 F4 FB 00"
Sep 13 20:56:45.419136: | decode_to_chunk: output: 
Sep 13 20:56:45.419137: |   45 32 43 fc  60 9b 23 32  7e df aa fa  71 31 cd 9f
Sep 13 20:56:45.419139: |   84 90 70 1c  5a d4 a7 9c  fc 1f e0 ff  42 f4 fb 00
Sep 13 20:56:45.419141: | decode_to_chunk: Plaintext: input "0x00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F"
Sep 13 20:56:45.419143: | decode_to_chunk: output: 
Sep 13 20:56:45.419145: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.419146: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.419148: | decode_to_chunk: expected counter-block: : input "0x 00 96 B0 3B  02 0C 6E AD C2 CB 50 0D  00 00 00 03"
Sep 13 20:56:45.419150: | decode_to_chunk: output: 
Sep 13 20:56:45.419153: |   00 96 b0 3b  02 0c 6e ad  c2 cb 50 0d  00 00 00 03
Sep 13 20:56:45.419155: | do_aes_ctr: enter
Sep 13 20:56:45.419158: | do_aes_ctr: counter-block updated from 0x1 to 0x3 for 32 bytes
Sep 13 20:56:45.419160: | do_aes_ctr: exit
Sep 13 20:56:45.419162: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.419163: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.419165: | test_ctr_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.419168: | test_ctr_vector: Encrypting 32 octets using AES-CTR with 192-bit key passed
Sep 13 20:56:45.419170:   Encrypting 36 octets using AES-CTR with 192-bit key
Sep 13 20:56:45.419171: | decode_to_chunk: raw_key: input "0x02 BF 39 1E E8 EC B1 59 B9 59 61 7B 09 65 27 9BF5 9B 60 A7 86 D3 E0 FE"
Sep 13 20:56:45.419174: | decode_to_chunk: output: 
Sep 13 20:56:45.419175: |   02 bf 39 1e  e8 ec b1 59  b9 59 61 7b  09 65 27 9b
Sep 13 20:56:45.419177: |   f5 9b 60 a7  86 d3 e0 fe
Sep 13 20:56:45.419179: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419180: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.419182: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.419184: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419186: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.419195: |     result: newref symkey-key@0x55b124e3b690 (40-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.419197: |     key-offset: 0, key-size: 24
Sep 13 20:56:45.419199: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.419200: |     target: AES_CTR
Sep 13 20:56:45.419202: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.419203: |     key_size: 24-bytes
Sep 13 20:56:45.419205: |     base: base-key@0x55b124e3b690 (40-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.419207: |     operation: FLAGS_ONLY
Sep 13 20:56:45.419208: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.419213: |     result: newref symkey-key@0x55b124e39e10 (24-bytes, AES_CTR)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.419215: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.419218: | decode_to_chunk: input counter-block: : input "0x 00 07 BD FD  5C BD 60 27 8D CC 09 12  00 00 00 01"
Sep 13 20:56:45.419220: | decode_to_chunk: output: 
Sep 13 20:56:45.419222: |   00 07 bd fd  5c bd 60 27  8d cc 09 12  00 00 00 01
Sep 13 20:56:45.419224: | decode_to_chunk: Plaintext: input "0x00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F20 21 22 23"
Sep 13 20:56:45.419226: | decode_to_chunk: output: 
Sep 13 20:56:45.419228: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.419229: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.419231: |   20 21 22 23
Sep 13 20:56:45.419232: | decode_to_chunk: Ciphertext: input "0x96 89 3F C5 5E 5C 72 2F 54 0B 7D D1 DD F7 E7 58D2 88 BC 95 C6 91 65 88 45 36 C8 11 66 2F 21 88AB EE 09 35"
Sep 13 20:56:45.419235: | decode_to_chunk: output: 
Sep 13 20:56:45.419237: |   96 89 3f c5  5e 5c 72 2f  54 0b 7d d1  dd f7 e7 58
Sep 13 20:56:45.419238: |   d2 88 bc 95  c6 91 65 88  45 36 c8 11  66 2f 21 88
Sep 13 20:56:45.419240: |   ab ee 09 35
Sep 13 20:56:45.419241: | decode_to_chunk: expected counter-block: : input "0x 00 07 BD FD  5C BD 60 27 8D CC 09 12  00 00 00 04"
Sep 13 20:56:45.419243: | decode_to_chunk: output: 
Sep 13 20:56:45.419245: |   00 07 bd fd  5c bd 60 27  8d cc 09 12  00 00 00 04
Sep 13 20:56:45.419247: | do_aes_ctr: enter
Sep 13 20:56:45.419250: | do_aes_ctr: counter-block updated from 0x1 to 0x4 for 36 bytes
Sep 13 20:56:45.419252: | do_aes_ctr: exit
Sep 13 20:56:45.419254: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.419255: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.419257: | decode_to_chunk: input counter-block: : input "0x 00 07 BD FD  5C BD 60 27 8D CC 09 12  00 00 00 01"
Sep 13 20:56:45.419259: | decode_to_chunk: output: 
Sep 13 20:56:45.419261: |   00 07 bd fd  5c bd 60 27  8d cc 09 12  00 00 00 01
Sep 13 20:56:45.419263: | decode_to_chunk: Ciphertext: input "0x96 89 3F C5 5E 5C 72 2F 54 0B 7D D1 DD F7 E7 58D2 88 BC 95 C6 91 65 88 45 36 C8 11 66 2F 21 88AB EE 09 35"
Sep 13 20:56:45.419267: | decode_to_chunk: output: 
Sep 13 20:56:45.419269: |   96 89 3f c5  5e 5c 72 2f  54 0b 7d d1  dd f7 e7 58
Sep 13 20:56:45.419270: |   d2 88 bc 95  c6 91 65 88  45 36 c8 11  66 2f 21 88
Sep 13 20:56:45.419272: |   ab ee 09 35
Sep 13 20:56:45.419274: | decode_to_chunk: Plaintext: input "0x00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F20 21 22 23"
Sep 13 20:56:45.419276: | decode_to_chunk: output: 
Sep 13 20:56:45.419277: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.419279: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.419281: |   20 21 22 23
Sep 13 20:56:45.419282: | decode_to_chunk: expected counter-block: : input "0x 00 07 BD FD  5C BD 60 27 8D CC 09 12  00 00 00 04"
Sep 13 20:56:45.419284: | decode_to_chunk: output: 
Sep 13 20:56:45.419286: |   00 07 bd fd  5c bd 60 27  8d cc 09 12  00 00 00 04
Sep 13 20:56:45.419287: | do_aes_ctr: enter
Sep 13 20:56:45.419291: | do_aes_ctr: counter-block updated from 0x1 to 0x4 for 36 bytes
Sep 13 20:56:45.419293: | do_aes_ctr: exit
Sep 13 20:56:45.419294: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.419296: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.419298: | test_ctr_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.419300: | test_ctr_vector: Encrypting 36 octets using AES-CTR with 192-bit key passed
Sep 13 20:56:45.419302:   Encrypting 16 octets using AES-CTR with 256-bit key
Sep 13 20:56:45.419304: | decode_to_chunk: raw_key: input "0x77 6B EF F2 85 1D B0 6F 4C 8A 05 42 C8 69 6F 6C6A 81 AF 1E EC 96 B4 D3 7F C1 D6 89 E6 C1 C1 04"
Sep 13 20:56:45.419306: | decode_to_chunk: output: 
Sep 13 20:56:45.419308: |   77 6b ef f2  85 1d b0 6f  4c 8a 05 42  c8 69 6f 6c
Sep 13 20:56:45.419310: |   6a 81 af 1e  ec 96 b4 d3  7f c1 d6 89  e6 c1 c1 04
Sep 13 20:56:45.419312: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419313: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.419315: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.419317: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419318: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.419327: |     result: newref symkey-key@0x55b124e3b690 (48-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.419330: |     key-offset: 0, key-size: 32
Sep 13 20:56:45.419332: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.419333: |     target: AES_CTR
Sep 13 20:56:45.419335: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.419336: |     key_size: 32-bytes
Sep 13 20:56:45.419338: |     base: base-key@0x55b124e3b690 (48-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.419340: |     operation: FLAGS_ONLY
Sep 13 20:56:45.419341: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.419346: |     result: newref symkey-key@0x55b124e39e10 (32-bytes, AES_CTR)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.419348: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.419351: | decode_to_chunk: input counter-block: : input "0x 00 00 00 60  DB 56 72 C9 7A A8 F0 B2  00 00 00 01"
Sep 13 20:56:45.419353: | decode_to_chunk: output: 
Sep 13 20:56:45.419355: |   00 00 00 60  db 56 72 c9  7a a8 f0 b2  00 00 00 01
Sep 13 20:56:45.419356: | decode_to_chunk: Plaintext: input "0x 53 69 6E 67 6C 65 20 62 6C 6F 63 6B 20 6D 73 67"
Sep 13 20:56:45.419358: | decode_to_chunk: output: 
Sep 13 20:56:45.419360: |   53 69 6e 67  6c 65 20 62  6c 6f 63 6b  20 6d 73 67
Sep 13 20:56:45.419361: | decode_to_chunk: Ciphertext: input "0x 14 5A D0 1D BF 82 4E C7 56 08 63 DC 71 E3 E0 C0"
Sep 13 20:56:45.419364: | decode_to_chunk: output: 
Sep 13 20:56:45.419365: |   14 5a d0 1d  bf 82 4e c7  56 08 63 dc  71 e3 e0 c0
Sep 13 20:56:45.419367: | decode_to_chunk: expected counter-block: : input "0x 00 00 00 60  DB 56 72 C9 7A A8 F0 B2  00 00 00 02"
Sep 13 20:56:45.419369: | decode_to_chunk: output: 
Sep 13 20:56:45.419370: |   00 00 00 60  db 56 72 c9  7a a8 f0 b2  00 00 00 02
Sep 13 20:56:45.419374: | do_aes_ctr: enter
Sep 13 20:56:45.419378: | do_aes_ctr: counter-block updated from 0x1 to 0x2 for 16 bytes
Sep 13 20:56:45.419380: | do_aes_ctr: exit
Sep 13 20:56:45.419382: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.419383: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.419385: | decode_to_chunk: input counter-block: : input "0x 00 00 00 60  DB 56 72 C9 7A A8 F0 B2  00 00 00 01"
Sep 13 20:56:45.419387: | decode_to_chunk: output: 
Sep 13 20:56:45.419389: |   00 00 00 60  db 56 72 c9  7a a8 f0 b2  00 00 00 01
Sep 13 20:56:45.419391: | decode_to_chunk: Ciphertext: input "0x 14 5A D0 1D BF 82 4E C7 56 08 63 DC 71 E3 E0 C0"
Sep 13 20:56:45.419393: | decode_to_chunk: output: 
Sep 13 20:56:45.419394: |   14 5a d0 1d  bf 82 4e c7  56 08 63 dc  71 e3 e0 c0
Sep 13 20:56:45.419396: | decode_to_chunk: Plaintext: input "0x 53 69 6E 67 6C 65 20 62 6C 6F 63 6B 20 6D 73 67"
Sep 13 20:56:45.419398: | decode_to_chunk: output: 
Sep 13 20:56:45.419400: |   53 69 6e 67  6c 65 20 62  6c 6f 63 6b  20 6d 73 67
Sep 13 20:56:45.419401: | decode_to_chunk: expected counter-block: : input "0x 00 00 00 60  DB 56 72 C9 7A A8 F0 B2  00 00 00 02"
Sep 13 20:56:45.419403: | decode_to_chunk: output: 
Sep 13 20:56:45.419405: |   00 00 00 60  db 56 72 c9  7a a8 f0 b2  00 00 00 02
Sep 13 20:56:45.419406: | do_aes_ctr: enter
Sep 13 20:56:45.419409: | do_aes_ctr: counter-block updated from 0x1 to 0x2 for 16 bytes
Sep 13 20:56:45.419411: | do_aes_ctr: exit
Sep 13 20:56:45.419413: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.419414: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.419416: | test_ctr_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.419419: | test_ctr_vector: Encrypting 16 octets using AES-CTR with 256-bit key passed
Sep 13 20:56:45.419421:   Encrypting 32 octets using AES-CTR with 256-bit key
Sep 13 20:56:45.419423: | decode_to_chunk: raw_key: input "0xF6 D6 6D 6B D5 2D 59 BB 07 96 36 58 79 EF F8 86C6 6D D5 1A 5B 6A 99 74 4B 50 59 0C 87 A2 38 84"
Sep 13 20:56:45.419425: | decode_to_chunk: output: 
Sep 13 20:56:45.419427: |   f6 d6 6d 6b  d5 2d 59 bb  07 96 36 58  79 ef f8 86
Sep 13 20:56:45.419428: |   c6 6d d5 1a  5b 6a 99 74  4b 50 59 0c  87 a2 38 84
Sep 13 20:56:45.419430: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419432: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.419433: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.419435: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419437: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.419446: |     result: newref symkey-key@0x55b124e3b690 (48-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.419448: |     key-offset: 0, key-size: 32
Sep 13 20:56:45.419450: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.419452: |     target: AES_CTR
Sep 13 20:56:45.419453: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.419455: |     key_size: 32-bytes
Sep 13 20:56:45.419457: |     base: base-key@0x55b124e3b690 (48-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.419458: |     operation: FLAGS_ONLY
Sep 13 20:56:45.419460: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.419465: |     result: newref symkey-key@0x55b124e39e10 (32-bytes, AES_CTR)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.419467: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.419469: | decode_to_chunk: input counter-block: : input "0x 00 FA AC 24  C1 58 5E F1 5A 43 D8 75  00 00 00 01"
Sep 13 20:56:45.419472: | decode_to_chunk: output: 
Sep 13 20:56:45.419473: |   00 fa ac 24  c1 58 5e f1  5a 43 d8 75  00 00 00 01
Sep 13 20:56:45.419475: | decode_to_chunk: Plaintext: input "0x00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F"
Sep 13 20:56:45.419477: | decode_to_chunk: output: 
Sep 13 20:56:45.419479: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.419480: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.419482: | decode_to_chunk: Ciphertext: input "0xF0 5E 23 1B 38 94 61 2C 49 EE 00 0B 80 4E B2 A9B8 30 6B 50 8F 83 9D 6A 55 30 83 1D 93 44 AF 1C"
Sep 13 20:56:45.419486: | decode_to_chunk: output: 
Sep 13 20:56:45.419488: |   f0 5e 23 1b  38 94 61 2c  49 ee 00 0b  80 4e b2 a9
Sep 13 20:56:45.419490: |   b8 30 6b 50  8f 83 9d 6a  55 30 83 1d  93 44 af 1c
Sep 13 20:56:45.419492: | decode_to_chunk: expected counter-block: : input "0x 00 FA AC 24  C1 58 5E F1 5A 43 D8 75  00 00 00 03"
Sep 13 20:56:45.419494: | decode_to_chunk: output: 
Sep 13 20:56:45.419495: |   00 fa ac 24  c1 58 5e f1  5a 43 d8 75  00 00 00 03
Sep 13 20:56:45.419497: | do_aes_ctr: enter
Sep 13 20:56:45.419500: | do_aes_ctr: counter-block updated from 0x1 to 0x3 for 32 bytes
Sep 13 20:56:45.419502: | do_aes_ctr: exit
Sep 13 20:56:45.419504: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.419506: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.419508: | decode_to_chunk: input counter-block: : input "0x 00 FA AC 24  C1 58 5E F1 5A 43 D8 75  00 00 00 01"
Sep 13 20:56:45.419510: | decode_to_chunk: output: 
Sep 13 20:56:45.419511: |   00 fa ac 24  c1 58 5e f1  5a 43 d8 75  00 00 00 01
Sep 13 20:56:45.419513: | decode_to_chunk: Ciphertext: input "0xF0 5E 23 1B 38 94 61 2C 49 EE 00 0B 80 4E B2 A9B8 30 6B 50 8F 83 9D 6A 55 30 83 1D 93 44 AF 1C"
Sep 13 20:56:45.419515: | decode_to_chunk: output: 
Sep 13 20:56:45.419517: |   f0 5e 23 1b  38 94 61 2c  49 ee 00 0b  80 4e b2 a9
Sep 13 20:56:45.419518: |   b8 30 6b 50  8f 83 9d 6a  55 30 83 1d  93 44 af 1c
Sep 13 20:56:45.419520: | decode_to_chunk: Plaintext: input "0x00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F"
Sep 13 20:56:45.419522: | decode_to_chunk: output: 
Sep 13 20:56:45.419524: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.419526: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.419527: | decode_to_chunk: expected counter-block: : input "0x 00 FA AC 24  C1 58 5E F1 5A 43 D8 75  00 00 00 03"
Sep 13 20:56:45.419529: | decode_to_chunk: output: 
Sep 13 20:56:45.419531: |   00 fa ac 24  c1 58 5e f1  5a 43 d8 75  00 00 00 03
Sep 13 20:56:45.419532: | do_aes_ctr: enter
Sep 13 20:56:45.419535: | do_aes_ctr: counter-block updated from 0x1 to 0x3 for 32 bytes
Sep 13 20:56:45.419537: | do_aes_ctr: exit
Sep 13 20:56:45.419539: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.419540: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.419542: | test_ctr_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.419545: | test_ctr_vector: Encrypting 32 octets using AES-CTR with 256-bit key passed
Sep 13 20:56:45.419547:   Encrypting 36 octets using AES-CTR with 256-bit key
Sep 13 20:56:45.419548: | decode_to_chunk: raw_key: input "0xFF 7A 61 7C E6 91 48 E4 F1 72 6E 2F 43 58 1D E2AA 62 D9 F8 05 53 2E DF F1 EE D6 87 FB 54 15 3D"
Sep 13 20:56:45.419551: | decode_to_chunk: output: 
Sep 13 20:56:45.419553: |   ff 7a 61 7c  e6 91 48 e4  f1 72 6e 2f  43 58 1d e2
Sep 13 20:56:45.419554: |   aa 62 d9 f8  05 53 2e df  f1 ee d6 87  fb 54 15 3d
Sep 13 20:56:45.419556: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419558: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.419559: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.419561: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419563: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.419586: |     result: newref symkey-key@0x55b124e3b690 (48-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.419592: |     key-offset: 0, key-size: 32
Sep 13 20:56:45.419594: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.419595: |     target: AES_CTR
Sep 13 20:56:45.419597: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.419599: |     key_size: 32-bytes
Sep 13 20:56:45.419600: |     base: base-key@0x55b124e3b690 (48-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.419602: |     operation: FLAGS_ONLY
Sep 13 20:56:45.419604: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.419609: |     result: newref symkey-key@0x55b124e39e10 (32-bytes, AES_CTR)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.419614: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.419617: | decode_to_chunk: input counter-block: : input "0x 00 1C C5 B7  51 A5 1D 70 A1 C1 11 48  00 00 00 01"
Sep 13 20:56:45.419620: | decode_to_chunk: output: 
Sep 13 20:56:45.419621: |   00 1c c5 b7  51 a5 1d 70  a1 c1 11 48  00 00 00 01
Sep 13 20:56:45.419623: | decode_to_chunk: Plaintext: input "0x00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F20 21 22 23"
Sep 13 20:56:45.419625: | decode_to_chunk: output: 
Sep 13 20:56:45.419627: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.419629: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.419630: |   20 21 22 23
Sep 13 20:56:45.419632: | decode_to_chunk: Ciphertext: input "0xEB 6C 52 82 1D 0B BB F7 CE 75 94 46 2A CA 4F AAB4 07 DF 86 65 69 FD 07 F4 8C C0 B5 83 D6 07 1F1E C0 E6 B8"
Sep 13 20:56:45.419635: | decode_to_chunk: output: 
Sep 13 20:56:45.419636: |   eb 6c 52 82  1d 0b bb f7  ce 75 94 46  2a ca 4f aa
Sep 13 20:56:45.419638: |   b4 07 df 86  65 69 fd 07  f4 8c c0 b5  83 d6 07 1f
Sep 13 20:56:45.419639: |   1e c0 e6 b8
Sep 13 20:56:45.419641: | decode_to_chunk: expected counter-block: : input "0x 00 1C C5 B7  51 A5 1D 70 A1 C1 11 48  00 00 00 04"
Sep 13 20:56:45.419643: | decode_to_chunk: output: 
Sep 13 20:56:45.419645: |   00 1c c5 b7  51 a5 1d 70  a1 c1 11 48  00 00 00 04
Sep 13 20:56:45.419646: | do_aes_ctr: enter
Sep 13 20:56:45.419651: | do_aes_ctr: counter-block updated from 0x1 to 0x4 for 36 bytes
Sep 13 20:56:45.419652: | do_aes_ctr: exit
Sep 13 20:56:45.419654: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.419656: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.419658: | decode_to_chunk: input counter-block: : input "0x 00 1C C5 B7  51 A5 1D 70 A1 C1 11 48  00 00 00 01"
Sep 13 20:56:45.419660: | decode_to_chunk: output: 
Sep 13 20:56:45.419661: |   00 1c c5 b7  51 a5 1d 70  a1 c1 11 48  00 00 00 01
Sep 13 20:56:45.419663: | decode_to_chunk: Ciphertext: input "0xEB 6C 52 82 1D 0B BB F7 CE 75 94 46 2A CA 4F AAB4 07 DF 86 65 69 FD 07 F4 8C C0 B5 83 D6 07 1F1E C0 E6 B8"
Sep 13 20:56:45.419665: | decode_to_chunk: output: 
Sep 13 20:56:45.419667: |   eb 6c 52 82  1d 0b bb f7  ce 75 94 46  2a ca 4f aa
Sep 13 20:56:45.419669: |   b4 07 df 86  65 69 fd 07  f4 8c c0 b5  83 d6 07 1f
Sep 13 20:56:45.419670: |   1e c0 e6 b8
Sep 13 20:56:45.419672: | decode_to_chunk: Plaintext: input "0x00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F20 21 22 23"
Sep 13 20:56:45.419674: | decode_to_chunk: output: 
Sep 13 20:56:45.419676: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.419677: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.419679: |   20 21 22 23
Sep 13 20:56:45.419681: | decode_to_chunk: expected counter-block: : input "0x 00 1C C5 B7  51 A5 1D 70 A1 C1 11 48  00 00 00 04"
Sep 13 20:56:45.419683: | decode_to_chunk: output: 
Sep 13 20:56:45.419684: |   00 1c c5 b7  51 a5 1d 70  a1 c1 11 48  00 00 00 04
Sep 13 20:56:45.419686: | do_aes_ctr: enter
Sep 13 20:56:45.419689: | do_aes_ctr: counter-block updated from 0x1 to 0x4 for 36 bytes
Sep 13 20:56:45.419691: | do_aes_ctr: exit
Sep 13 20:56:45.419692: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.419694: | verify_chunk_data: counter-block: ok
Sep 13 20:56:45.419696: | test_ctr_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.419698: | test_ctr_vector: Encrypting 36 octets using AES-CTR with 256-bit key passed
Sep 13 20:56:45.419700: testing AES_CBC:
Sep 13 20:56:45.419702:   Encrypting 16 bytes (1 block) using AES-CBC with 128-bit key
Sep 13 20:56:45.419704: | decode_to_chunk: raw_key: input "0x06a9214036b8a15b512e03d534120006"
Sep 13 20:56:45.419706: | decode_to_chunk: output: 
Sep 13 20:56:45.419708: |   06 a9 21 40  36 b8 a1 5b  51 2e 03 d5  34 12 00 06
Sep 13 20:56:45.419710: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419712: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.419713: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.419717: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419719: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.419729: |     result: newref symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.419731: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.419733: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.419735: |     target: AES_CBC
Sep 13 20:56:45.419736: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.419738: |     key_size: 16-bytes
Sep 13 20:56:45.419740: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.419741: |     operation: FLAGS_ONLY
Sep 13 20:56:45.419743: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.419748: |     result: newref symkey-key@0x55b124e39e10 (16-bytes, AES_CBC)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.419750: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.419752: | decode_to_chunk: IV: : input "0x3dafba429d9eb430b422da802c9fac41"
Sep 13 20:56:45.419755: | decode_to_chunk: output: 
Sep 13 20:56:45.419756: |   3d af ba 42  9d 9e b4 30  b4 22 da 80  2c 9f ac 41
Sep 13 20:56:45.419758: | decode_to_chunk: new IV: : input "0xe353779c1079aeb82708942dbe77181a"
Sep 13 20:56:45.419760: | decode_to_chunk: output: 
Sep 13 20:56:45.419762: |   e3 53 77 9c  10 79 ae b8  27 08 94 2d  be 77 18 1a
Sep 13 20:56:45.419764: | decode_to_chunk: plaintext: : input "Single block msg"
Sep 13 20:56:45.419765: | decode_to_chunk: output: 
Sep 13 20:56:45.419767: |   53 69 6e 67  6c 65 20 62  6c 6f 63 6b  20 6d 73 67
Sep 13 20:56:45.419769: | decode_to_chunk: ciphertext: : input "0xe353779c1079aeb82708942dbe77181a"
Sep 13 20:56:45.419771: | decode_to_chunk: output: 
Sep 13 20:56:45.419772: |   e3 53 77 9c  10 79 ae b8  27 08 94 2d  be 77 18 1a
Sep 13 20:56:45.419774: | NSS ike_alg_nss_cbc: aes - enter
Sep 13 20:56:45.419779: | NSS ike_alg_nss_cbc: aes - exit
Sep 13 20:56:45.419781: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.419782: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.419785: | decode_to_chunk: IV: : input "0x3dafba429d9eb430b422da802c9fac41"
Sep 13 20:56:45.419787: | decode_to_chunk: output: 
Sep 13 20:56:45.419788: |   3d af ba 42  9d 9e b4 30  b4 22 da 80  2c 9f ac 41
Sep 13 20:56:45.419790: | decode_to_chunk: new IV: : input "0xe353779c1079aeb82708942dbe77181a"
Sep 13 20:56:45.419792: | decode_to_chunk: output: 
Sep 13 20:56:45.419793: |   e3 53 77 9c  10 79 ae b8  27 08 94 2d  be 77 18 1a
Sep 13 20:56:45.419795: | decode_to_chunk: cipertext: : input "0xe353779c1079aeb82708942dbe77181a"
Sep 13 20:56:45.419797: | decode_to_chunk: output: 
Sep 13 20:56:45.419799: |   e3 53 77 9c  10 79 ae b8  27 08 94 2d  be 77 18 1a
Sep 13 20:56:45.419800: | decode_to_chunk: plaintext: : input "Single block msg"
Sep 13 20:56:45.419802: | decode_to_chunk: output: 
Sep 13 20:56:45.419804: |   53 69 6e 67  6c 65 20 62  6c 6f 63 6b  20 6d 73 67
Sep 13 20:56:45.419805: | NSS ike_alg_nss_cbc: aes - enter
Sep 13 20:56:45.419809: | NSS ike_alg_nss_cbc: aes - exit
Sep 13 20:56:45.419811: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.419813: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.419815: | test_cbc_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.419817: | test_ctr_vector: Encrypting 16 bytes (1 block) using AES-CBC with 128-bit key passed
Sep 13 20:56:45.419819:   Encrypting 32 bytes (2 blocks) using AES-CBC with 128-bit key
Sep 13 20:56:45.419821: | decode_to_chunk: raw_key: input "0xc286696d887c9aa0611bbb3e2025a45a"
Sep 13 20:56:45.419823: | decode_to_chunk: output: 
Sep 13 20:56:45.419824: |   c2 86 69 6d  88 7c 9a a0  61 1b bb 3e  20 25 a4 5a
Sep 13 20:56:45.419826: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419828: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.419830: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.419831: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419833: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.419842: |     result: newref symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.419847: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.419849: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.419850: |     target: AES_CBC
Sep 13 20:56:45.419852: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.419853: |     key_size: 16-bytes
Sep 13 20:56:45.419855: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.419857: |     operation: FLAGS_ONLY
Sep 13 20:56:45.419858: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.419864: |     result: newref symkey-key@0x55b124e39e10 (16-bytes, AES_CBC)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.419866: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.419868: | decode_to_chunk: IV: : input "0x562e17996d093d28ddb3ba695a2e6f58"
Sep 13 20:56:45.419870: | decode_to_chunk: output: 
Sep 13 20:56:45.419872: |   56 2e 17 99  6d 09 3d 28  dd b3 ba 69  5a 2e 6f 58
Sep 13 20:56:45.419874: | decode_to_chunk: new IV: : input "0xd296cd94c2cccf8a3a863028b5e1dc0a7586602d253cfff91b8266bea6d61ab1"
Sep 13 20:56:45.419876: | decode_to_chunk: output: 
Sep 13 20:56:45.419878: |   d2 96 cd 94  c2 cc cf 8a  3a 86 30 28  b5 e1 dc 0a
Sep 13 20:56:45.419880: |   75 86 60 2d  25 3c ff f9  1b 82 66 be  a6 d6 1a b1
Sep 13 20:56:45.419881: | decode_to_chunk: plaintext: : input "0x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f"
Sep 13 20:56:45.419884: | decode_to_chunk: output: 
Sep 13 20:56:45.419885: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.419887: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.419888: | decode_to_chunk: ciphertext: : input "0xd296cd94c2cccf8a3a863028b5e1dc0a7586602d253cfff91b8266bea6d61ab1"
Sep 13 20:56:45.419891: | decode_to_chunk: output: 
Sep 13 20:56:45.419892: |   d2 96 cd 94  c2 cc cf 8a  3a 86 30 28  b5 e1 dc 0a
Sep 13 20:56:45.419894: |   75 86 60 2d  25 3c ff f9  1b 82 66 be  a6 d6 1a b1
Sep 13 20:56:45.419896: | NSS ike_alg_nss_cbc: aes - enter
Sep 13 20:56:45.419900: | NSS ike_alg_nss_cbc: aes - exit
Sep 13 20:56:45.419902: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.419903: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.419905: | decode_to_chunk: IV: : input "0x562e17996d093d28ddb3ba695a2e6f58"
Sep 13 20:56:45.419907: | decode_to_chunk: output: 
Sep 13 20:56:45.419909: |   56 2e 17 99  6d 09 3d 28  dd b3 ba 69  5a 2e 6f 58
Sep 13 20:56:45.419911: | decode_to_chunk: new IV: : input "0xd296cd94c2cccf8a3a863028b5e1dc0a7586602d253cfff91b8266bea6d61ab1"
Sep 13 20:56:45.419913: | decode_to_chunk: output: 
Sep 13 20:56:45.419914: |   d2 96 cd 94  c2 cc cf 8a  3a 86 30 28  b5 e1 dc 0a
Sep 13 20:56:45.419916: |   75 86 60 2d  25 3c ff f9  1b 82 66 be  a6 d6 1a b1
Sep 13 20:56:45.419918: | decode_to_chunk: cipertext: : input "0xd296cd94c2cccf8a3a863028b5e1dc0a7586602d253cfff91b8266bea6d61ab1"
Sep 13 20:56:45.419920: | decode_to_chunk: output: 
Sep 13 20:56:45.419922: |   d2 96 cd 94  c2 cc cf 8a  3a 86 30 28  b5 e1 dc 0a
Sep 13 20:56:45.419923: |   75 86 60 2d  25 3c ff f9  1b 82 66 be  a6 d6 1a b1
Sep 13 20:56:45.419925: | decode_to_chunk: plaintext: : input "0x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f"
Sep 13 20:56:45.419927: | decode_to_chunk: output: 
Sep 13 20:56:45.419929: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.419930: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.419932: | NSS ike_alg_nss_cbc: aes - enter
Sep 13 20:56:45.419935: | NSS ike_alg_nss_cbc: aes - exit
Sep 13 20:56:45.419937: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.419939: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.419941: | test_cbc_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.419943: | test_ctr_vector: Encrypting 32 bytes (2 blocks) using AES-CBC with 128-bit key passed
Sep 13 20:56:45.419945:   Encrypting 48 bytes (3 blocks) using AES-CBC with 128-bit key
Sep 13 20:56:45.419947: | decode_to_chunk: raw_key: input "0x6c3ea0477630ce21a2ce334aa746c2cd"
Sep 13 20:56:45.419951: | decode_to_chunk: output: 
Sep 13 20:56:45.419953: |   6c 3e a0 47  76 30 ce 21  a2 ce 33 4a  a7 46 c2 cd
Sep 13 20:56:45.419955: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419956: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.419958: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.419960: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.419961: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.419971: |     result: newref symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.419973: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.419975: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.419976: |     target: AES_CBC
Sep 13 20:56:45.419978: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.419979: |     key_size: 16-bytes
Sep 13 20:56:45.419981: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.419983: |     operation: FLAGS_ONLY
Sep 13 20:56:45.419984: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.419989: |     result: newref symkey-key@0x55b124e39e10 (16-bytes, AES_CBC)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.419991: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.419994: | decode_to_chunk: IV: : input "0xc782dc4c098c66cbd9cd27d825682c81"
Sep 13 20:56:45.419996: | decode_to_chunk: output: 
Sep 13 20:56:45.419998: |   c7 82 dc 4c  09 8c 66 cb  d9 cd 27 d8  25 68 2c 81
Sep 13 20:56:45.420000: | decode_to_chunk: new IV: : input "0xd0a02b3836451753d493665d33f0e8862dea54cdb293abc7506939276772f8d5021c19216bad525c8579695d83ba2684"
Sep 13 20:56:45.420002: | decode_to_chunk: output: 
Sep 13 20:56:45.420004: |   d0 a0 2b 38  36 45 17 53  d4 93 66 5d  33 f0 e8 86
Sep 13 20:56:45.420006: |   2d ea 54 cd  b2 93 ab c7  50 69 39 27  67 72 f8 d5
Sep 13 20:56:45.420007: |   02 1c 19 21  6b ad 52 5c  85 79 69 5d  83 ba 26 84
Sep 13 20:56:45.420009: | decode_to_chunk: plaintext: : input "This is a 48-byte message (exactly 3 AES blocks)"
Sep 13 20:56:45.420011: | decode_to_chunk: output: 
Sep 13 20:56:45.420012: |   54 68 69 73  20 69 73 20  61 20 34 38  2d 62 79 74
Sep 13 20:56:45.420014: |   65 20 6d 65  73 73 61 67  65 20 28 65  78 61 63 74
Sep 13 20:56:45.420015: |   6c 79 20 33  20 41 45 53  20 62 6c 6f  63 6b 73 29
Sep 13 20:56:45.420017: | decode_to_chunk: ciphertext: : input "0xd0a02b3836451753d493665d33f0e8862dea54cdb293abc7506939276772f8d5021c19216bad525c8579695d83ba2684"
Sep 13 20:56:45.420020: | decode_to_chunk: output: 
Sep 13 20:56:45.420021: |   d0 a0 2b 38  36 45 17 53  d4 93 66 5d  33 f0 e8 86
Sep 13 20:56:45.420023: |   2d ea 54 cd  b2 93 ab c7  50 69 39 27  67 72 f8 d5
Sep 13 20:56:45.420024: |   02 1c 19 21  6b ad 52 5c  85 79 69 5d  83 ba 26 84
Sep 13 20:56:45.420026: | NSS ike_alg_nss_cbc: aes - enter
Sep 13 20:56:45.420030: | NSS ike_alg_nss_cbc: aes - exit
Sep 13 20:56:45.420032: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.420033: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.420035: | decode_to_chunk: IV: : input "0xc782dc4c098c66cbd9cd27d825682c81"
Sep 13 20:56:45.420037: | decode_to_chunk: output: 
Sep 13 20:56:45.420039: |   c7 82 dc 4c  09 8c 66 cb  d9 cd 27 d8  25 68 2c 81
Sep 13 20:56:45.420041: | decode_to_chunk: new IV: : input "0xd0a02b3836451753d493665d33f0e8862dea54cdb293abc7506939276772f8d5021c19216bad525c8579695d83ba2684"
Sep 13 20:56:45.420043: | decode_to_chunk: output: 
Sep 13 20:56:45.420045: |   d0 a0 2b 38  36 45 17 53  d4 93 66 5d  33 f0 e8 86
Sep 13 20:56:45.420046: |   2d ea 54 cd  b2 93 ab c7  50 69 39 27  67 72 f8 d5
Sep 13 20:56:45.420048: |   02 1c 19 21  6b ad 52 5c  85 79 69 5d  83 ba 26 84
Sep 13 20:56:45.420050: | decode_to_chunk: cipertext: : input "0xd0a02b3836451753d493665d33f0e8862dea54cdb293abc7506939276772f8d5021c19216bad525c8579695d83ba2684"
Sep 13 20:56:45.420052: | decode_to_chunk: output: 
Sep 13 20:56:45.420054: |   d0 a0 2b 38  36 45 17 53  d4 93 66 5d  33 f0 e8 86
Sep 13 20:56:45.420055: |   2d ea 54 cd  b2 93 ab c7  50 69 39 27  67 72 f8 d5
Sep 13 20:56:45.420059: |   02 1c 19 21  6b ad 52 5c  85 79 69 5d  83 ba 26 84
Sep 13 20:56:45.420061: | decode_to_chunk: plaintext: : input "This is a 48-byte message (exactly 3 AES blocks)"
Sep 13 20:56:45.420063: | decode_to_chunk: output: 
Sep 13 20:56:45.420064: |   54 68 69 73  20 69 73 20  61 20 34 38  2d 62 79 74
Sep 13 20:56:45.420066: |   65 20 6d 65  73 73 61 67  65 20 28 65  78 61 63 74
Sep 13 20:56:45.420067: |   6c 79 20 33  20 41 45 53  20 62 6c 6f  63 6b 73 29
Sep 13 20:56:45.420069: | NSS ike_alg_nss_cbc: aes - enter
Sep 13 20:56:45.420073: | NSS ike_alg_nss_cbc: aes - exit
Sep 13 20:56:45.420074: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.420076: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.420078: | test_cbc_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.420080: | test_ctr_vector: Encrypting 48 bytes (3 blocks) using AES-CBC with 128-bit key passed
Sep 13 20:56:45.420082:   Encrypting 64 bytes (4 blocks) using AES-CBC with 128-bit key
Sep 13 20:56:45.420084: | decode_to_chunk: raw_key: input "0x56e47a38c5598974bc46903dba290349"
Sep 13 20:56:45.420086: | decode_to_chunk: output: 
Sep 13 20:56:45.420088: |   56 e4 7a 38  c5 59 89 74  bc 46 90 3d  ba 29 03 49
Sep 13 20:56:45.420090: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420092: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.420093: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.420095: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420097: |     params: 16-bytes@0x7ffee51a5b70
Sep 13 20:56:45.420106: |     result: newref symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.420109: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.420110: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.420112: |     target: AES_CBC
Sep 13 20:56:45.420113: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:45.420115: |     key_size: 16-bytes
Sep 13 20:56:45.420117: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420118: |     operation: FLAGS_ONLY
Sep 13 20:56:45.420120: |     params: 8-bytes@0x7ffee51a5b58
Sep 13 20:56:45.420125: |     result: newref symkey-key@0x55b124e39e10 (16-bytes, AES_CBC)(in decode_to_key() at test_buffer.c:119)
Sep 13 20:56:45.420127: | symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.420129: | decode_to_chunk: IV: : input "0x8ce82eefbea0da3c44699ed7db51b7d9"
Sep 13 20:56:45.420131: | decode_to_chunk: output: 
Sep 13 20:56:45.420133: |   8c e8 2e ef  be a0 da 3c  44 69 9e d7  db 51 b7 d9
Sep 13 20:56:45.420135: | decode_to_chunk: new IV: : input "0xc30e32ffedc0774e6aff6af0869f71aa0f3af07a9a31a9c684db207eb0ef8e4e35907aa632c3ffdf868bb7b29d3d46ad83ce9f9a102ee99d49a53e87f4c3da55"
Sep 13 20:56:45.420138: | decode_to_chunk: output: 
Sep 13 20:56:45.420140: |   c3 0e 32 ff  ed c0 77 4e  6a ff 6a f0  86 9f 71 aa
Sep 13 20:56:45.420141: |   0f 3a f0 7a  9a 31 a9 c6  84 db 20 7e  b0 ef 8e 4e
Sep 13 20:56:45.420143: |   35 90 7a a6  32 c3 ff df  86 8b b7 b2  9d 3d 46 ad
Sep 13 20:56:45.420144: |   83 ce 9f 9a  10 2e e9 9d  49 a5 3e 87  f4 c3 da 55
Sep 13 20:56:45.420146: | decode_to_chunk: plaintext: : input "0xa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedf"
Sep 13 20:56:45.420149: | decode_to_chunk: output: 
Sep 13 20:56:45.420151: |   a0 a1 a2 a3  a4 a5 a6 a7  a8 a9 aa ab  ac ad ae af
Sep 13 20:56:45.420152: |   b0 b1 b2 b3  b4 b5 b6 b7  b8 b9 ba bb  bc bd be bf
Sep 13 20:56:45.420154: |   c0 c1 c2 c3  c4 c5 c6 c7  c8 c9 ca cb  cc cd ce cf
Sep 13 20:56:45.420155: |   d0 d1 d2 d3  d4 d5 d6 d7  d8 d9 da db  dc dd de df
Sep 13 20:56:45.420157: | decode_to_chunk: ciphertext: : input "0xc30e32ffedc0774e6aff6af0869f71aa0f3af07a9a31a9c684db207eb0ef8e4e35907aa632c3ffdf868bb7b29d3d46ad83ce9f9a102ee99d49a53e87f4c3da55"
Sep 13 20:56:45.420160: | decode_to_chunk: output: 
Sep 13 20:56:45.420162: |   c3 0e 32 ff  ed c0 77 4e  6a ff 6a f0  86 9f 71 aa
Sep 13 20:56:45.420163: |   0f 3a f0 7a  9a 31 a9 c6  84 db 20 7e  b0 ef 8e 4e
Sep 13 20:56:45.420167: |   35 90 7a a6  32 c3 ff df  86 8b b7 b2  9d 3d 46 ad
Sep 13 20:56:45.420168: |   83 ce 9f 9a  10 2e e9 9d  49 a5 3e 87  f4 c3 da 55
Sep 13 20:56:45.420170: | NSS ike_alg_nss_cbc: aes - enter
Sep 13 20:56:45.420174: | NSS ike_alg_nss_cbc: aes - exit
Sep 13 20:56:45.420176: | verify_chunk_data: encrypt: ok
Sep 13 20:56:45.420178: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.420180: | decode_to_chunk: IV: : input "0x8ce82eefbea0da3c44699ed7db51b7d9"
Sep 13 20:56:45.420182: | decode_to_chunk: output: 
Sep 13 20:56:45.420183: |   8c e8 2e ef  be a0 da 3c  44 69 9e d7  db 51 b7 d9
Sep 13 20:56:45.420185: | decode_to_chunk: new IV: : input "0xc30e32ffedc0774e6aff6af0869f71aa0f3af07a9a31a9c684db207eb0ef8e4e35907aa632c3ffdf868bb7b29d3d46ad83ce9f9a102ee99d49a53e87f4c3da55"
Sep 13 20:56:45.420188: | decode_to_chunk: output: 
Sep 13 20:56:45.420190: |   c3 0e 32 ff  ed c0 77 4e  6a ff 6a f0  86 9f 71 aa
Sep 13 20:56:45.420191: |   0f 3a f0 7a  9a 31 a9 c6  84 db 20 7e  b0 ef 8e 4e
Sep 13 20:56:45.420193: |   35 90 7a a6  32 c3 ff df  86 8b b7 b2  9d 3d 46 ad
Sep 13 20:56:45.420194: |   83 ce 9f 9a  10 2e e9 9d  49 a5 3e 87  f4 c3 da 55
Sep 13 20:56:45.420196: | decode_to_chunk: cipertext: : input "0xc30e32ffedc0774e6aff6af0869f71aa0f3af07a9a31a9c684db207eb0ef8e4e35907aa632c3ffdf868bb7b29d3d46ad83ce9f9a102ee99d49a53e87f4c3da55"
Sep 13 20:56:45.420199: | decode_to_chunk: output: 
Sep 13 20:56:45.420200: |   c3 0e 32 ff  ed c0 77 4e  6a ff 6a f0  86 9f 71 aa
Sep 13 20:56:45.420202: |   0f 3a f0 7a  9a 31 a9 c6  84 db 20 7e  b0 ef 8e 4e
Sep 13 20:56:45.420204: |   35 90 7a a6  32 c3 ff df  86 8b b7 b2  9d 3d 46 ad
Sep 13 20:56:45.420205: |   83 ce 9f 9a  10 2e e9 9d  49 a5 3e 87  f4 c3 da 55
Sep 13 20:56:45.420207: | decode_to_chunk: plaintext: : input "0xa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedf"
Sep 13 20:56:45.420210: | decode_to_chunk: output: 
Sep 13 20:56:45.420211: |   a0 a1 a2 a3  a4 a5 a6 a7  a8 a9 aa ab  ac ad ae af
Sep 13 20:56:45.420213: |   b0 b1 b2 b3  b4 b5 b6 b7  b8 b9 ba bb  bc bd be bf
Sep 13 20:56:45.420215: |   c0 c1 c2 c3  c4 c5 c6 c7  c8 c9 ca cb  cc cd ce cf
Sep 13 20:56:45.420216: |   d0 d1 d2 d3  d4 d5 d6 d7  d8 d9 da db  dc dd de df
Sep 13 20:56:45.420218: | NSS ike_alg_nss_cbc: aes - enter
Sep 13 20:56:45.420221: | NSS ike_alg_nss_cbc: aes - exit
Sep 13 20:56:45.420223: | verify_chunk_data: decrypt: ok
Sep 13 20:56:45.420225: | verify_chunk_data: updated CBC IV: ok
Sep 13 20:56:45.420227: | test_cbc_vector: delref sym_key-key@0x55b124e39e10
Sep 13 20:56:45.420229: | test_ctr_vector: Encrypting 64 bytes (4 blocks) using AES-CBC with 128-bit key passed
Sep 13 20:56:45.420231: testing AES_XCBC:
Sep 13 20:56:45.420233:   RFC 3566 Test Case 1: AES-XCBC-MAC-96 with 0-byte input
Sep 13 20:56:45.420235: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f"
Sep 13 20:56:45.420237: | decode_to_chunk: output: 
Sep 13 20:56:45.420239: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.420240: | decode_to_chunk: test_prf_vector: input ""
Sep 13 20:56:45.420242: | decode_to_chunk: output: 
Sep 13 20:56:45.420244: | 
Sep 13 20:56:45.420245: | decode_to_chunk: test_prf_vector: input "0x75f0251d528ac01c4573dfd584d79f29"
Sep 13 20:56:45.420248: | decode_to_chunk: output: 
Sep 13 20:56:45.420249: |   75 f0 25 1d  52 8a c0 1c  45 73 df d5  84 d7 9f 29
Sep 13 20:56:45.420251: | PRF chunk interface PRF aes_xcbc init key-chunk@0x55b124e3cf38 (length 16)
Sep 13 20:56:45.420253: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.420255: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420257: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.420258: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.420260: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420262: |     params: 16-bytes@0x7ffee51a5a50
Sep 13 20:56:45.420271: |     result: newref key-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.420276: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.420278: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.420280: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.420281: |     key_size: 16-bytes
Sep 13 20:56:45.420283: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420285: |     operation: FLAGS_ONLY
Sep 13 20:56:45.420286: |     params: 8-bytes@0x7ffee51a5a38
Sep 13 20:56:45.420291: |     result: newref key-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.420294: | key: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.420296: | XCBC: Key 16=16 just right
Sep 13 20:56:45.420298: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.420300: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.420301: |     target: AES_ECB
Sep 13 20:56:45.420303: |     flags: SIGN
Sep 13 20:56:45.420304: |     key_size: 16-bytes
Sep 13 20:56:45.420306: |     base: base-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420308: |     operation: FLAGS_ONLY
Sep 13 20:56:45.420309: |     params: 8-bytes@0x7ffee51a59d8
Sep 13 20:56:45.420314: |     result: newref key-key@0x55b124e3b690 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.420317: | PRF chunk interface: delref clone-key@0x55b124e39e10
Sep 13 20:56:45.420319: | PRF chunk interface PRF aes_xcbc crypt-prf@0x55b124e3d008
Sep 13 20:56:45.420321: | PRF chunk interface PRF aes_xcbc update message-bytes@0x55b124e37d18 (length 0)
Sep 13 20:56:45.420323: | 
Sep 13 20:56:45.420325: | XCBC: data
Sep 13 20:56:45.420327: | 
Sep 13 20:56:45.420329: | K extracting all 16 bytes of key@0x55b124e3b690
Sep 13 20:56:45.420331: | K: symkey-key@0x55b124e3b690 (16-bytes, AES_ECB)
Sep 13 20:56:45.420333: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420338: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.420340: | sizeof bytes 16
Sep 13 20:56:45.420347: | wrapper: (SECItemType)618285232: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.420351: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.420354: | K extracted len 16 bytes at 0x55b124e3d1c8
Sep 13 20:56:45.420356: | unwrapped:
Sep 13 20:56:45.420357: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.420359: | XCBC: K:
Sep 13 20:56:45.420360: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.420364: | XCBC: K1
Sep 13 20:56:45.420366: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.420368: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420369: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.420371: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.420373: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420374: |     params: 16-bytes@0x7ffee51a5890
Sep 13 20:56:45.420384: |     result: newref k1-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.420387: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.420388: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.420390: |     target: AES_ECB
Sep 13 20:56:45.420391: |     flags: SIGN
Sep 13 20:56:45.420393: |     key_size: 16-bytes
Sep 13 20:56:45.420395: |     base: base-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420396: |     operation: FLAGS_ONLY
Sep 13 20:56:45.420398: |     params: 8-bytes@0x7ffee51a5878
Sep 13 20:56:45.420403: |     result: newref k1-key@0x55b124e39e10 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.420405: | k1: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:45.420410: | Computing E[0] using K3
Sep 13 20:56:45.420412: | XCBC: K3
Sep 13 20:56:45.420413: |   c1 a7 ab a1  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.420415: | XCBC: E[n-1]
Sep 13 20:56:45.420416: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.420421: | XCBC: M[n]
Sep 13 20:56:45.420423: | 
Sep 13 20:56:45.420424: | XCBC: M[n]
Sep 13 20:56:45.420426: | 
Sep 13 20:56:45.420427: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.420429: |   41 a7 ab a1  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.420432: | XCBC: MAC
Sep 13 20:56:45.420434: |   75 f0 25 1d  52 8a c0 1c  45 73 df d5  84 d7 9f 29
Sep 13 20:56:45.420436: | xcbc: delref k1-key@0x55b124e39e10
Sep 13 20:56:45.420438: | PRF chunk interface: delref key-key@0x55b124e3b690
Sep 13 20:56:45.420441: | PRF chunk interface PRF aes_xcbc final length 16
Sep 13 20:56:45.420443: |   75 f0 25 1d  52 8a c0 1c  45 73 df d5  84 d7 9f 29
Sep 13 20:56:45.420445: | chunk output
Sep 13 20:56:45.420446: |   75 f0 25 1d  52 8a c0 1c  45 73 df d5  84 d7 9f 29
Sep 13 20:56:45.420448: | verify_chunk_data: RFC 3566 Test Case 1: AES-XCBC-MAC-96 with 0-byte input: ok
Sep 13 20:56:45.420450: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420452: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.420453: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.420455: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420457: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.420466: |     result: newref key symkey-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.420469: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.420470: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.420472: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.420473: |     key_size: 16-bytes
Sep 13 20:56:45.420475: |     base: base-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420477: |     operation: FLAGS_ONLY
Sep 13 20:56:45.420478: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.420483: |     result: newref key symkey-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.420485: | key symkey: delref tmp-key@0x55b124e39e10
Sep 13 20:56:45.420488: | PRF symkey interface PRF aes_xcbc init key symkey-key@0x55b124e3b690 (size 16)
Sep 13 20:56:45.420490: | PRF symkey interface: key symkey-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420492: | XCBC: Key 16=16 just right
Sep 13 20:56:45.420494: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.420495: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.420497: |     target: AES_ECB
Sep 13 20:56:45.420498: |     flags: SIGN
Sep 13 20:56:45.420500: |     key_size: 16-bytes
Sep 13 20:56:45.420502: |     base: base-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420503: |     operation: FLAGS_ONLY
Sep 13 20:56:45.420505: |     params: 8-bytes@0x7ffee51a5a08
Sep 13 20:56:45.420510: |     result: newref key symkey-key@0x55b124e39e10 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.420512: | PRF symkey interface PRF aes_xcbc crypt-prf@0x55b124e3cf78
Sep 13 20:56:45.420514: | PRF symkey interface PRF aes_xcbc update symkey message-key@(nil) (size 0)
Sep 13 20:56:45.420516: | PRF symkey interface: symkey message-key@NULL
Sep 13 20:56:45.420518: | symkey message NULL key has no bytes
Sep 13 20:56:45.420520: | XCBC: data
Sep 13 20:56:45.420521: | 
Sep 13 20:56:45.420523: | K extracting all 16 bytes of key@0x55b124e39e10
Sep 13 20:56:45.420525: | K: symkey-key@0x55b124e39e10 (16-bytes, AES_ECB)
Sep 13 20:56:45.420527: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420531: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.420533: | sizeof bytes 16
Sep 13 20:56:45.420539: | wrapper: (SECItemType)45: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.420543: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.420545: | K extracted len 16 bytes at 0x55b124e3d008
Sep 13 20:56:45.420547: | unwrapped:
Sep 13 20:56:45.420549: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.420550: | XCBC: K:
Sep 13 20:56:45.420552: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.420557: | XCBC: K1
Sep 13 20:56:45.420559: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.420561: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420563: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.420565: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.420566: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420568: |     params: 16-bytes@0x7ffee51a5950
Sep 13 20:56:45.420659: |     result: newref k1-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.420671: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.420674: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.420676: |     target: AES_ECB
Sep 13 20:56:45.420677: |     flags: SIGN
Sep 13 20:56:45.420679: |     key_size: 16-bytes
Sep 13 20:56:45.420681: |     base: base-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420683: |     operation: FLAGS_ONLY
Sep 13 20:56:45.420685: |     params: 8-bytes@0x7ffee51a5938
Sep 13 20:56:45.420691: |     result: newref k1-key@0x55b124e5cf30 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.420693: | k1: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.420701: | Computing E[0] using K3
Sep 13 20:56:45.420703: | XCBC: K3
Sep 13 20:56:45.420705: |   c1 a7 ab a1  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.420706: | XCBC: E[n-1]
Sep 13 20:56:45.420708: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.420710: | XCBC: M[n]
Sep 13 20:56:45.420711: | 
Sep 13 20:56:45.420713: | XCBC: M[n]
Sep 13 20:56:45.420714: | 
Sep 13 20:56:45.420716: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.420718: |   41 a7 ab a1  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.420721: | XCBC: MAC
Sep 13 20:56:45.420722: |   75 f0 25 1d  52 8a c0 1c  45 73 df d5  84 d7 9f 29
Sep 13 20:56:45.420724: | xcbc: delref k1-key@0x55b124e5cf30
Sep 13 20:56:45.420727: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420729: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.420731: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.420733: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420734: |     params: 16-bytes@0x7ffee51a5a60
Sep 13 20:56:45.420746: |     result: newref xcbc-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.420748: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.420750: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.420752: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.420753: |     key_size: 16-bytes
Sep 13 20:56:45.420755: |     base: base-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420757: |     operation: FLAGS_ONLY
Sep 13 20:56:45.420758: |     params: 8-bytes@0x7ffee51a5a48
Sep 13 20:56:45.420763: |     result: newref xcbc-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.420765: | xcbc: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.420768: | PRF symkey interface: delref key-key@0x55b124e39e10
Sep 13 20:56:45.420771: | PRF symkey interface PRF aes_xcbc final-key@0x55b124e5cf30 (size 16)
Sep 13 20:56:45.420773: | PRF symkey interface: key-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420776: | output: symkey-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420778: | RFC 3566 Test Case 1: AES-XCBC-MAC-96 with 0-byte input extracting all 16 bytes of key@0x55b124e5cf30
Sep 13 20:56:45.420780: | RFC 3566 Test Case 1: AES-XCBC-MAC-96 with 0-byte input: symkey-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420781: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420787: | RFC 3566 Test Case 1: AES-XCBC-MAC-96 with 0-byte input: newref slot-key@0x55b124e3d030 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420789: | sizeof bytes 16
Sep 13 20:56:45.420795: | wrapper: (SECItemType)544236883: 3c 19 c9 b7  0f 4c e8 2c  da d5 81 e8  88 c1 ab 23
Sep 13 20:56:45.420803: | RFC 3566 Test Case 1: AES-XCBC-MAC-96 with 0-byte input: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.420807: | RFC 3566 Test Case 1: AES-XCBC-MAC-96 with 0-byte input extracted len 16 bytes at 0x55b124e5e7d8
Sep 13 20:56:45.420809: | unwrapped:
Sep 13 20:56:45.420811: |   75 f0 25 1d  52 8a c0 1c  45 73 df d5  84 d7 9f 29
Sep 13 20:56:45.420812: | verify_chunk_data: RFC 3566 Test Case 1: AES-XCBC-MAC-96 with 0-byte input: ok
Sep 13 20:56:45.420814: | test_prf_vector: RFC 3566 Test Case 1: AES-XCBC-MAC-96 with 0-byte input passed
Sep 13 20:56:45.420816: | test_prf_vector: delref symkey-key@0x55b124e5cf30
Sep 13 20:56:45.420819: | test_prf_vector: delref message-key@NULL
Sep 13 20:56:45.420821: | test_prf_vector: delref key-key@0x55b124e3b690
Sep 13 20:56:45.420823: | test_prf_vector: delref output-key@NULL
Sep 13 20:56:45.420825:   RFC 3566 Test Case 2: AES-XCBC-MAC-96 with 3-byte input
Sep 13 20:56:45.420828: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f"
Sep 13 20:56:45.420830: | decode_to_chunk: output: 
Sep 13 20:56:45.420832: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.420833: | decode_to_chunk: test_prf_vector: input "0x000102"
Sep 13 20:56:45.420835: | decode_to_chunk: output: 
Sep 13 20:56:45.420837: |   00 01 02
Sep 13 20:56:45.420838: | decode_to_chunk: test_prf_vector: input "0x5b376580ae2f19afe7219ceef172756f"
Sep 13 20:56:45.420840: | decode_to_chunk: output: 
Sep 13 20:56:45.420842: |   5b 37 65 80  ae 2f 19 af  e7 21 9c ee  f1 72 75 6f
Sep 13 20:56:45.420844: | PRF chunk interface PRF aes_xcbc init key-chunk@0x55b124e3d228 (length 16)
Sep 13 20:56:45.420846: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.420848: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420849: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.420851: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.420853: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420855: |     params: 16-bytes@0x7ffee51a5a50
Sep 13 20:56:45.420864: |     result: newref key-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.420867: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.420869: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.420870: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.420872: |     key_size: 16-bytes
Sep 13 20:56:45.420873: |     base: base-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420875: |     operation: FLAGS_ONLY
Sep 13 20:56:45.420877: |     params: 8-bytes@0x7ffee51a5a38
Sep 13 20:56:45.420882: |     result: newref key-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.420884: | key: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:45.420886: | XCBC: Key 16=16 just right
Sep 13 20:56:45.420888: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.420890: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.420891: |     target: AES_ECB
Sep 13 20:56:45.420893: |     flags: SIGN
Sep 13 20:56:45.420894: |     key_size: 16-bytes
Sep 13 20:56:45.420896: |     base: base-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420898: |     operation: FLAGS_ONLY
Sep 13 20:56:45.420899: |     params: 8-bytes@0x7ffee51a59d8
Sep 13 20:56:45.420904: |     result: newref key-key@0x55b124e5cf30 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.420907: | PRF chunk interface: delref clone-key@0x55b124e3b690
Sep 13 20:56:45.420909: | PRF chunk interface PRF aes_xcbc crypt-prf@0x55b124e3cf78
Sep 13 20:56:45.420911: | PRF chunk interface PRF aes_xcbc update message-bytes@0x55b124e3cf38 (length 3)
Sep 13 20:56:45.420913: |   00 01 02
Sep 13 20:56:45.420915: | XCBC: data
Sep 13 20:56:45.420917: |   00 01 02
Sep 13 20:56:45.420918: | K extracting all 16 bytes of key@0x55b124e5cf30
Sep 13 20:56:45.420920: | K: symkey-key@0x55b124e5cf30 (16-bytes, AES_ECB)
Sep 13 20:56:45.420922: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420929: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.420932: | sizeof bytes 16
Sep 13 20:56:45.420937: | wrapper: (SECItemType)618285232: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.420941: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.420943: | K extracted len 16 bytes at 0x55b124e37d18
Sep 13 20:56:45.420945: | unwrapped:
Sep 13 20:56:45.420947: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.420949: | XCBC: K:
Sep 13 20:56:45.420950: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.420953: | XCBC: K1
Sep 13 20:56:45.420955: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.420957: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420959: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.420960: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.420962: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.420964: |     params: 16-bytes@0x7ffee51a5890
Sep 13 20:56:45.420973: |     result: newref k1-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.420976: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.420977: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.420979: |     target: AES_ECB
Sep 13 20:56:45.420980: |     flags: SIGN
Sep 13 20:56:45.420982: |     key_size: 16-bytes
Sep 13 20:56:45.420984: |     base: base-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.420985: |     operation: FLAGS_ONLY
Sep 13 20:56:45.420987: |     params: 8-bytes@0x7ffee51a5878
Sep 13 20:56:45.420992: |     result: newref k1-key@0x55b124e3b690 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.420994: | k1: delref tmp-key@0x55b124e39e10
Sep 13 20:56:45.420998: | Computing E[1] using K3
Sep 13 20:56:45.421000: | XCBC: K3
Sep 13 20:56:45.421002: |   c1 a7 ab a1  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.421003: | XCBC: E[n-1]
Sep 13 20:56:45.421005: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.421006: | XCBC: M[n]
Sep 13 20:56:45.421008: |   00 01 02
Sep 13 20:56:45.421009: | XCBC: M[n]
Sep 13 20:56:45.421011: |   00 01 02
Sep 13 20:56:45.421013: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.421014: |   c1 a6 a9 21  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.421017: | XCBC: MAC
Sep 13 20:56:45.421019: |   5b 37 65 80  ae 2f 19 af  e7 21 9c ee  f1 72 75 6f
Sep 13 20:56:45.421021: | xcbc: delref k1-key@0x55b124e3b690
Sep 13 20:56:45.421023: | PRF chunk interface: delref key-key@0x55b124e5cf30
Sep 13 20:56:45.421026: | PRF chunk interface PRF aes_xcbc final length 16
Sep 13 20:56:45.421028: |   5b 37 65 80  ae 2f 19 af  e7 21 9c ee  f1 72 75 6f
Sep 13 20:56:45.421030: | chunk output
Sep 13 20:56:45.421031: |   5b 37 65 80  ae 2f 19 af  e7 21 9c ee  f1 72 75 6f
Sep 13 20:56:45.421033: | verify_chunk_data: RFC 3566 Test Case 2: AES-XCBC-MAC-96 with 3-byte input: ok
Sep 13 20:56:45.421035: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421036: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.421038: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421040: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421042: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.421051: |     result: newref key symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.421053: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.421055: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421056: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421058: |     key_size: 16-bytes
Sep 13 20:56:45.421060: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421061: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421063: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.421068: |     result: newref key symkey-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.421072: | key symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.421075: | PRF symkey interface PRF aes_xcbc init key symkey-key@0x55b124e5cf30 (size 16)
Sep 13 20:56:45.421077: | PRF symkey interface: key symkey-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421079: | XCBC: Key 16=16 just right
Sep 13 20:56:45.421080: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.421082: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421083: |     target: AES_ECB
Sep 13 20:56:45.421085: |     flags: SIGN
Sep 13 20:56:45.421087: |     key_size: 16-bytes
Sep 13 20:56:45.421088: |     base: base-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421090: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421091: |     params: 8-bytes@0x7ffee51a5a08
Sep 13 20:56:45.421096: |     result: newref key symkey-key@0x55b124e3b690 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.421099: | PRF symkey interface PRF aes_xcbc crypt-prf@0x55b124e37d18
Sep 13 20:56:45.421101: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421103: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.421104: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421106: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421108: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.421117: |     result: newref message symkey-key@0x55b124e3cfa0 (19-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.421119: |     key-offset: 0, key-size: 3
Sep 13 20:56:45.421121: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421122: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421124: |     key_size: 3-bytes
Sep 13 20:56:45.421126: |     base: base-key@0x55b124e3cfa0 (19-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421127: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421129: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.421134: |     result: newref message symkey-key@0x55b124e39e10 (3-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.421136: | message symkey: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.421138: | PRF symkey interface PRF aes_xcbc update symkey message-key@0x55b124e39e10 (size 3)
Sep 13 20:56:45.421141: | PRF symkey interface: symkey message-key@0x55b124e39e10 (3-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421143: | symkey message extracting all 3 bytes of key@0x55b124e39e10
Sep 13 20:56:45.421144: | symkey message: symkey-key@0x55b124e39e10 (3-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421146: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421151: | symkey message: newref slot-key@0x55b124e3d030 (3-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421153: | sizeof bytes 16
Sep 13 20:56:45.421159: | wrapper: (SECItemType)601791676: 62 50 25 93  30 d0 82 e2  10 5a b0 2e  36 23 33 1f
Sep 13 20:56:45.421162: | symkey message: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.421165: | symkey message extracted len 16 bytes at 0x55b124e3d268
Sep 13 20:56:45.421167: | unwrapped:
Sep 13 20:56:45.421169: |   00 01 02 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.421171: | XCBC: data
Sep 13 20:56:45.421172: |   00 01 02
Sep 13 20:56:45.421174: | K extracting all 16 bytes of key@0x55b124e3b690
Sep 13 20:56:45.421176: | K: symkey-key@0x55b124e3b690 (16-bytes, AES_ECB)
Sep 13 20:56:45.421178: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421183: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.421185: | sizeof bytes 16
Sep 13 20:56:45.421190: | wrapper: (SECItemType)619047232: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.421193: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.421195: | K extracted len 16 bytes at 0x55b124e3cf78
Sep 13 20:56:45.421197: | unwrapped:
Sep 13 20:56:45.421199: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421200: | XCBC: K:
Sep 13 20:56:45.421204: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421208: | XCBC: K1
Sep 13 20:56:45.421209: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.421211: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421213: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.421215: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421216: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421218: |     params: 16-bytes@0x7ffee51a5950
Sep 13 20:56:45.421228: |     result: newref k1-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.421230: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.421232: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421233: |     target: AES_ECB
Sep 13 20:56:45.421235: |     flags: SIGN
Sep 13 20:56:45.421237: |     key_size: 16-bytes
Sep 13 20:56:45.421238: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421240: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421242: |     params: 8-bytes@0x7ffee51a5938
Sep 13 20:56:45.421246: |     result: newref k1-key@0x55b124e3cfa0 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.421248: | k1: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.421252: | Computing E[1] using K3
Sep 13 20:56:45.421254: | XCBC: K3
Sep 13 20:56:45.421256: |   c1 a7 ab a1  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.421258: | XCBC: E[n-1]
Sep 13 20:56:45.421259: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.421261: | XCBC: M[n]
Sep 13 20:56:45.421262: |   00 01 02
Sep 13 20:56:45.421264: | XCBC: M[n]
Sep 13 20:56:45.421265: |   00 01 02
Sep 13 20:56:45.421267: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.421269: |   c1 a6 a9 21  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.421271: | XCBC: MAC
Sep 13 20:56:45.421273: |   5b 37 65 80  ae 2f 19 af  e7 21 9c ee  f1 72 75 6f
Sep 13 20:56:45.421275: | xcbc: delref k1-key@0x55b124e3cfa0
Sep 13 20:56:45.421277: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421279: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.421281: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421283: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421284: |     params: 16-bytes@0x7ffee51a5a60
Sep 13 20:56:45.421293: |     result: newref xcbc-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.421295: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.421297: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421299: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421300: |     key_size: 16-bytes
Sep 13 20:56:45.421302: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421304: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421305: |     params: 8-bytes@0x7ffee51a5a48
Sep 13 20:56:45.421310: |     result: newref xcbc-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.421312: | xcbc: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.421314: | PRF symkey interface: delref key-key@0x55b124e3b690
Sep 13 20:56:45.421317: | PRF symkey interface PRF aes_xcbc final-key@0x55b124e3cfa0 (size 16)
Sep 13 20:56:45.421319: | PRF symkey interface: key-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421321: | output: symkey-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421323: | RFC 3566 Test Case 2: AES-XCBC-MAC-96 with 3-byte input extracting all 16 bytes of key@0x55b124e3cfa0
Sep 13 20:56:45.421325: | RFC 3566 Test Case 2: AES-XCBC-MAC-96 with 3-byte input: symkey-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421327: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421332: | RFC 3566 Test Case 2: AES-XCBC-MAC-96 with 3-byte input: newref slot-key@0x55b124e3d030 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421334: | sizeof bytes 16
Sep 13 20:56:45.421341: | wrapper: (SECItemType)544236883: 6d a1 b5 1c  d1 63 16 9c  dd 0b ba 88  73 4f 82 18
Sep 13 20:56:45.421345: | RFC 3566 Test Case 2: AES-XCBC-MAC-96 with 3-byte input: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.421348: | RFC 3566 Test Case 2: AES-XCBC-MAC-96 with 3-byte input extracted len 16 bytes at 0x55b124e60008
Sep 13 20:56:45.421350: | unwrapped:
Sep 13 20:56:45.421351: |   5b 37 65 80  ae 2f 19 af  e7 21 9c ee  f1 72 75 6f
Sep 13 20:56:45.421353: | verify_chunk_data: RFC 3566 Test Case 2: AES-XCBC-MAC-96 with 3-byte input: ok
Sep 13 20:56:45.421355: | test_prf_vector: RFC 3566 Test Case 2: AES-XCBC-MAC-96 with 3-byte input passed
Sep 13 20:56:45.421357: | test_prf_vector: delref symkey-key@0x55b124e3cfa0
Sep 13 20:56:45.421359: | test_prf_vector: delref message-key@0x55b124e39e10
Sep 13 20:56:45.421362: | test_prf_vector: delref key-key@0x55b124e5cf30
Sep 13 20:56:45.421364: | test_prf_vector: delref output-key@NULL
Sep 13 20:56:45.421367:   RFC 3566 Test Case 3: AES-XCBC-MAC-96 with 16-byte input
Sep 13 20:56:45.421369: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f"
Sep 13 20:56:45.421371: | decode_to_chunk: output: 
Sep 13 20:56:45.421372: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421374: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f"
Sep 13 20:56:45.421376: | decode_to_chunk: output: 
Sep 13 20:56:45.421378: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421379: | decode_to_chunk: test_prf_vector: input "0xd2a246fa349b68a79998a4394ff7a263"
Sep 13 20:56:45.421381: | decode_to_chunk: output: 
Sep 13 20:56:45.421383: |   d2 a2 46 fa  34 9b 68 a7  99 98 a4 39  4f f7 a2 63
Sep 13 20:56:45.421385: | PRF chunk interface PRF aes_xcbc init key-chunk@0x55b124e5e7d8 (length 16)
Sep 13 20:56:45.421387: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421389: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421390: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.421392: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421393: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421395: |     params: 16-bytes@0x7ffee51a5a50
Sep 13 20:56:45.421404: |     result: newref key-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.421407: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.421409: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421410: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421412: |     key_size: 16-bytes
Sep 13 20:56:45.421413: |     base: base-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421415: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421417: |     params: 8-bytes@0x7ffee51a5a38
Sep 13 20:56:45.421421: |     result: newref key-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.421423: | key: delref tmp-key@0x55b124e39e10
Sep 13 20:56:45.421426: | XCBC: Key 16=16 just right
Sep 13 20:56:45.421428: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.421429: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421431: |     target: AES_ECB
Sep 13 20:56:45.421432: |     flags: SIGN
Sep 13 20:56:45.421434: |     key_size: 16-bytes
Sep 13 20:56:45.421436: |     base: base-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421437: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421439: |     params: 8-bytes@0x7ffee51a59d8
Sep 13 20:56:45.421444: |     result: newref key-key@0x55b124e39e10 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.421446: | PRF chunk interface: delref clone-key@0x55b124e5cf30
Sep 13 20:56:45.421448: | PRF chunk interface PRF aes_xcbc crypt-prf@0x55b124e3cf78
Sep 13 20:56:45.421450: | PRF chunk interface PRF aes_xcbc update message-bytes@0x55b124e3d228 (length 16)
Sep 13 20:56:45.421452: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421454: | XCBC: data
Sep 13 20:56:45.421458: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421459: | K extracting all 16 bytes of key@0x55b124e39e10
Sep 13 20:56:45.421461: | K: symkey-key@0x55b124e39e10 (16-bytes, AES_ECB)
Sep 13 20:56:45.421463: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421468: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.421470: | sizeof bytes 16
Sep 13 20:56:45.421475: | wrapper: (SECItemType)618285232: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.421479: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.421481: | K extracted len 16 bytes at 0x55b124e3d1e8
Sep 13 20:56:45.421483: | unwrapped:
Sep 13 20:56:45.421485: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421486: | XCBC: K:
Sep 13 20:56:45.421488: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421491: | XCBC: K1
Sep 13 20:56:45.421493: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.421495: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421497: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.421498: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421500: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421502: |     params: 16-bytes@0x7ffee51a5890
Sep 13 20:56:45.421511: |     result: newref k1-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.421513: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.421515: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421516: |     target: AES_ECB
Sep 13 20:56:45.421518: |     flags: SIGN
Sep 13 20:56:45.421519: |     key_size: 16-bytes
Sep 13 20:56:45.421521: |     base: base-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421523: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421524: |     params: 8-bytes@0x7ffee51a5878
Sep 13 20:56:45.421529: |     result: newref k1-key@0x55b124e5cf30 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.421531: | k1: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.421536: | XCBC: Computing E[1] using K2
Sep 13 20:56:45.421538: | XCBC: K2
Sep 13 20:56:45.421539: |   bd 86 2f fb  97 ad 2f b8  f8 b8 91 f6  03 2f 36 cb
Sep 13 20:56:45.421541: | XCBC: E[n-1]
Sep 13 20:56:45.421542: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.421544: | XCBC: M[n]
Sep 13 20:56:45.421546: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421547: | XCBC: M[n]^E[n-1]^K2
Sep 13 20:56:45.421549: |   bd 87 2d f8  93 a8 29 bf  f0 b1 9b fd  0f 22 38 c4
Sep 13 20:56:45.421552: | XCBC: MAC
Sep 13 20:56:45.421553: |   d2 a2 46 fa  34 9b 68 a7  99 98 a4 39  4f f7 a2 63
Sep 13 20:56:45.421555: | xcbc: delref k1-key@0x55b124e5cf30
Sep 13 20:56:45.421558: | PRF chunk interface: delref key-key@0x55b124e39e10
Sep 13 20:56:45.421561: | PRF chunk interface PRF aes_xcbc final length 16
Sep 13 20:56:45.421562: |   d2 a2 46 fa  34 9b 68 a7  99 98 a4 39  4f f7 a2 63
Sep 13 20:56:45.421564: | chunk output
Sep 13 20:56:45.421566: |   d2 a2 46 fa  34 9b 68 a7  99 98 a4 39  4f f7 a2 63
Sep 13 20:56:45.421568: | verify_chunk_data: RFC 3566 Test Case 3: AES-XCBC-MAC-96 with 16-byte input: ok
Sep 13 20:56:45.421570: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421571: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.421573: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421575: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421576: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.421585: |     result: newref key symkey-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.421588: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.421589: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421591: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421593: |     key_size: 16-bytes
Sep 13 20:56:45.421594: |     base: base-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421610: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421613: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.421619: |     result: newref key symkey-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.421622: | key symkey: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:45.421624: | PRF symkey interface PRF aes_xcbc init key symkey-key@0x55b124e39e10 (size 16)
Sep 13 20:56:45.421626: | PRF symkey interface: key symkey-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421628: | XCBC: Key 16=16 just right
Sep 13 20:56:45.421630: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.421632: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421633: |     target: AES_ECB
Sep 13 20:56:45.421635: |     flags: SIGN
Sep 13 20:56:45.421636: |     key_size: 16-bytes
Sep 13 20:56:45.421638: |     base: base-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421639: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421641: |     params: 8-bytes@0x7ffee51a5a08
Sep 13 20:56:45.421646: |     result: newref key symkey-key@0x55b124e5cf30 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.421649: | PRF symkey interface PRF aes_xcbc crypt-prf@0x55b124e3cf78
Sep 13 20:56:45.421651: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421652: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.421654: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421655: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421657: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.421667: |     result: newref message symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.421669: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.421671: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421672: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421674: |     key_size: 16-bytes
Sep 13 20:56:45.421676: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421677: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421679: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.421683: |     result: newref message symkey-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.421686: | message symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.421688: | PRF symkey interface PRF aes_xcbc update symkey message-key@0x55b124e3cfa0 (size 16)
Sep 13 20:56:45.421690: | PRF symkey interface: symkey message-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421692: | symkey message extracting all 16 bytes of key@0x55b124e3cfa0
Sep 13 20:56:45.421694: | symkey message: symkey-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421696: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421701: | symkey message: newref slot-key@0x55b124e3d030 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421703: | sizeof bytes 16
Sep 13 20:56:45.421708: | wrapper: (SECItemType)601791676: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.421712: | symkey message: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.421715: | symkey message extracted len 16 bytes at 0x55b124e3d1e8
Sep 13 20:56:45.421716: | unwrapped:
Sep 13 20:56:45.421718: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421720: | XCBC: data
Sep 13 20:56:45.421722: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421723: | K extracting all 16 bytes of key@0x55b124e5cf30
Sep 13 20:56:45.421725: | K: symkey-key@0x55b124e5cf30 (16-bytes, AES_ECB)
Sep 13 20:56:45.421727: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421732: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.421734: | sizeof bytes 16
Sep 13 20:56:45.421739: | wrapper: (SECItemType)618903664: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.421742: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.421747: | K extracted len 16 bytes at 0x55b124e60008
Sep 13 20:56:45.421749: | unwrapped:
Sep 13 20:56:45.421751: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421753: | XCBC: K:
Sep 13 20:56:45.421754: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421757: | XCBC: K1
Sep 13 20:56:45.421759: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.421761: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421763: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.421764: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421766: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421768: |     params: 16-bytes@0x7ffee51a5950
Sep 13 20:56:45.421777: |     result: newref k1-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.421779: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.421781: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421782: |     target: AES_ECB
Sep 13 20:56:45.421784: |     flags: SIGN
Sep 13 20:56:45.421785: |     key_size: 16-bytes
Sep 13 20:56:45.421787: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421789: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421790: |     params: 8-bytes@0x7ffee51a5938
Sep 13 20:56:45.421795: |     result: newref k1-key@0x55b124e3b690 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.421797: | k1: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.421801: | XCBC: Computing E[1] using K2
Sep 13 20:56:45.421803: | XCBC: K2
Sep 13 20:56:45.421805: |   bd 86 2f fb  97 ad 2f b8  f8 b8 91 f6  03 2f 36 cb
Sep 13 20:56:45.421807: | XCBC: E[n-1]
Sep 13 20:56:45.421808: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.421810: | XCBC: M[n]
Sep 13 20:56:45.421811: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421813: | XCBC: M[n]^E[n-1]^K2
Sep 13 20:56:45.421815: |   bd 87 2d f8  93 a8 29 bf  f0 b1 9b fd  0f 22 38 c4
Sep 13 20:56:45.421817: | XCBC: MAC
Sep 13 20:56:45.421819: |   d2 a2 46 fa  34 9b 68 a7  99 98 a4 39  4f f7 a2 63
Sep 13 20:56:45.421821: | xcbc: delref k1-key@0x55b124e3b690
Sep 13 20:56:45.421823: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421825: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.421827: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421828: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421830: |     params: 16-bytes@0x7ffee51a5a60
Sep 13 20:56:45.421839: |     result: newref xcbc-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.421841: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.421843: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421844: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421846: |     key_size: 16-bytes
Sep 13 20:56:45.421848: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421849: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421851: |     params: 8-bytes@0x7ffee51a5a48
Sep 13 20:56:45.421856: |     result: newref xcbc-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.421858: | xcbc: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.421860: | PRF symkey interface: delref key-key@0x55b124e5cf30
Sep 13 20:56:45.421863: | PRF symkey interface PRF aes_xcbc final-key@0x55b124e3b690 (size 16)
Sep 13 20:56:45.421865: | PRF symkey interface: key-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421867: | output: symkey-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421869: | RFC 3566 Test Case 3: AES-XCBC-MAC-96 with 16-byte input extracting all 16 bytes of key@0x55b124e3b690
Sep 13 20:56:45.421871: | RFC 3566 Test Case 3: AES-XCBC-MAC-96 with 16-byte input: symkey-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421873: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421880: | RFC 3566 Test Case 3: AES-XCBC-MAC-96 with 16-byte input: newref slot-key@0x55b124e3d030 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421882: | sizeof bytes 16
Sep 13 20:56:45.421888: | wrapper: (SECItemType)544236883: fa 55 6f 03  57 a8 a4 54  4d b0 3f 08  16 95 ae 5a
Sep 13 20:56:45.421891: | RFC 3566 Test Case 3: AES-XCBC-MAC-96 with 16-byte input: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.421894: | RFC 3566 Test Case 3: AES-XCBC-MAC-96 with 16-byte input extracted len 16 bytes at 0x55b124e60008
Sep 13 20:56:45.421896: | unwrapped:
Sep 13 20:56:45.421898: |   d2 a2 46 fa  34 9b 68 a7  99 98 a4 39  4f f7 a2 63
Sep 13 20:56:45.421899: | verify_chunk_data: RFC 3566 Test Case 3: AES-XCBC-MAC-96 with 16-byte input: ok
Sep 13 20:56:45.421901: | test_prf_vector: RFC 3566 Test Case 3: AES-XCBC-MAC-96 with 16-byte input passed
Sep 13 20:56:45.421903: | test_prf_vector: delref symkey-key@0x55b124e3b690
Sep 13 20:56:45.421906: | test_prf_vector: delref message-key@0x55b124e3cfa0
Sep 13 20:56:45.421908: | test_prf_vector: delref key-key@0x55b124e39e10
Sep 13 20:56:45.421911: | test_prf_vector: delref output-key@NULL
Sep 13 20:56:45.421913:   RFC 3566 Test Case 4: AES-XCBC-MAC-96 with 20-byte input
Sep 13 20:56:45.421915: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f"
Sep 13 20:56:45.421917: | decode_to_chunk: output: 
Sep 13 20:56:45.421919: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421920: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f10111213"
Sep 13 20:56:45.421922: | decode_to_chunk: output: 
Sep 13 20:56:45.421924: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421926: |   10 11 12 13
Sep 13 20:56:45.421927: | decode_to_chunk: test_prf_vector: input "0x47f51b4564966215b8985c63055ed308"
Sep 13 20:56:45.421929: | decode_to_chunk: output: 
Sep 13 20:56:45.421931: |   47 f5 1b 45  64 96 62 15  b8 98 5c 63  05 5e d3 08
Sep 13 20:56:45.421933: | PRF chunk interface PRF aes_xcbc init key-chunk@0x55b124e3cf38 (length 16)
Sep 13 20:56:45.421934: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.421936: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421938: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.421939: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421941: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.421943: |     params: 16-bytes@0x7ffee51a5a50
Sep 13 20:56:45.421952: |     result: newref key-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.421955: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.421956: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421958: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.421959: |     key_size: 16-bytes
Sep 13 20:56:45.421961: |     base: base-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421963: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421964: |     params: 8-bytes@0x7ffee51a5a38
Sep 13 20:56:45.421969: |     result: newref key-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.421971: | key: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.421973: | XCBC: Key 16=16 just right
Sep 13 20:56:45.421975: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.421977: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.421978: |     target: AES_ECB
Sep 13 20:56:45.421980: |     flags: SIGN
Sep 13 20:56:45.421982: |     key_size: 16-bytes
Sep 13 20:56:45.421983: |     base: base-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.421985: |     operation: FLAGS_ONLY
Sep 13 20:56:45.421986: |     params: 8-bytes@0x7ffee51a59d8
Sep 13 20:56:45.421991: |     result: newref key-key@0x55b124e3cfa0 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.421994: | PRF chunk interface: delref clone-key@0x55b124e39e10
Sep 13 20:56:45.421996: | PRF chunk interface PRF aes_xcbc crypt-prf@0x55b124e3d1e8
Sep 13 20:56:45.422000: | PRF chunk interface PRF aes_xcbc update message-bytes@0x55b124e37d18 (length 20)
Sep 13 20:56:45.422002: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422004: |   10 11 12 13
Sep 13 20:56:45.422006: | XCBC: data
Sep 13 20:56:45.422007: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422009: |   10 11 12 13
Sep 13 20:56:45.422011: | K extracting all 16 bytes of key@0x55b124e3cfa0
Sep 13 20:56:45.422012: | K: symkey-key@0x55b124e3cfa0 (16-bytes, AES_ECB)
Sep 13 20:56:45.422014: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422019: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.422021: | sizeof bytes 16
Sep 13 20:56:45.422026: | wrapper: (SECItemType)618285232: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.422030: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.422032: | K extracted len 16 bytes at 0x55b124e3cf78
Sep 13 20:56:45.422034: | unwrapped:
Sep 13 20:56:45.422036: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422037: | XCBC: K:
Sep 13 20:56:45.422039: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422042: | XCBC: K1
Sep 13 20:56:45.422044: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.422046: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422048: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.422049: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422051: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422052: |     params: 16-bytes@0x7ffee51a5890
Sep 13 20:56:45.422062: |     result: newref k1-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.422064: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.422066: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.422067: |     target: AES_ECB
Sep 13 20:56:45.422069: |     flags: SIGN
Sep 13 20:56:45.422070: |     key_size: 16-bytes
Sep 13 20:56:45.422072: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422074: |     operation: FLAGS_ONLY
Sep 13 20:56:45.422075: |     params: 8-bytes@0x7ffee51a5878
Sep 13 20:56:45.422080: |     result: newref k1-key@0x55b124e39e10 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.422082: | k1: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.422087: | Computing E[2] using K3
Sep 13 20:56:45.422089: | XCBC: K3
Sep 13 20:56:45.422091: |   c1 a7 ab a1  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.422092: | XCBC: E[n-1]
Sep 13 20:56:45.422094: |   1d 04 48 fa  cf 4d 9c 6f  55 b9 93 da  09 80 3d b3
Sep 13 20:56:45.422095: | XCBC: M[n]
Sep 13 20:56:45.422097: |   10 11 12 13
Sep 13 20:56:45.422099: | XCBC: M[n]
Sep 13 20:56:45.422100: |   10 11 12 13
Sep 13 20:56:45.422102: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.422103: |   cc b2 f1 48  ed 77 08 69  0d be 33 56  c1 6e ed dd
Sep 13 20:56:45.422106: | XCBC: MAC
Sep 13 20:56:45.422108: |   47 f5 1b 45  64 96 62 15  b8 98 5c 63  05 5e d3 08
Sep 13 20:56:45.422110: | xcbc: delref k1-key@0x55b124e39e10
Sep 13 20:56:45.422112: | PRF chunk interface: delref key-key@0x55b124e3cfa0
Sep 13 20:56:45.422115: | PRF chunk interface PRF aes_xcbc final length 16
Sep 13 20:56:45.422117: |   47 f5 1b 45  64 96 62 15  b8 98 5c 63  05 5e d3 08
Sep 13 20:56:45.422119: | chunk output
Sep 13 20:56:45.422120: |   47 f5 1b 45  64 96 62 15  b8 98 5c 63  05 5e d3 08
Sep 13 20:56:45.422122: | verify_chunk_data: RFC 3566 Test Case 4: AES-XCBC-MAC-96 with 20-byte input: ok
Sep 13 20:56:45.422124: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422125: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.422127: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422129: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422130: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.422140: |     result: newref key symkey-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.422147: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.422149: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.422150: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422152: |     key_size: 16-bytes
Sep 13 20:56:45.422154: |     base: base-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422155: |     operation: FLAGS_ONLY
Sep 13 20:56:45.422157: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.422162: |     result: newref key symkey-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.422164: | key symkey: delref tmp-key@0x55b124e39e10
Sep 13 20:56:45.422166: | PRF symkey interface PRF aes_xcbc init key symkey-key@0x55b124e3cfa0 (size 16)
Sep 13 20:56:45.422169: | PRF symkey interface: key symkey-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422170: | XCBC: Key 16=16 just right
Sep 13 20:56:45.422172: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.422173: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.422175: |     target: AES_ECB
Sep 13 20:56:45.422177: |     flags: SIGN
Sep 13 20:56:45.422178: |     key_size: 16-bytes
Sep 13 20:56:45.422180: |     base: base-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422181: |     operation: FLAGS_ONLY
Sep 13 20:56:45.422183: |     params: 8-bytes@0x7ffee51a5a08
Sep 13 20:56:45.422188: |     result: newref key symkey-key@0x55b124e39e10 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.422190: | PRF symkey interface PRF aes_xcbc crypt-prf@0x55b124e3d1e8
Sep 13 20:56:45.422192: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422194: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.422195: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422197: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422199: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.422208: |     result: newref message symkey-key@0x55b124e5cf30 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.422210: |     key-offset: 0, key-size: 20
Sep 13 20:56:45.422212: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.422213: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422215: |     key_size: 20-bytes
Sep 13 20:56:45.422217: |     base: base-key@0x55b124e5cf30 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422218: |     operation: FLAGS_ONLY
Sep 13 20:56:45.422220: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.422224: |     result: newref message symkey-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.422227: | message symkey: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:45.422229: | PRF symkey interface PRF aes_xcbc update symkey message-key@0x55b124e3b690 (size 20)
Sep 13 20:56:45.422231: | PRF symkey interface: symkey message-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422233: | symkey message extracting all 20 bytes of key@0x55b124e3b690
Sep 13 20:56:45.422235: | symkey message: symkey-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422237: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422242: | symkey message: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422244: | sizeof bytes 32
Sep 13 20:56:45.422250: | wrapper: (SECItemType)601791676: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58  6b dd de 64  e8 44 14 91  25 28 2a 43  c3 f8 56 28
Sep 13 20:56:45.422254: | symkey message: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.422257: | symkey message extracted len 32 bytes at 0x55b124e3cf78
Sep 13 20:56:45.422258: | unwrapped:
Sep 13 20:56:45.422260: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422262: |   10 11 12 13  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.422264: | XCBC: data
Sep 13 20:56:45.422265: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422269: |   10 11 12 13
Sep 13 20:56:45.422271: | K extracting all 16 bytes of key@0x55b124e39e10
Sep 13 20:56:45.422273: | K: symkey-key@0x55b124e39e10 (16-bytes, AES_ECB)
Sep 13 20:56:45.422274: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422279: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.422281: | sizeof bytes 16
Sep 13 20:56:45.422286: | wrapper: (SECItemType)619041040: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.422290: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.422292: | K extracted len 16 bytes at 0x55b124e3cf78
Sep 13 20:56:45.422294: | unwrapped:
Sep 13 20:56:45.422295: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422297: | XCBC: K:
Sep 13 20:56:45.422299: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422302: | XCBC: K1
Sep 13 20:56:45.422304: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.422305: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422307: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.422309: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422310: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422312: |     params: 16-bytes@0x7ffee51a5950
Sep 13 20:56:45.422321: |     result: newref k1-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.422324: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.422325: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.422327: |     target: AES_ECB
Sep 13 20:56:45.422328: |     flags: SIGN
Sep 13 20:56:45.422330: |     key_size: 16-bytes
Sep 13 20:56:45.422332: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422333: |     operation: FLAGS_ONLY
Sep 13 20:56:45.422335: |     params: 8-bytes@0x7ffee51a5938
Sep 13 20:56:45.422340: |     result: newref k1-key@0x55b124e5cf30 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.422342: | k1: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.422347: | Computing E[2] using K3
Sep 13 20:56:45.422349: | XCBC: K3
Sep 13 20:56:45.422350: |   c1 a7 ab a1  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.422352: | XCBC: E[n-1]
Sep 13 20:56:45.422353: |   1d 04 48 fa  cf 4d 9c 6f  55 b9 93 da  09 80 3d b3
Sep 13 20:56:45.422355: | XCBC: M[n]
Sep 13 20:56:45.422356: |   10 11 12 13
Sep 13 20:56:45.422358: | XCBC: M[n]
Sep 13 20:56:45.422360: |   10 11 12 13
Sep 13 20:56:45.422361: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.422363: |   cc b2 f1 48  ed 77 08 69  0d be 33 56  c1 6e ed dd
Sep 13 20:56:45.422365: | XCBC: MAC
Sep 13 20:56:45.422367: |   47 f5 1b 45  64 96 62 15  b8 98 5c 63  05 5e d3 08
Sep 13 20:56:45.422369: | xcbc: delref k1-key@0x55b124e5cf30
Sep 13 20:56:45.422371: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422373: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.422375: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422377: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422378: |     params: 16-bytes@0x7ffee51a5a60
Sep 13 20:56:45.422387: |     result: newref xcbc-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.422390: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.422391: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.422393: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422394: |     key_size: 16-bytes
Sep 13 20:56:45.422396: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422398: |     operation: FLAGS_ONLY
Sep 13 20:56:45.422399: |     params: 8-bytes@0x7ffee51a5a48
Sep 13 20:56:45.422404: |     result: newref xcbc-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.422406: | xcbc: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.422409: | PRF symkey interface: delref key-key@0x55b124e39e10
Sep 13 20:56:45.422414: | PRF symkey interface PRF aes_xcbc final-key@0x55b124e5cf30 (size 16)
Sep 13 20:56:45.422416: | PRF symkey interface: key-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422419: | output: symkey-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422421: | RFC 3566 Test Case 4: AES-XCBC-MAC-96 with 20-byte input extracting all 16 bytes of key@0x55b124e5cf30
Sep 13 20:56:45.422422: | RFC 3566 Test Case 4: AES-XCBC-MAC-96 with 20-byte input: symkey-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422424: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422429: | RFC 3566 Test Case 4: AES-XCBC-MAC-96 with 20-byte input: newref slot-key@0x55b124e3d030 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422431: | sizeof bytes 16
Sep 13 20:56:45.422436: | wrapper: (SECItemType)544236883: 41 0c 1a ee  99 3f 68 c8  4d b7 9c 76  7b c9 f7 0a
Sep 13 20:56:45.422440: | RFC 3566 Test Case 4: AES-XCBC-MAC-96 with 20-byte input: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.422443: | RFC 3566 Test Case 4: AES-XCBC-MAC-96 with 20-byte input extracted len 16 bytes at 0x55b124e60008
Sep 13 20:56:45.422445: | unwrapped:
Sep 13 20:56:45.422446: |   47 f5 1b 45  64 96 62 15  b8 98 5c 63  05 5e d3 08
Sep 13 20:56:45.422448: | verify_chunk_data: RFC 3566 Test Case 4: AES-XCBC-MAC-96 with 20-byte input: ok
Sep 13 20:56:45.422450: | test_prf_vector: RFC 3566 Test Case 4: AES-XCBC-MAC-96 with 20-byte input passed
Sep 13 20:56:45.422452: | test_prf_vector: delref symkey-key@0x55b124e5cf30
Sep 13 20:56:45.422454: | test_prf_vector: delref message-key@0x55b124e3b690
Sep 13 20:56:45.422457: | test_prf_vector: delref key-key@0x55b124e3cfa0
Sep 13 20:56:45.422459: | test_prf_vector: delref output-key@NULL
Sep 13 20:56:45.422461:   RFC 3566 Test Case 5: AES-XCBC-MAC-96 with 32-byte input
Sep 13 20:56:45.422463: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f"
Sep 13 20:56:45.422465: | decode_to_chunk: output: 
Sep 13 20:56:45.422467: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422469: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f"
Sep 13 20:56:45.422471: | decode_to_chunk: output: 
Sep 13 20:56:45.422472: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422474: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.422476: | decode_to_chunk: test_prf_vector: input "0xf54f0ec8d2b9f3d36807734bd5283fd4"
Sep 13 20:56:45.422478: | decode_to_chunk: output: 
Sep 13 20:56:45.422479: |   f5 4f 0e c8  d2 b9 f3 d3  68 07 73 4b  d5 28 3f d4
Sep 13 20:56:45.422481: | PRF chunk interface PRF aes_xcbc init key-chunk@0x55b124e5e7d8 (length 16)
Sep 13 20:56:45.422483: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422485: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422486: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.422488: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422490: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422491: |     params: 16-bytes@0x7ffee51a5a50
Sep 13 20:56:45.422501: |     result: newref key-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.422503: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.422505: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.422506: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422508: |     key_size: 16-bytes
Sep 13 20:56:45.422509: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422511: |     operation: FLAGS_ONLY
Sep 13 20:56:45.422513: |     params: 8-bytes@0x7ffee51a5a38
Sep 13 20:56:45.422517: |     result: newref key-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.422520: | key: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.422522: | XCBC: Key 16=16 just right
Sep 13 20:56:45.422525: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.422527: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.422529: |     target: AES_ECB
Sep 13 20:56:45.422530: |     flags: SIGN
Sep 13 20:56:45.422532: |     key_size: 16-bytes
Sep 13 20:56:45.422534: |     base: base-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422535: |     operation: FLAGS_ONLY
Sep 13 20:56:45.422537: |     params: 8-bytes@0x7ffee51a59d8
Sep 13 20:56:45.422542: |     result: newref key-key@0x55b124e3b690 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.422544: | PRF chunk interface: delref clone-key@0x55b124e3cfa0
Sep 13 20:56:45.422547: | PRF chunk interface PRF aes_xcbc crypt-prf@0x55b124e3d1e8
Sep 13 20:56:45.422549: | PRF chunk interface PRF aes_xcbc update message-bytes@0x55b124e37d18 (length 32)
Sep 13 20:56:45.422551: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422552: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.422554: | XCBC: data
Sep 13 20:56:45.422556: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422557: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.422559: | K extracting all 16 bytes of key@0x55b124e3b690
Sep 13 20:56:45.422561: | K: symkey-key@0x55b124e3b690 (16-bytes, AES_ECB)
Sep 13 20:56:45.422563: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422567: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.422569: | sizeof bytes 16
Sep 13 20:56:45.422574: | wrapper: (SECItemType)618285232: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.422578: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.422580: | K extracted len 16 bytes at 0x55b124e3cf78
Sep 13 20:56:45.422582: | unwrapped:
Sep 13 20:56:45.422584: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422585: | XCBC: K:
Sep 13 20:56:45.422587: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422590: | XCBC: K1
Sep 13 20:56:45.422592: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.422605: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422607: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.422609: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422611: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422612: |     params: 16-bytes@0x7ffee51a5890
Sep 13 20:56:45.422623: |     result: newref k1-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.422626: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.422627: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.422629: |     target: AES_ECB
Sep 13 20:56:45.422630: |     flags: SIGN
Sep 13 20:56:45.422632: |     key_size: 16-bytes
Sep 13 20:56:45.422634: |     base: base-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422635: |     operation: FLAGS_ONLY
Sep 13 20:56:45.422637: |     params: 8-bytes@0x7ffee51a5878
Sep 13 20:56:45.422642: |     result: newref k1-key@0x55b124e3cfa0 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.422644: | k1: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:45.422649: | XCBC: Computing E[2] using K2
Sep 13 20:56:45.422651: | XCBC: K2
Sep 13 20:56:45.422653: |   bd 86 2f fb  97 ad 2f b8  f8 b8 91 f6  03 2f 36 cb
Sep 13 20:56:45.422654: | XCBC: E[n-1]
Sep 13 20:56:45.422656: |   1d 04 48 fa  cf 4d 9c 6f  55 b9 93 da  09 80 3d b3
Sep 13 20:56:45.422658: | XCBC: M[n]
Sep 13 20:56:45.422659: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.422661: | XCBC: M[n]^E[n-1]^K2
Sep 13 20:56:45.422662: |   b0 93 75 12  4c f5 a5 c0  b5 18 18 37  16 b2 15 67
Sep 13 20:56:45.422665: | XCBC: MAC
Sep 13 20:56:45.422667: |   f5 4f 0e c8  d2 b9 f3 d3  68 07 73 4b  d5 28 3f d4
Sep 13 20:56:45.422669: | xcbc: delref k1-key@0x55b124e3cfa0
Sep 13 20:56:45.422671: | PRF chunk interface: delref key-key@0x55b124e3b690
Sep 13 20:56:45.422674: | PRF chunk interface PRF aes_xcbc final length 16
Sep 13 20:56:45.422678: |   f5 4f 0e c8  d2 b9 f3 d3  68 07 73 4b  d5 28 3f d4
Sep 13 20:56:45.422680: | chunk output
Sep 13 20:56:45.422682: |   f5 4f 0e c8  d2 b9 f3 d3  68 07 73 4b  d5 28 3f d4
Sep 13 20:56:45.422684: | verify_chunk_data: RFC 3566 Test Case 5: AES-XCBC-MAC-96 with 32-byte input: ok
Sep 13 20:56:45.422686: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422687: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.422689: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422691: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422692: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.422702: |     result: newref key symkey-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.422704: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.422706: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.422707: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422709: |     key_size: 16-bytes
Sep 13 20:56:45.422711: |     base: base-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422712: |     operation: FLAGS_ONLY
Sep 13 20:56:45.422714: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.422719: |     result: newref key symkey-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.422721: | key symkey: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.422723: | PRF symkey interface PRF aes_xcbc init key symkey-key@0x55b124e3b690 (size 16)
Sep 13 20:56:45.422725: | PRF symkey interface: key symkey-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422727: | XCBC: Key 16=16 just right
Sep 13 20:56:45.422729: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.422730: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.422732: |     target: AES_ECB
Sep 13 20:56:45.422733: |     flags: SIGN
Sep 13 20:56:45.422735: |     key_size: 16-bytes
Sep 13 20:56:45.422737: |     base: base-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422738: |     operation: FLAGS_ONLY
Sep 13 20:56:45.422740: |     params: 8-bytes@0x7ffee51a5a08
Sep 13 20:56:45.422745: |     result: newref key symkey-key@0x55b124e3cfa0 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.422747: | PRF symkey interface PRF aes_xcbc crypt-prf@0x55b124e3d1e8
Sep 13 20:56:45.422749: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422751: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.422752: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422754: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422756: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.422765: |     result: newref message symkey-key@0x55b124e39e10 (48-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.422768: |     key-offset: 0, key-size: 32
Sep 13 20:56:45.422769: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.422771: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422772: |     key_size: 32-bytes
Sep 13 20:56:45.422774: |     base: base-key@0x55b124e39e10 (48-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422776: |     operation: FLAGS_ONLY
Sep 13 20:56:45.422777: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.422782: |     result: newref message symkey-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.422784: | message symkey: delref tmp-key@0x55b124e39e10
Sep 13 20:56:45.422787: | PRF symkey interface PRF aes_xcbc update symkey message-key@0x55b124e5cf30 (size 32)
Sep 13 20:56:45.422789: | PRF symkey interface: symkey message-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422791: | symkey message extracting all 32 bytes of key@0x55b124e5cf30
Sep 13 20:56:45.422793: | symkey message: symkey-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422795: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422802: | symkey message: newref slot-key@0x55b124e3d030 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422804: | sizeof bytes 32
Sep 13 20:56:45.422811: | wrapper: (SECItemType)601791676: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58  7f b0 24 1c  7d 91 69 91  e7 88 c4 59  cb 65 d7 b0
Sep 13 20:56:45.422814: | symkey message: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.422817: | symkey message extracted len 32 bytes at 0x55b124e61918
Sep 13 20:56:45.422819: | unwrapped:
Sep 13 20:56:45.422821: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422822: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.422824: | XCBC: data
Sep 13 20:56:45.422826: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422827: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.422829: | K extracting all 16 bytes of key@0x55b124e3cfa0
Sep 13 20:56:45.422831: | K: symkey-key@0x55b124e3cfa0 (16-bytes, AES_ECB)
Sep 13 20:56:45.422833: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422838: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.422840: | sizeof bytes 16
Sep 13 20:56:45.422845: | wrapper: (SECItemType)618897392: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.422848: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.422851: | K extracted len 16 bytes at 0x55b124e60008
Sep 13 20:56:45.422853: | unwrapped:
Sep 13 20:56:45.422854: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422856: | XCBC: K:
Sep 13 20:56:45.422857: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.422860: | XCBC: K1
Sep 13 20:56:45.422862: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.422864: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422866: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.422867: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422869: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422871: |     params: 16-bytes@0x7ffee51a5950
Sep 13 20:56:45.422880: |     result: newref k1-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.422882: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.422884: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.422885: |     target: AES_ECB
Sep 13 20:56:45.422887: |     flags: SIGN
Sep 13 20:56:45.422888: |     key_size: 16-bytes
Sep 13 20:56:45.422890: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422892: |     operation: FLAGS_ONLY
Sep 13 20:56:45.422893: |     params: 8-bytes@0x7ffee51a5938
Sep 13 20:56:45.422898: |     result: newref k1-key@0x55b124e39e10 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.422901: | k1: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.422905: | XCBC: Computing E[2] using K2
Sep 13 20:56:45.422907: | XCBC: K2
Sep 13 20:56:45.422909: |   bd 86 2f fb  97 ad 2f b8  f8 b8 91 f6  03 2f 36 cb
Sep 13 20:56:45.422910: | XCBC: E[n-1]
Sep 13 20:56:45.422912: |   1d 04 48 fa  cf 4d 9c 6f  55 b9 93 da  09 80 3d b3
Sep 13 20:56:45.422914: | XCBC: M[n]
Sep 13 20:56:45.422915: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.422917: | XCBC: M[n]^E[n-1]^K2
Sep 13 20:56:45.422918: |   b0 93 75 12  4c f5 a5 c0  b5 18 18 37  16 b2 15 67
Sep 13 20:56:45.422921: | XCBC: MAC
Sep 13 20:56:45.422923: |   f5 4f 0e c8  d2 b9 f3 d3  68 07 73 4b  d5 28 3f d4
Sep 13 20:56:45.422925: | xcbc: delref k1-key@0x55b124e39e10
Sep 13 20:56:45.422927: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422929: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.422931: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422932: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422934: |     params: 16-bytes@0x7ffee51a5a60
Sep 13 20:56:45.422943: |     result: newref xcbc-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.422947: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.422949: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.422951: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.422952: |     key_size: 16-bytes
Sep 13 20:56:45.422954: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422955: |     operation: FLAGS_ONLY
Sep 13 20:56:45.422957: |     params: 8-bytes@0x7ffee51a5a48
Sep 13 20:56:45.422962: |     result: newref xcbc-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.422964: | xcbc: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.422967: | PRF symkey interface: delref key-key@0x55b124e3cfa0
Sep 13 20:56:45.422969: | PRF symkey interface PRF aes_xcbc final-key@0x55b124e39e10 (size 16)
Sep 13 20:56:45.422972: | PRF symkey interface: key-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422974: | output: symkey-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422975: | RFC 3566 Test Case 5: AES-XCBC-MAC-96 with 32-byte input extracting all 16 bytes of key@0x55b124e39e10
Sep 13 20:56:45.422977: | RFC 3566 Test Case 5: AES-XCBC-MAC-96 with 32-byte input: symkey-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422979: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.422984: | RFC 3566 Test Case 5: AES-XCBC-MAC-96 with 32-byte input: newref slot-key@0x55b124e3d030 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.422986: | sizeof bytes 16
Sep 13 20:56:45.422991: | wrapper: (SECItemType)544236883: 7a 72 c2 13  5b 16 ee 0a  e8 4f c0 bc  34 d3 8e bf
Sep 13 20:56:45.422995: | RFC 3566 Test Case 5: AES-XCBC-MAC-96 with 32-byte input: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.422997: | RFC 3566 Test Case 5: AES-XCBC-MAC-96 with 32-byte input extracted len 16 bytes at 0x55b124e60008
Sep 13 20:56:45.422999: | unwrapped:
Sep 13 20:56:45.423001: |   f5 4f 0e c8  d2 b9 f3 d3  68 07 73 4b  d5 28 3f d4
Sep 13 20:56:45.423003: | verify_chunk_data: RFC 3566 Test Case 5: AES-XCBC-MAC-96 with 32-byte input: ok
Sep 13 20:56:45.423005: | test_prf_vector: RFC 3566 Test Case 5: AES-XCBC-MAC-96 with 32-byte input passed
Sep 13 20:56:45.423006: | test_prf_vector: delref symkey-key@0x55b124e39e10
Sep 13 20:56:45.423009: | test_prf_vector: delref message-key@0x55b124e5cf30
Sep 13 20:56:45.423011: | test_prf_vector: delref key-key@0x55b124e3b690
Sep 13 20:56:45.423014: | test_prf_vector: delref output-key@NULL
Sep 13 20:56:45.423016:   RFC 3566 Test Case 6: AES-XCBC-MAC-96 with 34-byte input
Sep 13 20:56:45.423018: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f"
Sep 13 20:56:45.423020: | decode_to_chunk: output: 
Sep 13 20:56:45.423022: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423023: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f2021"
Sep 13 20:56:45.423026: | decode_to_chunk: output: 
Sep 13 20:56:45.423027: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423029: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.423031: |   20 21
Sep 13 20:56:45.423032: | decode_to_chunk: test_prf_vector: input "0xbecbb3bccdb518a30677d5481fb6b4d8"
Sep 13 20:56:45.423034: | decode_to_chunk: output: 
Sep 13 20:56:45.423036: |   be cb b3 bc  cd b5 18 a3  06 77 d5 48  1f b6 b4 d8
Sep 13 20:56:45.423038: | PRF chunk interface PRF aes_xcbc init key-chunk@0x55b124e3cf38 (length 16)
Sep 13 20:56:45.423040: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423041: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423043: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.423045: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.423046: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423048: |     params: 16-bytes@0x7ffee51a5a50
Sep 13 20:56:45.423057: |     result: newref key-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.423062: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.423063: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.423065: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.423067: |     key_size: 16-bytes
Sep 13 20:56:45.423068: |     base: base-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423070: |     operation: FLAGS_ONLY
Sep 13 20:56:45.423072: |     params: 8-bytes@0x7ffee51a5a38
Sep 13 20:56:45.423076: |     result: newref key-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.423078: | key: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:45.423081: | XCBC: Key 16=16 just right
Sep 13 20:56:45.423083: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.423084: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.423086: |     target: AES_ECB
Sep 13 20:56:45.423087: |     flags: SIGN
Sep 13 20:56:45.423089: |     key_size: 16-bytes
Sep 13 20:56:45.423091: |     base: base-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423092: |     operation: FLAGS_ONLY
Sep 13 20:56:45.423094: |     params: 8-bytes@0x7ffee51a59d8
Sep 13 20:56:45.423099: |     result: newref key-key@0x55b124e5cf30 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.423101: | PRF chunk interface: delref clone-key@0x55b124e3b690
Sep 13 20:56:45.423103: | PRF chunk interface PRF aes_xcbc crypt-prf@0x55b124e3cf78
Sep 13 20:56:45.423105: | PRF chunk interface PRF aes_xcbc update message-bytes@0x55b124e3d188 (length 34)
Sep 13 20:56:45.423107: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423109: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.423110: |   20 21
Sep 13 20:56:45.423112: | XCBC: data
Sep 13 20:56:45.423114: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423116: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.423117: |   20 21
Sep 13 20:56:45.423119: | K extracting all 16 bytes of key@0x55b124e5cf30
Sep 13 20:56:45.423121: | K: symkey-key@0x55b124e5cf30 (16-bytes, AES_ECB)
Sep 13 20:56:45.423123: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423127: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.423129: | sizeof bytes 16
Sep 13 20:56:45.423134: | wrapper: (SECItemType)618285232: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.423138: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.423140: | K extracted len 16 bytes at 0x55b124e37d18
Sep 13 20:56:45.423142: | unwrapped:
Sep 13 20:56:45.423144: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423145: | XCBC: K:
Sep 13 20:56:45.423147: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423150: | XCBC: K1
Sep 13 20:56:45.423152: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.423154: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423156: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.423157: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.423159: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423161: |     params: 16-bytes@0x7ffee51a5890
Sep 13 20:56:45.423170: |     result: newref k1-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.423172: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.423174: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.423175: |     target: AES_ECB
Sep 13 20:56:45.423177: |     flags: SIGN
Sep 13 20:56:45.423178: |     key_size: 16-bytes
Sep 13 20:56:45.423180: |     base: base-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423182: |     operation: FLAGS_ONLY
Sep 13 20:56:45.423183: |     params: 8-bytes@0x7ffee51a5878
Sep 13 20:56:45.423188: |     result: newref k1-key@0x55b124e3b690 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.423190: | k1: delref tmp-key@0x55b124e39e10
Sep 13 20:56:45.423198: | Computing E[3] using K3
Sep 13 20:56:45.423200: | XCBC: K3
Sep 13 20:56:45.423202: |   c1 a7 ab a1  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.423203: | XCBC: E[n-1]
Sep 13 20:56:45.423205: |   09 02 5e 5a  67 25 20 72  44 14 5c 6b  80 66 85 79
Sep 13 20:56:45.423206: | XCBC: M[n]
Sep 13 20:56:45.423208: |   20 21
Sep 13 20:56:45.423210: | XCBC: M[n]
Sep 13 20:56:45.423211: |   20 21
Sep 13 20:56:45.423213: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.423214: |   e8 84 75 fb  c5 1f b4 74  1c 13 fc e7  48 88 55 17
Sep 13 20:56:45.423217: | XCBC: MAC
Sep 13 20:56:45.423219: |   be cb b3 bc  cd b5 18 a3  06 77 d5 48  1f b6 b4 d8
Sep 13 20:56:45.423221: | xcbc: delref k1-key@0x55b124e3b690
Sep 13 20:56:45.423223: | PRF chunk interface: delref key-key@0x55b124e5cf30
Sep 13 20:56:45.423226: | PRF chunk interface PRF aes_xcbc final length 16
Sep 13 20:56:45.423228: |   be cb b3 bc  cd b5 18 a3  06 77 d5 48  1f b6 b4 d8
Sep 13 20:56:45.423229: | chunk output
Sep 13 20:56:45.423231: |   be cb b3 bc  cd b5 18 a3  06 77 d5 48  1f b6 b4 d8
Sep 13 20:56:45.423233: | verify_chunk_data: RFC 3566 Test Case 6: AES-XCBC-MAC-96 with 34-byte input: ok
Sep 13 20:56:45.423235: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423236: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.423238: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.423239: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423241: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.423250: |     result: newref key symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.423253: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.423254: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.423256: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.423258: |     key_size: 16-bytes
Sep 13 20:56:45.423259: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423261: |     operation: FLAGS_ONLY
Sep 13 20:56:45.423263: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.423267: |     result: newref key symkey-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.423269: | key symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.423272: | PRF symkey interface PRF aes_xcbc init key symkey-key@0x55b124e5cf30 (size 16)
Sep 13 20:56:45.423274: | PRF symkey interface: key symkey-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423276: | XCBC: Key 16=16 just right
Sep 13 20:56:45.423277: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.423279: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.423280: |     target: AES_ECB
Sep 13 20:56:45.423282: |     flags: SIGN
Sep 13 20:56:45.423283: |     key_size: 16-bytes
Sep 13 20:56:45.423285: |     base: base-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423287: |     operation: FLAGS_ONLY
Sep 13 20:56:45.423288: |     params: 8-bytes@0x7ffee51a5a08
Sep 13 20:56:45.423293: |     result: newref key symkey-key@0x55b124e3b690 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.423296: | PRF symkey interface PRF aes_xcbc crypt-prf@0x55b124e37d18
Sep 13 20:56:45.423298: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423299: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.423301: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.423302: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423304: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.423313: |     result: newref message symkey-key@0x55b124e3cfa0 (50-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.423315: |     key-offset: 0, key-size: 34
Sep 13 20:56:45.423317: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.423318: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.423320: |     key_size: 34-bytes
Sep 13 20:56:45.423322: |     base: base-key@0x55b124e3cfa0 (50-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423325: |     operation: FLAGS_ONLY
Sep 13 20:56:45.423327: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.423332: |     result: newref message symkey-key@0x55b124e39e10 (34-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.423334: | message symkey: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.423337: | PRF symkey interface PRF aes_xcbc update symkey message-key@0x55b124e39e10 (size 34)
Sep 13 20:56:45.423339: | PRF symkey interface: symkey message-key@0x55b124e39e10 (34-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423341: | symkey message extracting all 34 bytes of key@0x55b124e39e10
Sep 13 20:56:45.423343: | symkey message: symkey-key@0x55b124e39e10 (34-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423344: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423349: | symkey message: newref slot-key@0x55b124e3d030 (34-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423351: | sizeof bytes 48
Sep 13 20:56:45.423360: | wrapper: (SECItemType)601791676: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58  7f b0 24 1c  7d 91 69 91  e7 88 c4 59  cb 65 d7 b0  e9 1b 25 13  e2 5a 0a a8  6b 07 14 7a  7f 45 b8 8f
Sep 13 20:56:45.423363: | symkey message: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.423366: | symkey message extracted len 48 bytes at 0x55b124e61928
Sep 13 20:56:45.423368: | unwrapped:
Sep 13 20:56:45.423369: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423371: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.423373: |   20 21 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423374: | XCBC: data
Sep 13 20:56:45.423376: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423378: |   10 11 12 13  14 15 16 17  18 19 1a 1b  1c 1d 1e 1f
Sep 13 20:56:45.423379: |   20 21
Sep 13 20:56:45.423381: | K extracting all 16 bytes of key@0x55b124e3b690
Sep 13 20:56:45.423383: | K: symkey-key@0x55b124e3b690 (16-bytes, AES_ECB)
Sep 13 20:56:45.423385: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423389: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.423392: | sizeof bytes 16
Sep 13 20:56:45.423396: | wrapper: (SECItemType)619047232: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.423400: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.423402: | K extracted len 16 bytes at 0x55b124e3d248
Sep 13 20:56:45.423404: | unwrapped:
Sep 13 20:56:45.423406: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423407: | XCBC: K:
Sep 13 20:56:45.423409: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423412: | XCBC: K1
Sep 13 20:56:45.423414: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.423416: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423417: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.423419: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.423421: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423422: |     params: 16-bytes@0x7ffee51a5950
Sep 13 20:56:45.423431: |     result: newref k1-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.423434: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.423435: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.423437: |     target: AES_ECB
Sep 13 20:56:45.423438: |     flags: SIGN
Sep 13 20:56:45.423440: |     key_size: 16-bytes
Sep 13 20:56:45.423442: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423443: |     operation: FLAGS_ONLY
Sep 13 20:56:45.423445: |     params: 8-bytes@0x7ffee51a5938
Sep 13 20:56:45.423450: |     result: newref k1-key@0x55b124e3cfa0 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.423452: | k1: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.423457: | Computing E[3] using K3
Sep 13 20:56:45.423459: | XCBC: K3
Sep 13 20:56:45.423461: |   c1 a7 ab a1  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.423465: | XCBC: E[n-1]
Sep 13 20:56:45.423466: |   09 02 5e 5a  67 25 20 72  44 14 5c 6b  80 66 85 79
Sep 13 20:56:45.423468: | XCBC: M[n]
Sep 13 20:56:45.423469: |   20 21
Sep 13 20:56:45.423471: | XCBC: M[n]
Sep 13 20:56:45.423473: |   20 21
Sep 13 20:56:45.423474: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.423476: |   e8 84 75 fb  c5 1f b4 74  1c 13 fc e7  48 88 55 17
Sep 13 20:56:45.423479: | XCBC: MAC
Sep 13 20:56:45.423480: |   be cb b3 bc  cd b5 18 a3  06 77 d5 48  1f b6 b4 d8
Sep 13 20:56:45.423482: | xcbc: delref k1-key@0x55b124e3cfa0
Sep 13 20:56:45.423485: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423487: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.423488: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.423490: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423491: |     params: 16-bytes@0x7ffee51a5a60
Sep 13 20:56:45.423500: |     result: newref xcbc-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.423503: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.423504: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.423506: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.423507: |     key_size: 16-bytes
Sep 13 20:56:45.423509: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423511: |     operation: FLAGS_ONLY
Sep 13 20:56:45.423512: |     params: 8-bytes@0x7ffee51a5a48
Sep 13 20:56:45.423517: |     result: newref xcbc-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.423519: | xcbc: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.423522: | PRF symkey interface: delref key-key@0x55b124e3b690
Sep 13 20:56:45.423524: | PRF symkey interface PRF aes_xcbc final-key@0x55b124e3cfa0 (size 16)
Sep 13 20:56:45.423526: | PRF symkey interface: key-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423528: | output: symkey-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423530: | RFC 3566 Test Case 6: AES-XCBC-MAC-96 with 34-byte input extracting all 16 bytes of key@0x55b124e3cfa0
Sep 13 20:56:45.423532: | RFC 3566 Test Case 6: AES-XCBC-MAC-96 with 34-byte input: symkey-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423534: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423539: | RFC 3566 Test Case 6: AES-XCBC-MAC-96 with 34-byte input: newref slot-key@0x55b124e3d030 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423541: | sizeof bytes 16
Sep 13 20:56:45.423546: | wrapper: (SECItemType)544236883: 66 7f ca 18  83 d8 b7 11  54 88 aa a4  fc b4 06 9f
Sep 13 20:56:45.423550: | RFC 3566 Test Case 6: AES-XCBC-MAC-96 with 34-byte input: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.423553: | RFC 3566 Test Case 6: AES-XCBC-MAC-96 with 34-byte input extracted len 16 bytes at 0x55b124e37d18
Sep 13 20:56:45.423554: | unwrapped:
Sep 13 20:56:45.423556: |   be cb b3 bc  cd b5 18 a3  06 77 d5 48  1f b6 b4 d8
Sep 13 20:56:45.423558: | verify_chunk_data: RFC 3566 Test Case 6: AES-XCBC-MAC-96 with 34-byte input: ok
Sep 13 20:56:45.423560: | test_prf_vector: RFC 3566 Test Case 6: AES-XCBC-MAC-96 with 34-byte input passed
Sep 13 20:56:45.423561: | test_prf_vector: delref symkey-key@0x55b124e3cfa0
Sep 13 20:56:45.423564: | test_prf_vector: delref message-key@0x55b124e39e10
Sep 13 20:56:45.423566: | test_prf_vector: delref key-key@0x55b124e5cf30
Sep 13 20:56:45.423569: | test_prf_vector: delref output-key@NULL
Sep 13 20:56:45.423571:   RFC 3566 Test Case 7: AES-XCBC-MAC-96 with 1000-byte input
Sep 13 20:56:45.423573: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f"
Sep 13 20:56:45.423575: | decode_to_chunk: output: 
Sep 13 20:56:45.423576: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423579: | decode_to_chunk: test_prf_vector: input "0xf0dafee895db30253761103b5d84528f"
Sep 13 20:56:45.423581: | decode_to_chunk: output: 
Sep 13 20:56:45.423585: |   f0 da fe e8  95 db 30 25  37 61 10 3b  5d 84 52 8f
Sep 13 20:56:45.423587: | PRF chunk interface PRF aes_xcbc init key-chunk@0x55b124e5e7d8 (length 16)
Sep 13 20:56:45.423588: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423590: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423603: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.423605: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.423607: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423609: |     params: 16-bytes@0x7ffee51a5a50
Sep 13 20:56:45.423619: |     result: newref key-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.423622: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.423624: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.423625: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.423627: |     key_size: 16-bytes
Sep 13 20:56:45.423628: |     base: base-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423630: |     operation: FLAGS_ONLY
Sep 13 20:56:45.423632: |     params: 8-bytes@0x7ffee51a5a38
Sep 13 20:56:45.423637: |     result: newref key-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.423639: | key: delref tmp-key@0x55b124e39e10
Sep 13 20:56:45.423641: | XCBC: Key 16=16 just right
Sep 13 20:56:45.423643: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.423644: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.423646: |     target: AES_ECB
Sep 13 20:56:45.423648: |     flags: SIGN
Sep 13 20:56:45.423649: |     key_size: 16-bytes
Sep 13 20:56:45.423651: |     base: base-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423652: |     operation: FLAGS_ONLY
Sep 13 20:56:45.423654: |     params: 8-bytes@0x7ffee51a59d8
Sep 13 20:56:45.423659: |     result: newref key-key@0x55b124e39e10 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.423661: | PRF chunk interface: delref clone-key@0x55b124e5cf30
Sep 13 20:56:45.423664: | PRF chunk interface PRF aes_xcbc crypt-prf@0x55b124e3d188
Sep 13 20:56:45.423666: | PRF chunk interface PRF aes_xcbc update message-bytes@0x55b124e618c8 (length 1000)
Sep 13 20:56:45.423668: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423669: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423671: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423673: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423674: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423676: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423677: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423679: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423681: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423682: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423684: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423685: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423687: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423688: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423690: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423692: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423693: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423695: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423696: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423698: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423699: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423701: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423703: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423707: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423709: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423710: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423712: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423713: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423715: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423717: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423718: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423720: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423721: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423723: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423724: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423726: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423728: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423729: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423731: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423732: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423734: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423736: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423737: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423739: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423740: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423742: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423744: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423745: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423747: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423748: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423750: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423751: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423753: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423755: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423756: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423758: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423759: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423761: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423763: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423764: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423766: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423767: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423769: |   00 00 00 00  00 00 00 00
Sep 13 20:56:45.423771: | XCBC: data
Sep 13 20:56:45.423773: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423775: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423776: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423778: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423779: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423781: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423783: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423784: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423786: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423787: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423789: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423790: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423794: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423795: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423797: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423798: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423800: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423802: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423803: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423805: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423806: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423808: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423810: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423811: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423813: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423814: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423816: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423817: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423819: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423821: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423822: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423824: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423825: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423827: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423828: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423830: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423832: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423833: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423835: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423836: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423838: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423839: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423841: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423843: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423844: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423846: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423847: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423849: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423850: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423852: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423854: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423855: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423857: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423858: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423860: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423861: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423863: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423865: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423866: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423868: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423869: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423871: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.423872: |   00 00 00 00  00 00 00 00
Sep 13 20:56:45.423874: | K extracting all 16 bytes of key@0x55b124e39e10
Sep 13 20:56:45.423878: | K: symkey-key@0x55b124e39e10 (16-bytes, AES_ECB)
Sep 13 20:56:45.423880: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423885: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.423887: | sizeof bytes 16
Sep 13 20:56:45.423893: | wrapper: (SECItemType)618285232: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.423896: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.423899: | K extracted len 16 bytes at 0x55b124e3d1d8
Sep 13 20:56:45.423901: | unwrapped:
Sep 13 20:56:45.423902: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423904: | XCBC: K:
Sep 13 20:56:45.423905: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.423909: | XCBC: K1
Sep 13 20:56:45.423910: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.423912: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423914: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.423916: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.423917: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.423919: |     params: 16-bytes@0x7ffee51a5890
Sep 13 20:56:45.423928: |     result: newref k1-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.423931: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.423932: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.423934: |     target: AES_ECB
Sep 13 20:56:45.423935: |     flags: SIGN
Sep 13 20:56:45.423937: |     key_size: 16-bytes
Sep 13 20:56:45.423939: |     base: base-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.423940: |     operation: FLAGS_ONLY
Sep 13 20:56:45.423942: |     params: 8-bytes@0x7ffee51a5878
Sep 13 20:56:45.423947: |     result: newref k1-key@0x55b124e5cf30 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.423949: | k1: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.423995: | Computing E[63] using K3
Sep 13 20:56:45.423997: | XCBC: K3
Sep 13 20:56:45.423999: |   c1 a7 ab a1  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.424000: | XCBC: E[n-1]
Sep 13 20:56:45.424002: |   5c 88 af cc  1e 1e 83 fc  c4 2c 0c e4  12 12 f5 17
Sep 13 20:56:45.424003: | XCBC: M[n]
Sep 13 20:56:45.424005: |   00 00 00 00  00 00 00 00
Sep 13 20:56:45.424007: | XCBC: M[n]
Sep 13 20:56:45.424008: |   00 00 00 00  00 00 00 00
Sep 13 20:56:45.424010: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.424011: |   9d 2f 04 6d  bc 24 17 fa  1c 2b ac 68  da fc 25 79
Sep 13 20:56:45.424014: | XCBC: MAC
Sep 13 20:56:45.424016: |   f0 da fe e8  95 db 30 25  37 61 10 3b  5d 84 52 8f
Sep 13 20:56:45.424018: | xcbc: delref k1-key@0x55b124e5cf30
Sep 13 20:56:45.424020: | PRF chunk interface: delref key-key@0x55b124e39e10
Sep 13 20:56:45.424023: | PRF chunk interface PRF aes_xcbc final length 16
Sep 13 20:56:45.424025: |   f0 da fe e8  95 db 30 25  37 61 10 3b  5d 84 52 8f
Sep 13 20:56:45.424027: | chunk output
Sep 13 20:56:45.424028: |   f0 da fe e8  95 db 30 25  37 61 10 3b  5d 84 52 8f
Sep 13 20:56:45.424030: | verify_chunk_data: RFC 3566 Test Case 7: AES-XCBC-MAC-96 with 1000-byte input: ok
Sep 13 20:56:45.424032: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.424034: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.424035: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.424037: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.424039: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.424048: |     result: newref key symkey-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.424050: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.424052: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.424053: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.424055: |     key_size: 16-bytes
Sep 13 20:56:45.424057: |     base: base-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.424058: |     operation: FLAGS_ONLY
Sep 13 20:56:45.424062: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.424067: |     result: newref key symkey-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.424069: | key symkey: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:45.424072: | PRF symkey interface PRF aes_xcbc init key symkey-key@0x55b124e39e10 (size 16)
Sep 13 20:56:45.424074: | PRF symkey interface: key symkey-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.424076: | XCBC: Key 16=16 just right
Sep 13 20:56:45.424077: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.424079: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.424080: |     target: AES_ECB
Sep 13 20:56:45.424082: |     flags: SIGN
Sep 13 20:56:45.424083: |     key_size: 16-bytes
Sep 13 20:56:45.424085: |     base: base-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.424087: |     operation: FLAGS_ONLY
Sep 13 20:56:45.424088: |     params: 8-bytes@0x7ffee51a5a08
Sep 13 20:56:45.424093: |     result: newref key symkey-key@0x55b124e5cf30 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.424095: | PRF symkey interface PRF aes_xcbc crypt-prf@0x55b124e37d18
Sep 13 20:56:45.424097: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.424099: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.424101: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.424102: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.424104: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.424113: |     result: newref message symkey-key@0x55b124e3b690 (1016-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.424116: |     key-offset: 0, key-size: 1000
Sep 13 20:56:45.424118: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.424119: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.424121: |     key_size: 1000-bytes
Sep 13 20:56:45.424123: |     base: base-key@0x55b124e3b690 (1016-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.424124: |     operation: FLAGS_ONLY
Sep 13 20:56:45.424126: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.424131: |     result: newref message symkey-key@0x55b124e3cfa0 (1000-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.424133: | message symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.424136: | PRF symkey interface PRF aes_xcbc update symkey message-key@0x55b124e3cfa0 (size 1000)
Sep 13 20:56:45.424138: | PRF symkey interface: symkey message-key@0x55b124e3cfa0 (1000-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.424140: | symkey message extracting all 1000 bytes of key@0x55b124e3cfa0
Sep 13 20:56:45.424142: | symkey message: symkey-key@0x55b124e3cfa0 (1000-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.424144: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.424149: | symkey message: newref slot-key@0x55b124e3d030 (1000-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.424151: | sizeof bytes 1008
Sep 13 20:56:45.424251: | wrapper: (SECItemType)601791676: 6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c  6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c...
Sep 13 20:56:45.424259: | symkey message: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.424262: | symkey message extracted len 1008 bytes at 0x55b124e630e8
Sep 13 20:56:45.424264: | unwrapped:
Sep 13 20:56:45.424266: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424267: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424269: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424271: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424272: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424274: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424275: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424277: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424279: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424280: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424282: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424283: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424285: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424287: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424288: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424290: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424291: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424293: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424294: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424296: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424298: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424299: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424301: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424302: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424304: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424306: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424307: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424309: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424310: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424312: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424313: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424315: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424317: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424318: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424320: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424321: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424323: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424325: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424326: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424328: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424329: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424331: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424332: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424334: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424336: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424337: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424339: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424340: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424342: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424345: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424347: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424348: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424350: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424351: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424353: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424355: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424356: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424358: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424359: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424361: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424363: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424364: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424366: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424368: | XCBC: data
Sep 13 20:56:45.424369: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424371: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424373: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424374: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424376: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424377: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424379: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424381: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424382: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424384: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424385: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424387: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424388: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424390: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424392: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424393: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424395: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424396: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424398: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424399: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424401: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424403: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424404: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424406: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424407: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424409: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424411: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424412: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424414: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424415: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424417: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424418: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424420: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424422: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424423: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424425: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424426: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424428: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424431: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424433: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424434: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424436: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424437: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424439: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424441: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424442: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424444: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424445: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424447: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424449: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424450: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424452: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424453: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424455: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424456: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424458: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424460: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424461: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424463: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424464: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424466: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424468: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.424469: |   00 00 00 00  00 00 00 00
Sep 13 20:56:45.424471: | K extracting all 16 bytes of key@0x55b124e5cf30
Sep 13 20:56:45.424473: | K: symkey-key@0x55b124e5cf30 (16-bytes, AES_ECB)
Sep 13 20:56:45.424475: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.424480: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.424482: | sizeof bytes 16
Sep 13 20:56:45.424487: | wrapper: (SECItemType)619062432: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.424491: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.424494: | K extracted len 16 bytes at 0x55b124e3d1c8
Sep 13 20:56:45.424495: | unwrapped:
Sep 13 20:56:45.424497: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.424499: | XCBC: K:
Sep 13 20:56:45.424500: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.424503: | XCBC: K1
Sep 13 20:56:45.424505: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.424507: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.424509: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.424510: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.424512: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.424514: |     params: 16-bytes@0x7ffee51a5950
Sep 13 20:56:45.424523: |     result: newref k1-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.424525: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.424527: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.424528: |     target: AES_ECB
Sep 13 20:56:45.424530: |     flags: SIGN
Sep 13 20:56:45.424532: |     key_size: 16-bytes
Sep 13 20:56:45.424533: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.424535: |     operation: FLAGS_ONLY
Sep 13 20:56:45.424537: |     params: 8-bytes@0x7ffee51a5938
Sep 13 20:56:45.424541: |     result: newref k1-key@0x55b124e3b690 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.424544: | k1: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.425470: | Computing E[63] using K3
Sep 13 20:56:45.425484: | XCBC: K3
Sep 13 20:56:45.425487: |   c1 a7 ab a1  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.425489: | XCBC: E[n-1]
Sep 13 20:56:45.425491: |   5c 88 af cc  1e 1e 83 fc  c4 2c 0c e4  12 12 f5 17
Sep 13 20:56:45.425492: | XCBC: M[n]
Sep 13 20:56:45.425494: |   00 00 00 00  00 00 00 00
Sep 13 20:56:45.425496: | XCBC: M[n]
Sep 13 20:56:45.425497: |   00 00 00 00  00 00 00 00
Sep 13 20:56:45.425499: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.425500: |   9d 2f 04 6d  bc 24 17 fa  1c 2b ac 68  da fc 25 79
Sep 13 20:56:45.425504: | XCBC: MAC
Sep 13 20:56:45.425506: |   f0 da fe e8  95 db 30 25  37 61 10 3b  5d 84 52 8f
Sep 13 20:56:45.425508: | xcbc: delref k1-key@0x55b124e3b690
Sep 13 20:56:45.425512: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.425514: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.425515: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.425517: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.425519: |     params: 16-bytes@0x7ffee51a5a60
Sep 13 20:56:45.425532: |     result: newref xcbc-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.425534: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.425536: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.425538: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.425539: |     key_size: 16-bytes
Sep 13 20:56:45.425541: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425543: |     operation: FLAGS_ONLY
Sep 13 20:56:45.425545: |     params: 8-bytes@0x7ffee51a5a48
Sep 13 20:56:45.425550: |     result: newref xcbc-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.425552: | xcbc: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.425556: | PRF symkey interface: delref key-key@0x55b124e5cf30
Sep 13 20:56:45.425572: | PRF symkey interface PRF aes_xcbc final-key@0x55b124e3b690 (size 16)
Sep 13 20:56:45.425576: | PRF symkey interface: key-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425578: | output: symkey-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425580: | RFC 3566 Test Case 7: AES-XCBC-MAC-96 with 1000-byte input extracting all 16 bytes of key@0x55b124e3b690
Sep 13 20:56:45.425582: | RFC 3566 Test Case 7: AES-XCBC-MAC-96 with 1000-byte input: symkey-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425584: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.425590: | RFC 3566 Test Case 7: AES-XCBC-MAC-96 with 1000-byte input: newref slot-key@0x55b124e3d030 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425592: | sizeof bytes 16
Sep 13 20:56:45.425599: | wrapper: (SECItemType)544236883: 27 49 90 6d  0e 54 e1 12  b0 63 80 2e  e4 0c e7 d5
Sep 13 20:56:45.425603: | RFC 3566 Test Case 7: AES-XCBC-MAC-96 with 1000-byte input: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.425606: | RFC 3566 Test Case 7: AES-XCBC-MAC-96 with 1000-byte input extracted len 16 bytes at 0x55b124e3d1c8
Sep 13 20:56:45.425607: | unwrapped:
Sep 13 20:56:45.425609: |   f0 da fe e8  95 db 30 25  37 61 10 3b  5d 84 52 8f
Sep 13 20:56:45.425611: | verify_chunk_data: RFC 3566 Test Case 7: AES-XCBC-MAC-96 with 1000-byte input: ok
Sep 13 20:56:45.425613: | test_prf_vector: RFC 3566 Test Case 7: AES-XCBC-MAC-96 with 1000-byte input passed
Sep 13 20:56:45.425615: | test_prf_vector: delref symkey-key@0x55b124e3b690
Sep 13 20:56:45.425618: | test_prf_vector: delref message-key@0x55b124e3cfa0
Sep 13 20:56:45.425621: | test_prf_vector: delref key-key@0x55b124e39e10
Sep 13 20:56:45.425623: | test_prf_vector: delref output-key@NULL
Sep 13 20:56:45.425626:   RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 16)
Sep 13 20:56:45.425628: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f"
Sep 13 20:56:45.425630: | decode_to_chunk: output: 
Sep 13 20:56:45.425632: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.425637: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f10111213"
Sep 13 20:56:45.425639: | decode_to_chunk: output: 
Sep 13 20:56:45.425641: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.425643: |   10 11 12 13
Sep 13 20:56:45.425644: | decode_to_chunk: test_prf_vector: input "0x47f51b4564966215b8985c63055ed308"
Sep 13 20:56:45.425646: | decode_to_chunk: output: 
Sep 13 20:56:45.425648: |   47 f5 1b 45  64 96 62 15  b8 98 5c 63  05 5e d3 08
Sep 13 20:56:45.425650: | PRF chunk interface PRF aes_xcbc init key-chunk@0x55b124e60008 (length 16)
Sep 13 20:56:45.425652: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.425654: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.425655: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.425657: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.425659: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.425661: |     params: 16-bytes@0x7ffee51a5a50
Sep 13 20:56:45.425671: |     result: newref key-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.425674: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.425675: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.425677: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.425678: |     key_size: 16-bytes
Sep 13 20:56:45.425680: |     base: base-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425682: |     operation: FLAGS_ONLY
Sep 13 20:56:45.425683: |     params: 8-bytes@0x7ffee51a5a38
Sep 13 20:56:45.425689: |     result: newref key-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.425691: | key: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.425693: | XCBC: Key 16=16 just right
Sep 13 20:56:45.425695: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.425697: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.425698: |     target: AES_ECB
Sep 13 20:56:45.425700: |     flags: SIGN
Sep 13 20:56:45.425701: |     key_size: 16-bytes
Sep 13 20:56:45.425703: |     base: base-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425705: |     operation: FLAGS_ONLY
Sep 13 20:56:45.425707: |     params: 8-bytes@0x7ffee51a59d8
Sep 13 20:56:45.425711: |     result: newref key-key@0x55b124e3cfa0 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.425714: | PRF chunk interface: delref clone-key@0x55b124e39e10
Sep 13 20:56:45.425717: | PRF chunk interface PRF aes_xcbc crypt-prf@0x55b124e3d188
Sep 13 20:56:45.425719: | PRF chunk interface PRF aes_xcbc update message-bytes@0x55b124e37d18 (length 20)
Sep 13 20:56:45.425721: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.425722: |   10 11 12 13
Sep 13 20:56:45.425724: | XCBC: data
Sep 13 20:56:45.425726: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.425727: |   10 11 12 13
Sep 13 20:56:45.425729: | K extracting all 16 bytes of key@0x55b124e3cfa0
Sep 13 20:56:45.425731: | K: symkey-key@0x55b124e3cfa0 (16-bytes, AES_ECB)
Sep 13 20:56:45.425733: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.425738: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.425740: | sizeof bytes 16
Sep 13 20:56:45.425746: | wrapper: (SECItemType)618285232: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.425749: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.425752: | K extracted len 16 bytes at 0x55b124e618c8
Sep 13 20:56:45.425754: | unwrapped:
Sep 13 20:56:45.425756: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.425757: | XCBC: K:
Sep 13 20:56:45.425759: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.425762: | XCBC: K1
Sep 13 20:56:45.425764: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.425766: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.425767: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.425771: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.425773: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.425775: |     params: 16-bytes@0x7ffee51a5890
Sep 13 20:56:45.425785: |     result: newref k1-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.425787: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.425789: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.425790: |     target: AES_ECB
Sep 13 20:56:45.425792: |     flags: SIGN
Sep 13 20:56:45.425793: |     key_size: 16-bytes
Sep 13 20:56:45.425795: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425797: |     operation: FLAGS_ONLY
Sep 13 20:56:45.425798: |     params: 8-bytes@0x7ffee51a5878
Sep 13 20:56:45.425803: |     result: newref k1-key@0x55b124e39e10 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.425806: | k1: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.425811: | Computing E[2] using K3
Sep 13 20:56:45.425813: | XCBC: K3
Sep 13 20:56:45.425814: |   c1 a7 ab a1  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.425816: | XCBC: E[n-1]
Sep 13 20:56:45.425818: |   1d 04 48 fa  cf 4d 9c 6f  55 b9 93 da  09 80 3d b3
Sep 13 20:56:45.425819: | XCBC: M[n]
Sep 13 20:56:45.425821: |   10 11 12 13
Sep 13 20:56:45.425822: | XCBC: M[n]
Sep 13 20:56:45.425824: |   10 11 12 13
Sep 13 20:56:45.425825: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.425827: |   cc b2 f1 48  ed 77 08 69  0d be 33 56  c1 6e ed dd
Sep 13 20:56:45.425830: | XCBC: MAC
Sep 13 20:56:45.425832: |   47 f5 1b 45  64 96 62 15  b8 98 5c 63  05 5e d3 08
Sep 13 20:56:45.425833: | xcbc: delref k1-key@0x55b124e39e10
Sep 13 20:56:45.425836: | PRF chunk interface: delref key-key@0x55b124e3cfa0
Sep 13 20:56:45.425839: | PRF chunk interface PRF aes_xcbc final length 16
Sep 13 20:56:45.425841: |   47 f5 1b 45  64 96 62 15  b8 98 5c 63  05 5e d3 08
Sep 13 20:56:45.425843: | chunk output
Sep 13 20:56:45.425844: |   47 f5 1b 45  64 96 62 15  b8 98 5c 63  05 5e d3 08
Sep 13 20:56:45.425846: | verify_chunk_data: RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 16): ok
Sep 13 20:56:45.425848: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.425850: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.425851: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.425853: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.425855: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.425864: |     result: newref key symkey-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.425867: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.425868: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.425870: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.425871: |     key_size: 16-bytes
Sep 13 20:56:45.425873: |     base: base-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425875: |     operation: FLAGS_ONLY
Sep 13 20:56:45.425876: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.425881: |     result: newref key symkey-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.425883: | key symkey: delref tmp-key@0x55b124e39e10
Sep 13 20:56:45.425886: | PRF symkey interface PRF aes_xcbc init key symkey-key@0x55b124e3cfa0 (size 16)
Sep 13 20:56:45.425888: | PRF symkey interface: key symkey-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425890: | XCBC: Key 16=16 just right
Sep 13 20:56:45.425891: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.425893: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.425894: |     target: AES_ECB
Sep 13 20:56:45.425896: |     flags: SIGN
Sep 13 20:56:45.425898: |     key_size: 16-bytes
Sep 13 20:56:45.425899: |     base: base-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425901: |     operation: FLAGS_ONLY
Sep 13 20:56:45.425903: |     params: 8-bytes@0x7ffee51a5a08
Sep 13 20:56:45.425907: |     result: newref key symkey-key@0x55b124e39e10 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:229)
Sep 13 20:56:45.425912: | PRF symkey interface PRF aes_xcbc crypt-prf@0x55b124e3d188
Sep 13 20:56:45.425914: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.425916: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.425918: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.425919: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.425921: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.425930: |     result: newref message symkey-key@0x55b124e5cf30 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.425933: |     key-offset: 0, key-size: 20
Sep 13 20:56:45.425934: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.425936: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.425937: |     key_size: 20-bytes
Sep 13 20:56:45.425939: |     base: base-key@0x55b124e5cf30 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425941: |     operation: FLAGS_ONLY
Sep 13 20:56:45.425942: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.425947: |     result: newref message symkey-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.425949: | message symkey: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:45.425952: | PRF symkey interface PRF aes_xcbc update symkey message-key@0x55b124e3b690 (size 20)
Sep 13 20:56:45.425954: | PRF symkey interface: symkey message-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425956: | symkey message extracting all 20 bytes of key@0x55b124e3b690
Sep 13 20:56:45.425958: | symkey message: symkey-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425960: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.425964: | symkey message: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.425967: | sizeof bytes 32
Sep 13 20:56:45.425974: | wrapper: (SECItemType)601791676: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58  6b dd de 64  e8 44 14 91  25 28 2a 43  c3 f8 56 28
Sep 13 20:56:45.425978: | symkey message: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.425980: | symkey message extracted len 32 bytes at 0x55b124e3d228
Sep 13 20:56:45.425982: | unwrapped:
Sep 13 20:56:45.425984: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.425986: |   10 11 12 13  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.425988: | XCBC: data
Sep 13 20:56:45.425989: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.425991: |   10 11 12 13
Sep 13 20:56:45.425993: | K extracting all 16 bytes of key@0x55b124e39e10
Sep 13 20:56:45.425994: | K: symkey-key@0x55b124e39e10 (16-bytes, AES_ECB)
Sep 13 20:56:45.425996: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426001: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.426003: | sizeof bytes 16
Sep 13 20:56:45.426008: | wrapper: (SECItemType)619041040: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58
Sep 13 20:56:45.426012: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.426015: | K extracted len 16 bytes at 0x55b124e3d228
Sep 13 20:56:45.426016: | unwrapped:
Sep 13 20:56:45.426018: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.426020: | XCBC: K:
Sep 13 20:56:45.426021: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.426024: | XCBC: K1
Sep 13 20:56:45.426026: |   c3 52 80 57  54 23 7f 31  1a c0 ff f4  e3 e0 3e 78
Sep 13 20:56:45.426028: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426030: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.426031: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426033: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426035: |     params: 16-bytes@0x7ffee51a5950
Sep 13 20:56:45.426044: |     result: newref k1-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.426049: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.426050: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.426052: |     target: AES_ECB
Sep 13 20:56:45.426054: |     flags: SIGN
Sep 13 20:56:45.426055: |     key_size: 16-bytes
Sep 13 20:56:45.426057: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426059: |     operation: FLAGS_ONLY
Sep 13 20:56:45.426060: |     params: 8-bytes@0x7ffee51a5938
Sep 13 20:56:45.426065: |     result: newref k1-key@0x55b124e5cf30 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.426067: | k1: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.426072: | Computing E[2] using K3
Sep 13 20:56:45.426074: | XCBC: K3
Sep 13 20:56:45.426076: |   c1 a7 ab a1  a2 3a 94 06  58 07 a0 8c  c8 ee d0 6e
Sep 13 20:56:45.426078: | XCBC: E[n-1]
Sep 13 20:56:45.426079: |   1d 04 48 fa  cf 4d 9c 6f  55 b9 93 da  09 80 3d b3
Sep 13 20:56:45.426081: | XCBC: M[n]
Sep 13 20:56:45.426082: |   10 11 12 13
Sep 13 20:56:45.426084: | XCBC: M[n]
Sep 13 20:56:45.426086: |   10 11 12 13
Sep 13 20:56:45.426087: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.426089: |   cc b2 f1 48  ed 77 08 69  0d be 33 56  c1 6e ed dd
Sep 13 20:56:45.426091: | XCBC: MAC
Sep 13 20:56:45.426093: |   47 f5 1b 45  64 96 62 15  b8 98 5c 63  05 5e d3 08
Sep 13 20:56:45.426095: | xcbc: delref k1-key@0x55b124e5cf30
Sep 13 20:56:45.426098: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426099: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.426101: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426103: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426105: |     params: 16-bytes@0x7ffee51a5a60
Sep 13 20:56:45.426114: |     result: newref xcbc-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.426116: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.426118: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.426119: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426121: |     key_size: 16-bytes
Sep 13 20:56:45.426122: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426124: |     operation: FLAGS_ONLY
Sep 13 20:56:45.426126: |     params: 8-bytes@0x7ffee51a5a48
Sep 13 20:56:45.426130: |     result: newref xcbc-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.426132: | xcbc: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.426135: | PRF symkey interface: delref key-key@0x55b124e39e10
Sep 13 20:56:45.426138: | PRF symkey interface PRF aes_xcbc final-key@0x55b124e5cf30 (size 16)
Sep 13 20:56:45.426140: | PRF symkey interface: key-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426142: | output: symkey-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426144: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 16) extracting all 16 bytes of key@0x55b124e5cf30
Sep 13 20:56:45.426146: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 16): symkey-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426148: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426153: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 16): newref slot-key@0x55b124e3d030 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426155: | sizeof bytes 16
Sep 13 20:56:45.426160: | wrapper: (SECItemType)544236883: 41 0c 1a ee  99 3f 68 c8  4d b7 9c 76  7b c9 f7 0a
Sep 13 20:56:45.426164: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 16): delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.426167: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 16) extracted len 16 bytes at 0x55b124e3cf38
Sep 13 20:56:45.426168: | unwrapped:
Sep 13 20:56:45.426170: |   47 f5 1b 45  64 96 62 15  b8 98 5c 63  05 5e d3 08
Sep 13 20:56:45.426172: | verify_chunk_data: RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 16): ok
Sep 13 20:56:45.426176: | test_prf_vector: RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 16) passed
Sep 13 20:56:45.426178: | test_prf_vector: delref symkey-key@0x55b124e5cf30
Sep 13 20:56:45.426181: | test_prf_vector: delref message-key@0x55b124e3b690
Sep 13 20:56:45.426183: | test_prf_vector: delref key-key@0x55b124e3cfa0
Sep 13 20:56:45.426186: | test_prf_vector: delref output-key@NULL
Sep 13 20:56:45.426188:   RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 10)
Sep 13 20:56:45.426190: | decode_to_chunk: test_prf_vector: input "0x00010203040506070809"
Sep 13 20:56:45.426192: | decode_to_chunk: output: 
Sep 13 20:56:45.426193: |   00 01 02 03  04 05 06 07  08 09
Sep 13 20:56:45.426195: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f10111213"
Sep 13 20:56:45.426197: | decode_to_chunk: output: 
Sep 13 20:56:45.426199: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.426200: |   10 11 12 13
Sep 13 20:56:45.426202: | decode_to_chunk: test_prf_vector: input "0x0fa087af7d866e7653434e602fdde835"
Sep 13 20:56:45.426204: | decode_to_chunk: output: 
Sep 13 20:56:45.426206: |   0f a0 87 af  7d 86 6e 76  53 43 4e 60  2f dd e8 35
Sep 13 20:56:45.426208: | PRF chunk interface PRF aes_xcbc init key-chunk@0x55b124e5e7d8 (length 10)
Sep 13 20:56:45.426209: |   00 01 02 03  04 05 06 07  08 09
Sep 13 20:56:45.426211: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426213: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.426214: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426216: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426218: |     params: 16-bytes@0x7ffee51a5a50
Sep 13 20:56:45.426227: |     result: newref key-key@0x55b124e3b690 (26-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.426230: |     key-offset: 0, key-size: 10
Sep 13 20:56:45.426231: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.426233: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426234: |     key_size: 10-bytes
Sep 13 20:56:45.426236: |     base: base-key@0x55b124e3b690 (26-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426238: |     operation: FLAGS_ONLY
Sep 13 20:56:45.426239: |     params: 8-bytes@0x7ffee51a5a38
Sep 13 20:56:45.426244: |     result: newref key-key@0x55b124e3cfa0 (10-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.426246: | key: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.426249: | XCBC: Key 10<16 too small, padding with zeros
Sep 13 20:56:45.426251: | xcbc: addref local_draft_key-key@0x55b124e3cfa0
Sep 13 20:56:45.426253: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:45.426254: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426256: |     base: base-key@0x55b124e3cfa0 (10-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426258: |     params: 16-bytes@0x7ffee51a59b0
Sep 13 20:56:45.426263: |     result: newref local_draft_key+=0-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.426265: | append_symkey_bytes: delref lhs-key@0x55b124e3cfa0
Sep 13 20:56:45.426267: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.426269: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.426270: |     target: AES_ECB
Sep 13 20:56:45.426272: |     flags: SIGN
Sep 13 20:56:45.426273: |     key_size: 16-bytes
Sep 13 20:56:45.426275: |     base: base-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426277: |     operation: FLAGS_ONLY
Sep 13 20:56:45.426278: |     params: 8-bytes@0x7ffee51a59d8
Sep 13 20:56:45.426283: |     result: newref PRF chunk interface-key@0x55b124e5cf30 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:204)
Sep 13 20:56:45.426285: | PRF chunk interface: delref local_draft_key-key@0x55b124e3b690
Sep 13 20:56:45.426288: | PRF chunk interface: delref clone-key@0x55b124e3cfa0
Sep 13 20:56:45.426291: | PRF chunk interface PRF aes_xcbc crypt-prf@0x55b124e3d1e8
Sep 13 20:56:45.426293: | PRF chunk interface PRF aes_xcbc update message-bytes@0x55b124e37d18 (length 20)
Sep 13 20:56:45.426296: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.426298: |   10 11 12 13
Sep 13 20:56:45.426300: | XCBC: data
Sep 13 20:56:45.426302: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.426303: |   10 11 12 13
Sep 13 20:56:45.426305: | K extracting all 16 bytes of key@0x55b124e5cf30
Sep 13 20:56:45.426307: | K: symkey-key@0x55b124e5cf30 (16-bytes, AES_ECB)
Sep 13 20:56:45.426309: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426314: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.426316: | sizeof bytes 16
Sep 13 20:56:45.426321: | wrapper: (SECItemType)618285232: 36 1c 96 e1  d1 ab 94 6e  b0 5b 20 07  85 0a e6 da
Sep 13 20:56:45.426324: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.426327: | K extracted len 16 bytes at 0x55b124e3cf78
Sep 13 20:56:45.426329: | unwrapped:
Sep 13 20:56:45.426330: |   00 01 02 03  04 05 06 07  08 09 00 00  00 00 00 00
Sep 13 20:56:45.426332: | XCBC: K:
Sep 13 20:56:45.426334: |   00 01 02 03  04 05 06 07  08 09 00 00  00 00 00 00
Sep 13 20:56:45.426337: | XCBC: K1
Sep 13 20:56:45.426339: |   50 ca b2 4d  03 34 45 5e  40 7b 25 0f  dd 7c f8 d5
Sep 13 20:56:45.426340: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426342: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.426344: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426345: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426347: |     params: 16-bytes@0x7ffee51a5890
Sep 13 20:56:45.426356: |     result: newref k1-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.426359: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.426360: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.426362: |     target: AES_ECB
Sep 13 20:56:45.426363: |     flags: SIGN
Sep 13 20:56:45.426365: |     key_size: 16-bytes
Sep 13 20:56:45.426367: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426368: |     operation: FLAGS_ONLY
Sep 13 20:56:45.426370: |     params: 8-bytes@0x7ffee51a5878
Sep 13 20:56:45.426375: |     result: newref k1-key@0x55b124e3cfa0 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.426377: | k1: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.426382: | Computing E[2] using K3
Sep 13 20:56:45.426384: | XCBC: K3
Sep 13 20:56:45.426385: |   8e f7 48 db  56 f1 f7 26  24 72 f2 c5  63 b0 3f 88
Sep 13 20:56:45.426387: | XCBC: E[n-1]
Sep 13 20:56:45.426389: |   fe 1f 63 e9  65 1a 4b bb  3c cc cd 0d  cc 83 e4 30
Sep 13 20:56:45.426390: | XCBC: M[n]
Sep 13 20:56:45.426392: |   10 11 12 13
Sep 13 20:56:45.426393: | XCBC: M[n]
Sep 13 20:56:45.426395: |   10 11 12 13
Sep 13 20:56:45.426396: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.426398: |   60 f9 39 21  b3 eb bc 9d  18 be 3f c8  af 33 db b8
Sep 13 20:56:45.426401: | XCBC: MAC
Sep 13 20:56:45.426403: |   0f a0 87 af  7d 86 6e 76  53 43 4e 60  2f dd e8 35
Sep 13 20:56:45.426404: | xcbc: delref k1-key@0x55b124e3cfa0
Sep 13 20:56:45.426407: | PRF chunk interface: delref key-key@0x55b124e5cf30
Sep 13 20:56:45.426410: | PRF chunk interface PRF aes_xcbc final length 16
Sep 13 20:56:45.426411: |   0f a0 87 af  7d 86 6e 76  53 43 4e 60  2f dd e8 35
Sep 13 20:56:45.426413: | chunk output
Sep 13 20:56:45.426415: |   0f a0 87 af  7d 86 6e 76  53 43 4e 60  2f dd e8 35
Sep 13 20:56:45.426417: | verify_chunk_data: RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 10): ok
Sep 13 20:56:45.426419: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426420: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.426422: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426423: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426425: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.426434: |     result: newref key symkey-key@0x55b124e3cfa0 (26-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.426439: |     key-offset: 0, key-size: 10
Sep 13 20:56:45.426440: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.426442: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426443: |     key_size: 10-bytes
Sep 13 20:56:45.426445: |     base: base-key@0x55b124e3cfa0 (26-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426447: |     operation: FLAGS_ONLY
Sep 13 20:56:45.426449: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.426453: |     result: newref key symkey-key@0x55b124e5cf30 (10-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.426455: | key symkey: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.426458: | PRF symkey interface PRF aes_xcbc init key symkey-key@0x55b124e5cf30 (size 10)
Sep 13 20:56:45.426460: | PRF symkey interface: key symkey-key@0x55b124e5cf30 (10-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426462: | XCBC: Key 10<16 too small, padding with zeros
Sep 13 20:56:45.426464: | xcbc: addref local_draft_key-key@0x55b124e5cf30
Sep 13 20:56:45.426466: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:45.426467: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426469: |     base: base-key@0x55b124e5cf30 (10-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426471: |     params: 16-bytes@0x7ffee51a59e0
Sep 13 20:56:45.426476: |     result: newref local_draft_key+=0-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.426478: | append_symkey_bytes: delref lhs-key@0x55b124e5cf30
Sep 13 20:56:45.426480: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.426482: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.426483: |     target: AES_ECB
Sep 13 20:56:45.426485: |     flags: SIGN
Sep 13 20:56:45.426486: |     key_size: 16-bytes
Sep 13 20:56:45.426488: |     base: base-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426490: |     operation: FLAGS_ONLY
Sep 13 20:56:45.426491: |     params: 8-bytes@0x7ffee51a5a08
Sep 13 20:56:45.426496: |     result: newref PRF symkey interface-key@0x55b124e3b690 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:204)
Sep 13 20:56:45.426498: | PRF symkey interface: delref local_draft_key-key@0x55b124e3cfa0
Sep 13 20:56:45.426501: | PRF symkey interface PRF aes_xcbc crypt-prf@0x55b124e3d1e8
Sep 13 20:56:45.426503: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426505: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.426506: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426508: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426510: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.426519: |     result: newref message symkey-key@0x55b124e39e10 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.426521: |     key-offset: 0, key-size: 20
Sep 13 20:56:45.426523: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.426524: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426526: |     key_size: 20-bytes
Sep 13 20:56:45.426528: |     base: base-key@0x55b124e39e10 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426529: |     operation: FLAGS_ONLY
Sep 13 20:56:45.426531: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.426536: |     result: newref message symkey-key@0x55b124e3cfa0 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.426538: | message symkey: delref tmp-key@0x55b124e39e10
Sep 13 20:56:45.426540: | PRF symkey interface PRF aes_xcbc update symkey message-key@0x55b124e3cfa0 (size 20)
Sep 13 20:56:45.426542: | PRF symkey interface: symkey message-key@0x55b124e3cfa0 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426544: | symkey message extracting all 20 bytes of key@0x55b124e3cfa0
Sep 13 20:56:45.426546: | symkey message: symkey-key@0x55b124e3cfa0 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426548: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426553: | symkey message: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426570: | sizeof bytes 32
Sep 13 20:56:45.426579: | wrapper: (SECItemType)601791676: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58  6b dd de 64  e8 44 14 91  25 28 2a 43  c3 f8 56 28
Sep 13 20:56:45.426583: | symkey message: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.426586: | symkey message extracted len 32 bytes at 0x55b124e3d238
Sep 13 20:56:45.426588: | unwrapped:
Sep 13 20:56:45.426589: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.426591: |   10 11 12 13  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.426593: | XCBC: data
Sep 13 20:56:45.426595: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.426596: |   10 11 12 13
Sep 13 20:56:45.426598: | K extracting all 16 bytes of key@0x55b124e3b690
Sep 13 20:56:45.426600: | K: symkey-key@0x55b124e3b690 (16-bytes, AES_ECB)
Sep 13 20:56:45.426602: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426607: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.426609: | sizeof bytes 16
Sep 13 20:56:45.426614: | wrapper: (SECItemType)618897392: 36 1c 96 e1  d1 ab 94 6e  b0 5b 20 07  85 0a e6 da
Sep 13 20:56:45.426617: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.426620: | K extracted len 16 bytes at 0x55b124e3d238
Sep 13 20:56:45.426622: | unwrapped:
Sep 13 20:56:45.426623: |   00 01 02 03  04 05 06 07  08 09 00 00  00 00 00 00
Sep 13 20:56:45.426625: | XCBC: K:
Sep 13 20:56:45.426626: |   00 01 02 03  04 05 06 07  08 09 00 00  00 00 00 00
Sep 13 20:56:45.426630: | XCBC: K1
Sep 13 20:56:45.426631: |   50 ca b2 4d  03 34 45 5e  40 7b 25 0f  dd 7c f8 d5
Sep 13 20:56:45.426633: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426635: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.426637: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426638: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426640: |     params: 16-bytes@0x7ffee51a5950
Sep 13 20:56:45.426650: |     result: newref k1-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.426652: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.426654: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.426656: |     target: AES_ECB
Sep 13 20:56:45.426657: |     flags: SIGN
Sep 13 20:56:45.426659: |     key_size: 16-bytes
Sep 13 20:56:45.426660: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426662: |     operation: FLAGS_ONLY
Sep 13 20:56:45.426664: |     params: 8-bytes@0x7ffee51a5938
Sep 13 20:56:45.426668: |     result: newref k1-key@0x55b124e39e10 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.426671: | k1: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.426675: | Computing E[2] using K3
Sep 13 20:56:45.426677: | XCBC: K3
Sep 13 20:56:45.426679: |   8e f7 48 db  56 f1 f7 26  24 72 f2 c5  63 b0 3f 88
Sep 13 20:56:45.426681: | XCBC: E[n-1]
Sep 13 20:56:45.426682: |   fe 1f 63 e9  65 1a 4b bb  3c cc cd 0d  cc 83 e4 30
Sep 13 20:56:45.426684: | XCBC: M[n]
Sep 13 20:56:45.426685: |   10 11 12 13
Sep 13 20:56:45.426687: | XCBC: M[n]
Sep 13 20:56:45.426688: |   10 11 12 13
Sep 13 20:56:45.426690: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.426691: |   60 f9 39 21  b3 eb bc 9d  18 be 3f c8  af 33 db b8
Sep 13 20:56:45.426694: | XCBC: MAC
Sep 13 20:56:45.426696: |   0f a0 87 af  7d 86 6e 76  53 43 4e 60  2f dd e8 35
Sep 13 20:56:45.426698: | xcbc: delref k1-key@0x55b124e39e10
Sep 13 20:56:45.426700: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426702: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.426704: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426706: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426707: |     params: 16-bytes@0x7ffee51a5a60
Sep 13 20:56:45.426716: |     result: newref xcbc-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.426719: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.426720: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.426724: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426726: |     key_size: 16-bytes
Sep 13 20:56:45.426727: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426729: |     operation: FLAGS_ONLY
Sep 13 20:56:45.426731: |     params: 8-bytes@0x7ffee51a5a48
Sep 13 20:56:45.426736: |     result: newref xcbc-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.426738: | xcbc: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.426740: | PRF symkey interface: delref key-key@0x55b124e3b690
Sep 13 20:56:45.426743: | PRF symkey interface PRF aes_xcbc final-key@0x55b124e39e10 (size 16)
Sep 13 20:56:45.426745: | PRF symkey interface: key-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426747: | output: symkey-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426749: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 10) extracting all 16 bytes of key@0x55b124e39e10
Sep 13 20:56:45.426751: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 10): symkey-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426753: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426758: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 10): newref slot-key@0x55b124e3d030 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426760: | sizeof bytes 16
Sep 13 20:56:45.426765: | wrapper: (SECItemType)544236883: dd 6c 9e e8  a0 e9 33 6d  95 0d ed 27  23 b9 7e f9
Sep 13 20:56:45.426769: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 10): delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.426772: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 10) extracted len 16 bytes at 0x55b124e3cf38
Sep 13 20:56:45.426774: | unwrapped:
Sep 13 20:56:45.426775: |   0f a0 87 af  7d 86 6e 76  53 43 4e 60  2f dd e8 35
Sep 13 20:56:45.426777: | verify_chunk_data: RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 10): ok
Sep 13 20:56:45.426779: | test_prf_vector: RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 10) passed
Sep 13 20:56:45.426781: | test_prf_vector: delref symkey-key@0x55b124e39e10
Sep 13 20:56:45.426783: | test_prf_vector: delref message-key@0x55b124e3cfa0
Sep 13 20:56:45.426786: | test_prf_vector: delref key-key@0x55b124e5cf30
Sep 13 20:56:45.426788: | test_prf_vector: delref output-key@NULL
Sep 13 20:56:45.426791:   RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 18)
Sep 13 20:56:45.426793: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0fedcb"
Sep 13 20:56:45.426795: | decode_to_chunk: output: 
Sep 13 20:56:45.426796: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.426798: |   ed cb
Sep 13 20:56:45.426800: | decode_to_chunk: test_prf_vector: input "0x000102030405060708090a0b0c0d0e0f10111213"
Sep 13 20:56:45.426802: | decode_to_chunk: output: 
Sep 13 20:56:45.426803: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.426805: |   10 11 12 13
Sep 13 20:56:45.426807: | decode_to_chunk: test_prf_vector: input "0x8cd3c93ae598a9803006ffb67c40e9e4"
Sep 13 20:56:45.426809: | decode_to_chunk: output: 
Sep 13 20:56:45.426810: |   8c d3 c9 3a  e5 98 a9 80  30 06 ff b6  7c 40 e9 e4
Sep 13 20:56:45.426812: | PRF chunk interface PRF aes_xcbc init key-chunk@0x55b124e37d18 (length 18)
Sep 13 20:56:45.426814: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.426815: |   ed cb
Sep 13 20:56:45.426817: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426819: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.426820: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426822: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426824: |     params: 16-bytes@0x7ffee51a5a50
Sep 13 20:56:45.426833: |     result: newref key-key@0x55b124e3cfa0 (34-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.426837: |     key-offset: 0, key-size: 18
Sep 13 20:56:45.426839: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.426841: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426842: |     key_size: 18-bytes
Sep 13 20:56:45.426844: |     base: base-key@0x55b124e3cfa0 (34-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426846: |     operation: FLAGS_ONLY
Sep 13 20:56:45.426847: |     params: 8-bytes@0x7ffee51a5a38
Sep 13 20:56:45.426852: |     result: newref key-key@0x55b124e5cf30 (18-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.426854: | key: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.426857: | XCBC: Key 18>16 too big, rehashing to size
Sep 13 20:56:45.426859: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426861: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.426862: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426864: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426866: |     params: 16-bytes@0x7ffee51a5930
Sep 13 20:56:45.426874: |     result: newref zero_key-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.426877: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.426879: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.426880: |     target: AES_ECB
Sep 13 20:56:45.426882: |     flags: SIGN
Sep 13 20:56:45.426883: |     key_size: 16-bytes
Sep 13 20:56:45.426885: |     base: base-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426887: |     operation: FLAGS_ONLY
Sep 13 20:56:45.426888: |     params: 8-bytes@0x7ffee51a5918
Sep 13 20:56:45.426893: |     result: newref zero_key-key@0x55b124e3cfa0 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:215)
Sep 13 20:56:45.426895: | zero_key: delref tmp-key@0x55b124e39e10
Sep 13 20:56:45.426897: | draft_chunk extracting all 18 bytes of key@0x55b124e5cf30
Sep 13 20:56:45.426900: | draft_chunk: symkey-key@0x55b124e5cf30 (18-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426902: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426906: | draft_chunk: newref slot-key@0x55b124e3d030 (18-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426908: | sizeof bytes 32
Sep 13 20:56:45.426915: | wrapper: (SECItemType)1081697643: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58  44 4a 9a 8c  da 1f 86 68  12 b2 46 83  d8 c4 f4 91
Sep 13 20:56:45.426919: | draft_chunk: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.426921: | draft_chunk extracted len 32 bytes at 0x55b124e3d1d8
Sep 13 20:56:45.426923: | unwrapped:
Sep 13 20:56:45.426925: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.426926: |   ed cb 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.426928: | XCBC: data
Sep 13 20:56:45.426930: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.426931: |   ed cb
Sep 13 20:56:45.426933: | K extracting all 16 bytes of key@0x55b124e3cfa0
Sep 13 20:56:45.426935: | K: symkey-key@0x55b124e3cfa0 (16-bytes, AES_ECB)
Sep 13 20:56:45.426937: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426942: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.426944: | sizeof bytes 16
Sep 13 20:56:45.426948: | wrapper: siBuffer: 6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c
Sep 13 20:56:45.426952: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.426954: | K extracted len 16 bytes at 0x55b124e3cf88
Sep 13 20:56:45.426956: | unwrapped:
Sep 13 20:56:45.426958: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.426959: | XCBC: K:
Sep 13 20:56:45.426961: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.426964: | XCBC: K1
Sep 13 20:56:45.426966: |   e1 4d 5d 0e  e2 77 15 df  08 b4 15 2b  a2 3d a8 e0
Sep 13 20:56:45.426968: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426969: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.426971: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.426976: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.426977: |     params: 16-bytes@0x7ffee51a5870
Sep 13 20:56:45.426987: |     result: newref k1-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.426989: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.426991: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.426992: |     target: AES_ECB
Sep 13 20:56:45.426994: |     flags: SIGN
Sep 13 20:56:45.426996: |     key_size: 16-bytes
Sep 13 20:56:45.426997: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.426999: |     operation: FLAGS_ONLY
Sep 13 20:56:45.427000: |     params: 8-bytes@0x7ffee51a5858
Sep 13 20:56:45.427005: |     result: newref k1-key@0x55b124e39e10 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.427007: | k1: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.427012: | Computing E[2] using K3
Sep 13 20:56:45.427014: | XCBC: K3
Sep 13 20:56:45.427016: |   8d 34 ef cb  3b d5 45 ca  06 2a ec df  ef 7c 0b fa
Sep 13 20:56:45.427017: | XCBC: E[n-1]
Sep 13 20:56:45.427019: |   0b 72 b2 ae  0a 37 79 81  75 6a d5 9c  79 c0 e6 96
Sep 13 20:56:45.427021: | XCBC: M[n]
Sep 13 20:56:45.427022: |   ed cb
Sep 13 20:56:45.427024: | XCBC: M[n]
Sep 13 20:56:45.427025: |   ed cb
Sep 13 20:56:45.427027: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.427028: |   6b 8d dd 65  31 e2 3c 4b  73 40 39 43  96 bc ed 6c
Sep 13 20:56:45.427031: | XCBC: MAC
Sep 13 20:56:45.427033: |   5d 93 a5 3b  80 a3 e4 06  90 d2 4c ea  e1 44 9c 0e
Sep 13 20:56:45.427035: | xcbc: delref k1-key@0x55b124e39e10
Sep 13 20:56:45.427037: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427039: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.427041: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427043: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427044: |     params: 16-bytes@0x7ffee51a5930
Sep 13 20:56:45.427053: |     result: newref key-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.427056: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.427057: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.427059: |     target: AES_ECB
Sep 13 20:56:45.427060: |     flags: SIGN
Sep 13 20:56:45.427062: |     key_size: 16-bytes
Sep 13 20:56:45.427064: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427065: |     operation: FLAGS_ONLY
Sep 13 20:56:45.427067: |     params: 8-bytes@0x7ffee51a5918
Sep 13 20:56:45.427072: |     result: newref key-key@0x55b124e39e10 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:218)
Sep 13 20:56:45.427074: | key: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.427076: | PRF chunk interface: delref zero_key-key@0x55b124e3cfa0
Sep 13 20:56:45.427079: | PRF chunk interface: delref clone-key@0x55b124e5cf30
Sep 13 20:56:45.427082: | PRF chunk interface PRF aes_xcbc crypt-prf@0x55b124e3d1d8
Sep 13 20:56:45.427084: | PRF chunk interface PRF aes_xcbc update message-bytes@0x55b124e3cf38 (length 20)
Sep 13 20:56:45.427086: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.427088: |   10 11 12 13
Sep 13 20:56:45.427089: | XCBC: data
Sep 13 20:56:45.427091: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.427093: |   10 11 12 13
Sep 13 20:56:45.427094: | K extracting all 16 bytes of key@0x55b124e39e10
Sep 13 20:56:45.427096: | K: symkey-key@0x55b124e39e10 (16-bytes, AES_ECB)
Sep 13 20:56:45.427098: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427103: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.427105: | sizeof bytes 16
Sep 13 20:56:45.427110: | wrapper: (SECItemType)618285232: 0a 5c cf f7  9e 6b 9e 55  fc e4 cb f1  35 8a 94 d9
Sep 13 20:56:45.427114: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.427116: | K extracted len 16 bytes at 0x55b124e5e7d8
Sep 13 20:56:45.427118: | unwrapped:
Sep 13 20:56:45.427125: |   5d 93 a5 3b  80 a3 e4 06  90 d2 4c ea  e1 44 9c 0e
Sep 13 20:56:45.427127: | XCBC: K:
Sep 13 20:56:45.427128: |   5d 93 a5 3b  80 a3 e4 06  90 d2 4c ea  e1 44 9c 0e
Sep 13 20:56:45.427132: | XCBC: K1
Sep 13 20:56:45.427134: |   27 f3 88 2f  b7 b9 4b a4  16 36 09 d5  d2 39 c5 7f
Sep 13 20:56:45.427135: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427137: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.427139: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427140: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427142: |     params: 16-bytes@0x7ffee51a5890
Sep 13 20:56:45.427151: |     result: newref k1-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.427154: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.427155: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.427157: |     target: AES_ECB
Sep 13 20:56:45.427158: |     flags: SIGN
Sep 13 20:56:45.427160: |     key_size: 16-bytes
Sep 13 20:56:45.427162: |     base: base-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427163: |     operation: FLAGS_ONLY
Sep 13 20:56:45.427165: |     params: 8-bytes@0x7ffee51a5878
Sep 13 20:56:45.427170: |     result: newref k1-key@0x55b124e5cf30 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.427172: | k1: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.427177: | Computing E[2] using K3
Sep 13 20:56:45.427179: | XCBC: K3
Sep 13 20:56:45.427180: |   50 9e d8 ae  74 5a 75 4c  93 4d 6c 91  98 fe e2 1b
Sep 13 20:56:45.427182: | XCBC: E[n-1]
Sep 13 20:56:45.427183: |   ec 26 f6 dd  e8 bb 1b d1  ec 76 c4 91  78 37 ca 4b
Sep 13 20:56:45.427185: | XCBC: M[n]
Sep 13 20:56:45.427187: |   10 11 12 13
Sep 13 20:56:45.427188: | XCBC: M[n]
Sep 13 20:56:45.427190: |   10 11 12 13
Sep 13 20:56:45.427191: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.427193: |   ac a9 3c 60  1c e1 6e 9d  7f 3b a8 00  e0 c9 28 50
Sep 13 20:56:45.427195: | XCBC: MAC
Sep 13 20:56:45.427197: |   8c d3 c9 3a  e5 98 a9 80  30 06 ff b6  7c 40 e9 e4
Sep 13 20:56:45.427199: | xcbc: delref k1-key@0x55b124e5cf30
Sep 13 20:56:45.427201: | PRF chunk interface: delref key-key@0x55b124e39e10
Sep 13 20:56:45.427204: | PRF chunk interface PRF aes_xcbc final length 16
Sep 13 20:56:45.427206: |   8c d3 c9 3a  e5 98 a9 80  30 06 ff b6  7c 40 e9 e4
Sep 13 20:56:45.427208: | chunk output
Sep 13 20:56:45.427209: |   8c d3 c9 3a  e5 98 a9 80  30 06 ff b6  7c 40 e9 e4
Sep 13 20:56:45.427211: | verify_chunk_data: RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 18): ok
Sep 13 20:56:45.427213: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427215: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.427216: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427218: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427220: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.427229: |     result: newref key symkey-key@0x55b124e5cf30 (34-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.427231: |     key-offset: 0, key-size: 18
Sep 13 20:56:45.427233: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.427235: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427236: |     key_size: 18-bytes
Sep 13 20:56:45.427238: |     base: base-key@0x55b124e5cf30 (34-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427240: |     operation: FLAGS_ONLY
Sep 13 20:56:45.427241: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.427246: |     result: newref key symkey-key@0x55b124e39e10 (18-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.427248: | key symkey: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:45.427251: | PRF symkey interface PRF aes_xcbc init key symkey-key@0x55b124e39e10 (size 18)
Sep 13 20:56:45.427253: | PRF symkey interface: key symkey-key@0x55b124e39e10 (18-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427255: | XCBC: Key 18>16 too big, rehashing to size
Sep 13 20:56:45.427257: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427260: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.427262: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427264: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427265: |     params: 16-bytes@0x7ffee51a5960
Sep 13 20:56:45.427274: |     result: newref zero_key-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.427277: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.427279: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.427280: |     target: AES_ECB
Sep 13 20:56:45.427282: |     flags: SIGN
Sep 13 20:56:45.427283: |     key_size: 16-bytes
Sep 13 20:56:45.427285: |     base: base-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427286: |     operation: FLAGS_ONLY
Sep 13 20:56:45.427288: |     params: 8-bytes@0x7ffee51a5948
Sep 13 20:56:45.427293: |     result: newref zero_key-key@0x55b124e5cf30 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:215)
Sep 13 20:56:45.427295: | zero_key: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.427297: | draft_chunk extracting all 18 bytes of key@0x55b124e39e10
Sep 13 20:56:45.427299: | draft_chunk: symkey-key@0x55b124e39e10 (18-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427301: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427306: | draft_chunk: newref slot-key@0x55b124e3d030 (18-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427308: | sizeof bytes 32
Sep 13 20:56:45.427315: | wrapper: siAsciiNameString: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58  44 4a 9a 8c  da 1f 86 68  12 b2 46 83  d8 c4 f4 91
Sep 13 20:56:45.427318: | draft_chunk: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.427321: | draft_chunk extracted len 32 bytes at 0x55b124e3d1d8
Sep 13 20:56:45.427323: | unwrapped:
Sep 13 20:56:45.427325: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.427326: |   ed cb 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.427328: | XCBC: data
Sep 13 20:56:45.427329: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.427331: |   ed cb
Sep 13 20:56:45.427333: | K extracting all 16 bytes of key@0x55b124e5cf30
Sep 13 20:56:45.427335: | K: symkey-key@0x55b124e5cf30 (16-bytes, AES_ECB)
Sep 13 20:56:45.427336: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427341: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.427343: | sizeof bytes 16
Sep 13 20:56:45.427348: | wrapper: siBuffer: 6f 49 bd 8a  01 10 a1 ff  bc 2f 9c 29  39 2e b4 5c
Sep 13 20:56:45.427351: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.427354: | K extracted len 16 bytes at 0x55b124e3d188
Sep 13 20:56:45.427356: | unwrapped:
Sep 13 20:56:45.427357: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.427359: | XCBC: K:
Sep 13 20:56:45.427361: |   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.427364: | XCBC: K1
Sep 13 20:56:45.427366: |   e1 4d 5d 0e  e2 77 15 df  08 b4 15 2b  a2 3d a8 e0
Sep 13 20:56:45.427368: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427369: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.427371: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427373: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427374: |     params: 16-bytes@0x7ffee51a58a0
Sep 13 20:56:45.427383: |     result: newref k1-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.427386: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.427387: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.427389: |     target: AES_ECB
Sep 13 20:56:45.427390: |     flags: SIGN
Sep 13 20:56:45.427392: |     key_size: 16-bytes
Sep 13 20:56:45.427394: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427395: |     operation: FLAGS_ONLY
Sep 13 20:56:45.427397: |     params: 8-bytes@0x7ffee51a5888
Sep 13 20:56:45.427402: |     result: newref k1-key@0x55b124e3cfa0 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.427406: | k1: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.427411: | Computing E[2] using K3
Sep 13 20:56:45.427413: | XCBC: K3
Sep 13 20:56:45.427414: |   8d 34 ef cb  3b d5 45 ca  06 2a ec df  ef 7c 0b fa
Sep 13 20:56:45.427416: | XCBC: E[n-1]
Sep 13 20:56:45.427417: |   0b 72 b2 ae  0a 37 79 81  75 6a d5 9c  79 c0 e6 96
Sep 13 20:56:45.427419: | XCBC: M[n]
Sep 13 20:56:45.427421: |   ed cb
Sep 13 20:56:45.427422: | XCBC: M[n]
Sep 13 20:56:45.427424: |   ed cb
Sep 13 20:56:45.427425: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.427427: |   6b 8d dd 65  31 e2 3c 4b  73 40 39 43  96 bc ed 6c
Sep 13 20:56:45.427429: | XCBC: MAC
Sep 13 20:56:45.427431: |   5d 93 a5 3b  80 a3 e4 06  90 d2 4c ea  e1 44 9c 0e
Sep 13 20:56:45.427433: | xcbc: delref k1-key@0x55b124e3cfa0
Sep 13 20:56:45.427436: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427437: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.427439: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427441: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427442: |     params: 16-bytes@0x7ffee51a5960
Sep 13 20:56:45.427451: |     result: newref key symkey-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.427454: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.427455: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.427457: |     target: AES_ECB
Sep 13 20:56:45.427459: |     flags: SIGN
Sep 13 20:56:45.427460: |     key_size: 16-bytes
Sep 13 20:56:45.427462: |     base: base-key@0x55b124e3b690 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427463: |     operation: FLAGS_ONLY
Sep 13 20:56:45.427465: |     params: 8-bytes@0x7ffee51a5948
Sep 13 20:56:45.427470: |     result: newref key symkey-key@0x55b124e3cfa0 (16-bytes, AES_ECB)(in nss_xcbc_init_symkey() at ike_alg_prf_mac_xcbc_ops.c:218)
Sep 13 20:56:45.427472: | key symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.427474: | PRF symkey interface: delref zero_key-key@0x55b124e5cf30
Sep 13 20:56:45.427477: | PRF symkey interface PRF aes_xcbc crypt-prf@0x55b124e3d1d8
Sep 13 20:56:45.427480: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427481: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.427483: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427485: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427486: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.427495: |     result: newref message symkey-key@0x55b124e3b690 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.427498: |     key-offset: 0, key-size: 20
Sep 13 20:56:45.427499: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.427501: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427502: |     key_size: 20-bytes
Sep 13 20:56:45.427504: |     base: base-key@0x55b124e3b690 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427506: |     operation: FLAGS_ONLY
Sep 13 20:56:45.427507: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.427512: |     result: newref message symkey-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.427514: | message symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.427517: | PRF symkey interface PRF aes_xcbc update symkey message-key@0x55b124e5cf30 (size 20)
Sep 13 20:56:45.427519: | PRF symkey interface: symkey message-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427521: | symkey message extracting all 20 bytes of key@0x55b124e5cf30
Sep 13 20:56:45.427523: | symkey message: symkey-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427525: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427529: | symkey message: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427531: | sizeof bytes 32
Sep 13 20:56:45.427538: | wrapper: (SECItemType)601791676: 5d f0 de 04  79 20 d0 11  b1 5d 06 45  e1 e7 d5 58  6b dd de 64  e8 44 14 91  25 28 2a 43  c3 f8 56 28
Sep 13 20:56:45.427544: | symkey message: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.427547: | symkey message extracted len 32 bytes at 0x55b124e3d228
Sep 13 20:56:45.427549: | unwrapped:
Sep 13 20:56:45.427550: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.427563: |   10 11 12 13  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:45.427567: | XCBC: data
Sep 13 20:56:45.427568: |   00 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
Sep 13 20:56:45.427570: |   10 11 12 13
Sep 13 20:56:45.427572: | K extracting all 16 bytes of key@0x55b124e3cfa0
Sep 13 20:56:45.427574: | K: symkey-key@0x55b124e3cfa0 (16-bytes, AES_ECB)
Sep 13 20:56:45.427576: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427582: | K: newref slot-key@0x55b124e3d030 (16-bytes, AES_ECB)
Sep 13 20:56:45.427584: | sizeof bytes 16
Sep 13 20:56:45.427589: | wrapper: (SECItemType)618903664: 0a 5c cf f7  9e 6b 9e 55  fc e4 cb f1  35 8a 94 d9
Sep 13 20:56:45.427593: | K: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.427596: | K extracted len 16 bytes at 0x55b124e5e7d8
Sep 13 20:56:45.427597: | unwrapped:
Sep 13 20:56:45.427599: |   5d 93 a5 3b  80 a3 e4 06  90 d2 4c ea  e1 44 9c 0e
Sep 13 20:56:45.427601: | XCBC: K:
Sep 13 20:56:45.427602: |   5d 93 a5 3b  80 a3 e4 06  90 d2 4c ea  e1 44 9c 0e
Sep 13 20:56:45.427605: | XCBC: K1
Sep 13 20:56:45.427607: |   27 f3 88 2f  b7 b9 4b a4  16 36 09 d5  d2 39 c5 7f
Sep 13 20:56:45.427609: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427611: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.427612: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427614: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427616: |     params: 16-bytes@0x7ffee51a5950
Sep 13 20:56:45.427625: |     result: newref k1-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.427628: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.427629: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.427631: |     target: AES_ECB
Sep 13 20:56:45.427632: |     flags: SIGN
Sep 13 20:56:45.427634: |     key_size: 16-bytes
Sep 13 20:56:45.427636: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427637: |     operation: FLAGS_ONLY
Sep 13 20:56:45.427639: |     params: 8-bytes@0x7ffee51a5938
Sep 13 20:56:45.427644: |     result: newref k1-key@0x55b124e3b690 (16-bytes, AES_ECB)(in xcbc_mac() at ike_alg_prf_mac_xcbc_ops.c:82)
Sep 13 20:56:45.427646: | k1: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.427651: | Computing E[2] using K3
Sep 13 20:56:45.427653: | XCBC: K3
Sep 13 20:56:45.427654: |   50 9e d8 ae  74 5a 75 4c  93 4d 6c 91  98 fe e2 1b
Sep 13 20:56:45.427656: | XCBC: E[n-1]
Sep 13 20:56:45.427657: |   ec 26 f6 dd  e8 bb 1b d1  ec 76 c4 91  78 37 ca 4b
Sep 13 20:56:45.427659: | XCBC: M[n]
Sep 13 20:56:45.427661: |   10 11 12 13
Sep 13 20:56:45.427662: | XCBC: M[n]
Sep 13 20:56:45.427664: |   10 11 12 13
Sep 13 20:56:45.427665: | XCBC: M[n]:80...^E[n-1]^K3
Sep 13 20:56:45.427667: |   ac a9 3c 60  1c e1 6e 9d  7f 3b a8 00  e0 c9 28 50
Sep 13 20:56:45.427670: | XCBC: MAC
Sep 13 20:56:45.427671: |   8c d3 c9 3a  e5 98 a9 80  30 06 ff b6  7c 40 e9 e4
Sep 13 20:56:45.427673: | xcbc: delref k1-key@0x55b124e3b690
Sep 13 20:56:45.427676: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427677: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.427679: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427681: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427682: |     params: 16-bytes@0x7ffee51a5a60
Sep 13 20:56:45.427692: |     result: newref xcbc-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.427694: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.427696: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.427697: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427701: |     key_size: 16-bytes
Sep 13 20:56:45.427704: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427705: |     operation: FLAGS_ONLY
Sep 13 20:56:45.427707: |     params: 8-bytes@0x7ffee51a5a48
Sep 13 20:56:45.427712: |     result: newref xcbc-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.427714: | xcbc: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.427716: | PRF symkey interface: delref key-key@0x55b124e3cfa0
Sep 13 20:56:45.427719: | PRF symkey interface PRF aes_xcbc final-key@0x55b124e3b690 (size 16)
Sep 13 20:56:45.427721: | PRF symkey interface: key-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427723: | output: symkey-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427725: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 18) extracting all 16 bytes of key@0x55b124e3b690
Sep 13 20:56:45.427727: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 18): symkey-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427729: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427734: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 18): newref slot-key@0x55b124e3d030 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427736: | sizeof bytes 16
Sep 13 20:56:45.427742: | wrapper: (SECItemType)544236883: fd 87 9c e2  c3 ed 3a 42  76 ec b4 40  f9 a5 04 75
Sep 13 20:56:45.427745: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 18): delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.427748: | RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 18) extracted len 16 bytes at 0x55b124e5e7d8
Sep 13 20:56:45.427750: | unwrapped:
Sep 13 20:56:45.427751: |   8c d3 c9 3a  e5 98 a9 80  30 06 ff b6  7c 40 e9 e4
Sep 13 20:56:45.427753: | verify_chunk_data: RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 18): ok
Sep 13 20:56:45.427755: | test_prf_vector: RFC 4434 Test Case AES-XCBC-PRF-128 with 20-byte input (key length 18) passed
Sep 13 20:56:45.427757: | test_prf_vector: delref symkey-key@0x55b124e3b690
Sep 13 20:56:45.427760: | test_prf_vector: delref message-key@0x55b124e5cf30
Sep 13 20:56:45.427762: | test_prf_vector: delref key-key@0x55b124e39e10
Sep 13 20:56:45.427765: | test_prf_vector: delref output-key@NULL
Sep 13 20:56:45.427767: testing HMAC_MD5:
Sep 13 20:56:45.427769:   RFC 2104: MD5_HMAC test 1
Sep 13 20:56:45.427771: | decode_to_chunk: test_prf_vector: input "0x0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b"
Sep 13 20:56:45.427773: | decode_to_chunk: output: 
Sep 13 20:56:45.427775: |   0b 0b 0b 0b  0b 0b 0b 0b  0b 0b 0b 0b  0b 0b 0b 0b
Sep 13 20:56:45.427777: | decode_to_chunk: test_prf_vector: input "Hi There"
Sep 13 20:56:45.427778: | decode_to_chunk: output: 
Sep 13 20:56:45.427780: |   48 69 20 54  68 65 72 65
Sep 13 20:56:45.427782: | decode_to_chunk: test_prf_vector: input "0x9294727a3638bb1c13f48ef8158bfc9d"
Sep 13 20:56:45.427784: | decode_to_chunk: output: 
Sep 13 20:56:45.427785: |   92 94 72 7a  36 38 bb 1c  13 f4 8e f8  15 8b fc 9d
Sep 13 20:56:45.427787: | PRF chunk interface PRF md5 init key-chunk@0x55b124e60008 (length 16)
Sep 13 20:56:45.427789: |   0b 0b 0b 0b  0b 0b 0b 0b  0b 0b 0b 0b  0b 0b 0b 0b
Sep 13 20:56:45.427791: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427793: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.427795: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427796: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427798: |     params: 16-bytes@0x7ffee51a5a40
Sep 13 20:56:45.427807: |     result: newref PRF chunk interface-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.427810: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.427812: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.427813: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427815: |     key_size: 16-bytes
Sep 13 20:56:45.427819: |     base: base-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427820: |     operation: FLAGS_ONLY
Sep 13 20:56:45.427822: |     params: 8-bytes@0x7ffee51a5a28
Sep 13 20:56:45.427827: |     result: newref PRF chunk interface-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.427829: | PRF chunk interface: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:45.427832: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:45.427834: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427836: |     base: base-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427838: |     params: 16-bytes@0x7ffee51a5990
Sep 13 20:56:45.427866: |     result: newref trimed key-key@0x55b124e5cf30 (64-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.427877: | append_symkey_bytes: delref lhs-key@0x55b124e39e10
Sep 13 20:56:45.427881: | XOR_BASE_AND_DATA:
Sep 13 20:56:45.427883: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.427886: |     base: base-key@0x55b124e5cf30 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427887: |     params: 16-bytes@0x7ffee51a59d0
Sep 13 20:56:45.427895: |     result: newref result-key@0x55b124e39e10 (64-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.427898: | PRF chunk interface PRF md5 crypt-prf@0x55b124e61968
Sep 13 20:56:45.427900: | PRF chunk interface PRF md5 update message-bytes@0x55b124e5e7d8 (length 8)
Sep 13 20:56:45.427902: |   48 69 20 54  68 65 72 65
Sep 13 20:56:45.427903: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:45.427905: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.427907: |     base: base-key@0x55b124e39e10 (64-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.427909: |     params: 16-bytes@0x7ffee51a5af0
Sep 13 20:56:45.427914: |     result: newref message-key@0x55b124e3b690 (72-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.427917: | append_symkey_bytes: delref lhs-key@0x55b124e39e10
Sep 13 20:56:45.427920: | PRF HMAC inner hash hash md5 inner-key@0x55b124e3b690 (size 72)
Sep 13 20:56:45.427922: | PRF HMAC inner hash hash md5 init
Sep 13 20:56:45.427933: | PRF HMAC inner hash hash md5 digest inner-key@0x55b124e3b690 (size 72)
Sep 13 20:56:45.427936: | PRF HMAC inner hash: inner-key@0x55b124e3b690 (72-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.427941: | PRF HMAC inner hash hash md5 final length 16
Sep 13 20:56:45.427943: |   90 1d 23 73  2e dc c0 f1  a1 06 53 2f  6b e5 ec eb
Sep 13 20:56:45.427945: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427947: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.427949: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427951: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.427952: |     params: 16-bytes@0x7ffee51a5820
Sep 13 20:56:45.427963: |     result: newref PRF HMAC inner hash-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.427966: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.427967: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.427969: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.427971: |     key_size: 16-bytes
Sep 13 20:56:45.427972: |     base: base-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427974: |     operation: FLAGS_ONLY
Sep 13 20:56:45.427976: |     params: 8-bytes@0x7ffee51a5808
Sep 13 20:56:45.427981: |     result: newref PRF HMAC inner hash-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.427983: | PRF HMAC inner hash: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.427986: | PRF chunk interface: delref inner-key@0x55b124e3b690
Sep 13 20:56:45.427988: | XOR_BASE_AND_DATA:
Sep 13 20:56:45.427990: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.427992: |     base: base-key@0x55b124e5cf30 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.427994: |     params: 16-bytes@0x7ffee51a5920
Sep 13 20:56:45.428004: |     result: newref result-key@0x55b124e3b690 (64-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428007: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:45.428008: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.428010: |     base: base-key@0x55b124e3b690 (64-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.428012: |     params: 8-bytes@0x7ffee51a5908
Sep 13 20:56:45.428018: |     result: newref result-key@0x55b124e3cfa0 (80-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:45.428020: | append_symkey_symkey: delref lhs-key@0x55b124e3b690
Sep 13 20:56:45.428023: | PRF chunk interface: delref hashed-inner-key@0x55b124e39e10
Sep 13 20:56:45.428025: | PRF chunk interface: delref key-key@0x55b124e5cf30
Sep 13 20:56:45.428028: | PRF HMAC outer hash hash md5 init
Sep 13 20:56:45.428031: | PRF HMAC outer hash hash md5 digest outer-key@0x55b124e3cfa0 (size 80)
Sep 13 20:56:45.428033: | PRF HMAC outer hash: outer-key@0x55b124e3cfa0 (80-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.428037: | PRF HMAC outer hash hash md5 final bytes@0x7ffee51a5ad8 (length 16)
Sep 13 20:56:45.428039: |   92 94 72 7a  36 38 bb 1c  13 f4 8e f8  15 8b fc 9d
Sep 13 20:56:45.428041: | PRF chunk interface: delref outer-key@0x55b124e3cfa0
Sep 13 20:56:45.428043: | PRF chunk interface PRF md5 final length 16
Sep 13 20:56:45.428045: |   92 94 72 7a  36 38 bb 1c  13 f4 8e f8  15 8b fc 9d
Sep 13 20:56:45.428047: | chunk output
Sep 13 20:56:45.428049: |   92 94 72 7a  36 38 bb 1c  13 f4 8e f8  15 8b fc 9d
Sep 13 20:56:45.428050: | verify_chunk_data: RFC 2104: MD5_HMAC test 1: ok
Sep 13 20:56:45.428053: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428054: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.428056: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428058: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428059: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.428069: |     result: newref key symkey-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428071: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.428073: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.428074: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428076: |     key_size: 16-bytes
Sep 13 20:56:45.428078: |     base: base-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428079: |     operation: FLAGS_ONLY
Sep 13 20:56:45.428081: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.428086: |     result: newref key symkey-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.428088: | key symkey: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:45.428091: | PRF symkey interface PRF md5 init key symkey-key@0x55b124e3cfa0 (size 16)
Sep 13 20:56:45.428093: | PRF symkey interface: key symkey-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428095: | PRF symkey interface: addref key-key@0x55b124e3cfa0
Sep 13 20:56:45.428097: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:45.428098: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428100: |     base: base-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428102: |     params: 16-bytes@0x7ffee51a5990
Sep 13 20:56:45.428107: |     result: newref trimed key-key@0x55b124e5cf30 (64-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428109: | append_symkey_bytes: delref lhs-key@0x55b124e3cfa0
Sep 13 20:56:45.428111: | XOR_BASE_AND_DATA:
Sep 13 20:56:45.428113: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.428115: |     base: base-key@0x55b124e5cf30 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428116: |     params: 16-bytes@0x7ffee51a59d0
Sep 13 20:56:45.428122: |     result: newref result-key@0x55b124e39e10 (64-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428124: | PRF symkey interface PRF md5 crypt-prf@0x55b124e61a08
Sep 13 20:56:45.428128: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428130: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.428132: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428133: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428135: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.428144: |     result: newref message symkey-key@0x55b124e60020 (24-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428147: |     key-offset: 0, key-size: 8
Sep 13 20:56:45.428149: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.428150: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428152: |     key_size: 8-bytes
Sep 13 20:56:45.428154: |     base: base-key@0x55b124e60020 (24-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428155: |     operation: FLAGS_ONLY
Sep 13 20:56:45.428157: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.428162: |     result: newref message symkey-key@0x55b124e3b690 (8-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.428164: | message symkey: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.428166: | PRF symkey interface PRF md5 update symkey message-key@0x55b124e3b690 (size 8)
Sep 13 20:56:45.428169: | PRF symkey interface: symkey message-key@0x55b124e3b690 (8-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428170: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:45.428172: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.428174: |     base: base-key@0x55b124e39e10 (64-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.428176: |     params: 8-bytes@0x7ffee51a5b18
Sep 13 20:56:45.428181: |     result: newref result-key@0x55b124e60020 (72-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:45.428183: | append_symkey_symkey: delref lhs-key@0x55b124e39e10
Sep 13 20:56:45.428186: | PRF HMAC inner hash hash md5 inner-key@0x55b124e60020 (size 72)
Sep 13 20:56:45.428188: | PRF HMAC inner hash hash md5 init
Sep 13 20:56:45.428191: | PRF HMAC inner hash hash md5 digest inner-key@0x55b124e60020 (size 72)
Sep 13 20:56:45.428193: | PRF HMAC inner hash: inner-key@0x55b124e60020 (72-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.428196: | PRF HMAC inner hash hash md5 final length 16
Sep 13 20:56:45.428198: |   90 1d 23 73  2e dc c0 f1  a1 06 53 2f  6b e5 ec eb
Sep 13 20:56:45.428200: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428202: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.428203: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428205: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428207: |     params: 16-bytes@0x7ffee51a58e0
Sep 13 20:56:45.428217: |     result: newref PRF HMAC inner hash-key@0x55b124e61c30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428220: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.428221: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.428223: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428225: |     key_size: 16-bytes
Sep 13 20:56:45.428226: |     base: base-key@0x55b124e61c30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428228: |     operation: FLAGS_ONLY
Sep 13 20:56:45.428230: |     params: 8-bytes@0x7ffee51a58c8
Sep 13 20:56:45.428235: |     result: newref PRF HMAC inner hash-key@0x55b124e39e10 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.428237: | PRF HMAC inner hash: delref tmp-key@0x55b124e61c30
Sep 13 20:56:45.428239: | PRF symkey interface: delref inner-key@0x55b124e60020
Sep 13 20:56:45.428241: | XOR_BASE_AND_DATA:
Sep 13 20:56:45.428243: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.428245: |     base: base-key@0x55b124e5cf30 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428247: |     params: 16-bytes@0x7ffee51a59e0
Sep 13 20:56:45.428252: |     result: newref result-key@0x55b124e60020 (64-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428256: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:45.428258: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.428260: |     base: base-key@0x55b124e60020 (64-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.428262: |     params: 8-bytes@0x7ffee51a59c8
Sep 13 20:56:45.428268: |     result: newref result-key@0x55b124e61c30 (80-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:45.428270: | append_symkey_symkey: delref lhs-key@0x55b124e60020
Sep 13 20:56:45.428272: | PRF symkey interface: delref hashed-inner-key@0x55b124e39e10
Sep 13 20:56:45.428275: | PRF symkey interface: delref key-key@0x55b124e5cf30
Sep 13 20:56:45.428278: | PRF HMAC outer hash hash md5 outer-key@0x55b124e61c30 (size 80)
Sep 13 20:56:45.428280: | PRF HMAC outer hash hash md5 init
Sep 13 20:56:45.428282: | PRF HMAC outer hash hash md5 digest outer-key@0x55b124e61c30 (size 80)
Sep 13 20:56:45.428285: | PRF HMAC outer hash: outer-key@0x55b124e61c30 (80-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.428288: | PRF HMAC outer hash hash md5 final length 16
Sep 13 20:56:45.428290: |   92 94 72 7a  36 38 bb 1c  13 f4 8e f8  15 8b fc 9d
Sep 13 20:56:45.428291: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428293: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.428295: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428296: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428298: |     params: 16-bytes@0x7ffee51a59c0
Sep 13 20:56:45.428307: |     result: newref PRF HMAC outer hash-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428310: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.428311: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.428313: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428315: |     key_size: 16-bytes
Sep 13 20:56:45.428316: |     base: base-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428318: |     operation: FLAGS_ONLY
Sep 13 20:56:45.428320: |     params: 8-bytes@0x7ffee51a59a8
Sep 13 20:56:45.428324: |     result: newref PRF HMAC outer hash-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.428327: | PRF HMAC outer hash: delref tmp-key@0x55b124e39e10
Sep 13 20:56:45.428329: | PRF symkey interface: delref outer-key@0x55b124e61c30
Sep 13 20:56:45.428332: |     :  hashed-outer-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428334: | PRF symkey interface PRF md5 final-key@0x55b124e5cf30 (size 16)
Sep 13 20:56:45.428336: | PRF symkey interface: key-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428338: | output: symkey-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428340: | RFC 2104: MD5_HMAC test 1 extracting all 16 bytes of key@0x55b124e5cf30
Sep 13 20:56:45.428342: | RFC 2104: MD5_HMAC test 1: symkey-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428344: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428349: | RFC 2104: MD5_HMAC test 1: newref slot-key@0x55b124e3d030 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428352: | sizeof bytes 16
Sep 13 20:56:45.428359: | wrapper: (SECItemType)544236883: 98 c6 91 fc  46 23 ae cd  bf 4b 4c ce  10 04 a6 79
Sep 13 20:56:45.428363: | RFC 2104: MD5_HMAC test 1: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.428366: | RFC 2104: MD5_HMAC test 1 extracted len 16 bytes at 0x55b124e3cf38
Sep 13 20:56:45.428368: | unwrapped:
Sep 13 20:56:45.428370: |   92 94 72 7a  36 38 bb 1c  13 f4 8e f8  15 8b fc 9d
Sep 13 20:56:45.428371: | verify_chunk_data: RFC 2104: MD5_HMAC test 1: ok
Sep 13 20:56:45.428373: | test_prf_vector: RFC 2104: MD5_HMAC test 1 passed
Sep 13 20:56:45.428375: | test_prf_vector: delref symkey-key@0x55b124e5cf30
Sep 13 20:56:45.428378: | test_prf_vector: delref message-key@0x55b124e3b690
Sep 13 20:56:45.428380: | test_prf_vector: delref key-key@0x55b124e3cfa0
Sep 13 20:56:45.428383: | test_prf_vector: delref output-key@NULL
Sep 13 20:56:45.428387:   RFC 2104: MD5_HMAC test 2
Sep 13 20:56:45.428389: | decode_to_chunk: test_prf_vector: input "Jefe"
Sep 13 20:56:45.428391: | decode_to_chunk: output: 
Sep 13 20:56:45.428393: |   4a 65 66 65
Sep 13 20:56:45.428395: | decode_to_chunk: test_prf_vector: input "what do ya want for nothing?"
Sep 13 20:56:45.428396: | decode_to_chunk: output: 
Sep 13 20:56:45.428398: |   77 68 61 74  20 64 6f 20  79 61 20 77  61 6e 74 20
Sep 13 20:56:45.428400: |   66 6f 72 20  6e 6f 74 68  69 6e 67 3f
Sep 13 20:56:45.428401: | decode_to_chunk: test_prf_vector: input "0x750c783e6ab0b503eaa86e310a5db738"
Sep 13 20:56:45.428404: | decode_to_chunk: output: 
Sep 13 20:56:45.428405: |   75 0c 78 3e  6a b0 b5 03  ea a8 6e 31  0a 5d b7 38
Sep 13 20:56:45.428407: | PRF chunk interface PRF md5 init key-chunk@0x55b124e3cf88 (length 4)
Sep 13 20:56:45.428409: |   4a 65 66 65
Sep 13 20:56:45.428411: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428413: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.428414: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428416: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428418: |     params: 16-bytes@0x7ffee51a5a40
Sep 13 20:56:45.428428: |     result: newref PRF chunk interface-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428430: |     key-offset: 0, key-size: 4
Sep 13 20:56:45.428432: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.428433: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428435: |     key_size: 4-bytes
Sep 13 20:56:45.428437: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428439: |     operation: FLAGS_ONLY
Sep 13 20:56:45.428440: |     params: 8-bytes@0x7ffee51a5a28
Sep 13 20:56:45.428445: |     result: newref PRF chunk interface-key@0x55b124e3cfa0 (4-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.428447: | PRF chunk interface: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.428450: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:45.428451: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428453: |     base: base-key@0x55b124e3cfa0 (4-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428455: |     params: 16-bytes@0x7ffee51a5990
Sep 13 20:56:45.428461: |     result: newref trimed key-key@0x55b124e3b690 (64-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428463: | append_symkey_bytes: delref lhs-key@0x55b124e3cfa0
Sep 13 20:56:45.428465: | XOR_BASE_AND_DATA:
Sep 13 20:56:45.428467: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.428469: |     base: base-key@0x55b124e3b690 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428470: |     params: 16-bytes@0x7ffee51a59d0
Sep 13 20:56:45.428476: |     result: newref result-key@0x55b124e3cfa0 (64-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428478: | PRF chunk interface PRF md5 crypt-prf@0x55b124e618c8
Sep 13 20:56:45.428480: | PRF chunk interface PRF md5 update message-bytes@0x55b124e3cf38 (length 28)
Sep 13 20:56:45.428482: |   77 68 61 74  20 64 6f 20  79 61 20 77  61 6e 74 20
Sep 13 20:56:45.428484: |   66 6f 72 20  6e 6f 74 68  69 6e 67 3f
Sep 13 20:56:45.428485: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:45.428487: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.428489: |     base: base-key@0x55b124e3cfa0 (64-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.428490: |     params: 16-bytes@0x7ffee51a5af0
Sep 13 20:56:45.428496: |     result: newref message-key@0x55b124e5cf30 (92-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428498: | append_symkey_bytes: delref lhs-key@0x55b124e3cfa0
Sep 13 20:56:45.428501: | PRF HMAC inner hash hash md5 inner-key@0x55b124e5cf30 (size 92)
Sep 13 20:56:45.428503: | PRF HMAC inner hash hash md5 init
Sep 13 20:56:45.428506: | PRF HMAC inner hash hash md5 digest inner-key@0x55b124e5cf30 (size 92)
Sep 13 20:56:45.428508: | PRF HMAC inner hash: inner-key@0x55b124e5cf30 (92-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.428513: | PRF HMAC inner hash hash md5 final length 16
Sep 13 20:56:45.428515: |   c3 db 14 c0  65 f5 52 03  b0 33 c8 1a  69 7b 97 c5
Sep 13 20:56:45.428517: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428519: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.428520: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428522: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428524: |     params: 16-bytes@0x7ffee51a5820
Sep 13 20:56:45.428533: |     result: newref PRF HMAC inner hash-key@0x55b124e61c30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428536: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.428537: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.428539: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428540: |     key_size: 16-bytes
Sep 13 20:56:45.428542: |     base: base-key@0x55b124e61c30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428544: |     operation: FLAGS_ONLY
Sep 13 20:56:45.428545: |     params: 8-bytes@0x7ffee51a5808
Sep 13 20:56:45.428600: |     result: newref PRF HMAC inner hash-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.428612: | PRF HMAC inner hash: delref tmp-key@0x55b124e61c30
Sep 13 20:56:45.428618: | PRF chunk interface: delref inner-key@0x55b124e5cf30
Sep 13 20:56:45.428621: | XOR_BASE_AND_DATA:
Sep 13 20:56:45.428623: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.428625: |     base: base-key@0x55b124e3b690 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428627: |     params: 16-bytes@0x7ffee51a5920
Sep 13 20:56:45.428635: |     result: newref result-key@0x55b124e5cf30 (64-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428637: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:45.428639: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.428641: |     base: base-key@0x55b124e5cf30 (64-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.428642: |     params: 8-bytes@0x7ffee51a5908
Sep 13 20:56:45.428649: |     result: newref result-key@0x55b124e61c30 (80-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:45.428651: | append_symkey_symkey: delref lhs-key@0x55b124e5cf30
Sep 13 20:56:45.428653: | PRF chunk interface: delref hashed-inner-key@0x55b124e3cfa0
Sep 13 20:56:45.428656: | PRF chunk interface: delref key-key@0x55b124e3b690
Sep 13 20:56:45.428659: | PRF HMAC outer hash hash md5 init
Sep 13 20:56:45.428664: | PRF HMAC outer hash hash md5 digest outer-key@0x55b124e61c30 (size 80)
Sep 13 20:56:45.428667: | PRF HMAC outer hash: outer-key@0x55b124e61c30 (80-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.428671: | PRF HMAC outer hash hash md5 final bytes@0x7ffee51a5ad8 (length 16)
Sep 13 20:56:45.428673: |   75 0c 78 3e  6a b0 b5 03  ea a8 6e 31  0a 5d b7 38
Sep 13 20:56:45.428675: | PRF chunk interface: delref outer-key@0x55b124e61c30
Sep 13 20:56:45.428678: | PRF chunk interface PRF md5 final length 16
Sep 13 20:56:45.428680: |   75 0c 78 3e  6a b0 b5 03  ea a8 6e 31  0a 5d b7 38
Sep 13 20:56:45.428681: | chunk output
Sep 13 20:56:45.428683: |   75 0c 78 3e  6a b0 b5 03  ea a8 6e 31  0a 5d b7 38
Sep 13 20:56:45.428685: | verify_chunk_data: RFC 2104: MD5_HMAC test 2: ok
Sep 13 20:56:45.428687: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428689: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.428690: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428692: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428694: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.428704: |     result: newref key symkey-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428707: |     key-offset: 0, key-size: 4
Sep 13 20:56:45.428709: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.428711: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428716: |     key_size: 4-bytes
Sep 13 20:56:45.428719: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428720: |     operation: FLAGS_ONLY
Sep 13 20:56:45.428722: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.428727: |     result: newref key symkey-key@0x55b124e61c30 (4-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.428730: | key symkey: delref tmp-key@0x55b124e3b690
Sep 13 20:56:45.428732: | PRF symkey interface PRF md5 init key symkey-key@0x55b124e61c30 (size 4)
Sep 13 20:56:45.428735: | PRF symkey interface: key symkey-key@0x55b124e61c30 (4-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428737: | PRF symkey interface: addref key-key@0x55b124e61c30
Sep 13 20:56:45.428739: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:45.428740: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428742: |     base: base-key@0x55b124e61c30 (4-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428744: |     params: 16-bytes@0x7ffee51a5990
Sep 13 20:56:45.428749: |     result: newref trimed key-key@0x55b124e3b690 (64-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428752: | append_symkey_bytes: delref lhs-key@0x55b124e61c30
Sep 13 20:56:45.428753: | XOR_BASE_AND_DATA:
Sep 13 20:56:45.428755: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.428757: |     base: base-key@0x55b124e3b690 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428758: |     params: 16-bytes@0x7ffee51a59d0
Sep 13 20:56:45.428764: |     result: newref result-key@0x55b124e3cfa0 (64-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428766: | PRF symkey interface PRF md5 crypt-prf@0x55b124e61a08
Sep 13 20:56:45.428768: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428770: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.428772: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428773: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428775: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.428784: |     result: newref message symkey-key@0x55b124e39e10 (44-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428787: |     key-offset: 0, key-size: 28
Sep 13 20:56:45.428789: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.428790: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428792: |     key_size: 28-bytes
Sep 13 20:56:45.428794: |     base: base-key@0x55b124e39e10 (44-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428795: |     operation: FLAGS_ONLY
Sep 13 20:56:45.428797: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.428802: |     result: newref message symkey-key@0x55b124e5cf30 (28-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.428804: | message symkey: delref tmp-key@0x55b124e39e10
Sep 13 20:56:45.428806: | PRF symkey interface PRF md5 update symkey message-key@0x55b124e5cf30 (size 28)
Sep 13 20:56:45.428809: | PRF symkey interface: symkey message-key@0x55b124e5cf30 (28-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428810: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:45.428812: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.428814: |     base: base-key@0x55b124e3cfa0 (64-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.428816: |     params: 8-bytes@0x7ffee51a5b18
Sep 13 20:56:45.428821: |     result: newref result-key@0x55b124e39e10 (92-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:45.428824: | append_symkey_symkey: delref lhs-key@0x55b124e3cfa0
Sep 13 20:56:45.428826: | PRF HMAC inner hash hash md5 inner-key@0x55b124e39e10 (size 92)
Sep 13 20:56:45.428828: | PRF HMAC inner hash hash md5 init
Sep 13 20:56:45.428831: | PRF HMAC inner hash hash md5 digest inner-key@0x55b124e39e10 (size 92)
Sep 13 20:56:45.428834: | PRF HMAC inner hash: inner-key@0x55b124e39e10 (92-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.428837: | PRF HMAC inner hash hash md5 final length 16
Sep 13 20:56:45.428839: |   c3 db 14 c0  65 f5 52 03  b0 33 c8 1a  69 7b 97 c5
Sep 13 20:56:45.428844: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428846: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.428847: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428849: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428851: |     params: 16-bytes@0x7ffee51a58e0
Sep 13 20:56:45.428860: |     result: newref PRF HMAC inner hash-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428862: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.428864: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.428866: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428867: |     key_size: 16-bytes
Sep 13 20:56:45.428869: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428871: |     operation: FLAGS_ONLY
Sep 13 20:56:45.428872: |     params: 8-bytes@0x7ffee51a58c8
Sep 13 20:56:45.428877: |     result: newref PRF HMAC inner hash-key@0x55b124e3cfa0 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.428879: | PRF HMAC inner hash: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.428882: | PRF symkey interface: delref inner-key@0x55b124e39e10
Sep 13 20:56:45.428884: | XOR_BASE_AND_DATA:
Sep 13 20:56:45.428886: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.428888: |     base: base-key@0x55b124e3b690 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428890: |     params: 16-bytes@0x7ffee51a59e0
Sep 13 20:56:45.428895: |     result: newref result-key@0x55b124e39e10 (64-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428897: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:45.428899: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.428901: |     base: base-key@0x55b124e39e10 (64-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.428902: |     params: 8-bytes@0x7ffee51a59c8
Sep 13 20:56:45.428908: |     result: newref result-key@0x55b124e60020 (80-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:45.428910: | append_symkey_symkey: delref lhs-key@0x55b124e39e10
Sep 13 20:56:45.428912: | PRF symkey interface: delref hashed-inner-key@0x55b124e3cfa0
Sep 13 20:56:45.428915: | PRF symkey interface: delref key-key@0x55b124e3b690
Sep 13 20:56:45.428918: | PRF HMAC outer hash hash md5 outer-key@0x55b124e60020 (size 80)
Sep 13 20:56:45.428920: | PRF HMAC outer hash hash md5 init
Sep 13 20:56:45.428923: | PRF HMAC outer hash hash md5 digest outer-key@0x55b124e60020 (size 80)
Sep 13 20:56:45.428925: | PRF HMAC outer hash: outer-key@0x55b124e60020 (80-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.428928: | PRF HMAC outer hash hash md5 final length 16
Sep 13 20:56:45.428930: |   75 0c 78 3e  6a b0 b5 03  ea a8 6e 31  0a 5d b7 38
Sep 13 20:56:45.428932: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428933: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.428935: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428937: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428938: |     params: 16-bytes@0x7ffee51a59c0
Sep 13 20:56:45.428947: |     result: newref PRF HMAC outer hash-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.428950: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.428951: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.428953: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.428955: |     key_size: 16-bytes
Sep 13 20:56:45.428956: |     base: base-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428958: |     operation: FLAGS_ONLY
Sep 13 20:56:45.428959: |     params: 8-bytes@0x7ffee51a59a8
Sep 13 20:56:45.428964: |     result: newref PRF HMAC outer hash-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.428966: | PRF HMAC outer hash: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.428969: | PRF symkey interface: delref outer-key@0x55b124e60020
Sep 13 20:56:45.428975: |     :  hashed-outer-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428977: | PRF symkey interface PRF md5 final-key@0x55b124e3b690 (size 16)
Sep 13 20:56:45.428979: | PRF symkey interface: key-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428981: | output: symkey-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428983: | RFC 2104: MD5_HMAC test 2 extracting all 16 bytes of key@0x55b124e3b690
Sep 13 20:56:45.428985: | RFC 2104: MD5_HMAC test 2: symkey-key@0x55b124e3b690 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428987: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.428993: | RFC 2104: MD5_HMAC test 2: newref slot-key@0x55b124e3d030 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.428995: | sizeof bytes 16
Sep 13 20:56:45.429003: | wrapper: (SECItemType)544236883: 26 f9 e7 00  a1 10 17 1c  1d f6 1e ac  d5 f0 a3 53
Sep 13 20:56:45.429007: | RFC 2104: MD5_HMAC test 2: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.429010: | RFC 2104: MD5_HMAC test 2 extracted len 16 bytes at 0x55b124e37d18
Sep 13 20:56:45.429012: | unwrapped:
Sep 13 20:56:45.429013: |   75 0c 78 3e  6a b0 b5 03  ea a8 6e 31  0a 5d b7 38
Sep 13 20:56:45.429015: | verify_chunk_data: RFC 2104: MD5_HMAC test 2: ok
Sep 13 20:56:45.429017: | test_prf_vector: RFC 2104: MD5_HMAC test 2 passed
Sep 13 20:56:45.429019: | test_prf_vector: delref symkey-key@0x55b124e3b690
Sep 13 20:56:45.429021: | test_prf_vector: delref message-key@0x55b124e5cf30
Sep 13 20:56:45.429024: | test_prf_vector: delref key-key@0x55b124e61c30
Sep 13 20:56:45.429026: | test_prf_vector: delref output-key@NULL
Sep 13 20:56:45.429029:   RFC 2104: MD5_HMAC test 3
Sep 13 20:56:45.429031: | decode_to_chunk: test_prf_vector: input "0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
Sep 13 20:56:45.429033: | decode_to_chunk: output: 
Sep 13 20:56:45.429035: |   aa aa aa aa  aa aa aa aa  aa aa aa aa  aa aa aa aa
Sep 13 20:56:45.429037: | decode_to_chunk: test_prf_vector: input "0xDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"
Sep 13 20:56:45.429039: | decode_to_chunk: output: 
Sep 13 20:56:45.429041: |   dd dd dd dd  dd dd dd dd  dd dd dd dd  dd dd dd dd
Sep 13 20:56:45.429043: |   dd dd dd dd  dd dd dd dd  dd dd dd dd  dd dd dd dd
Sep 13 20:56:45.429044: |   dd dd dd dd  dd dd dd dd  dd dd dd dd  dd dd dd dd
Sep 13 20:56:45.429046: |   dd dd
Sep 13 20:56:45.429047: | decode_to_chunk: test_prf_vector: input "0x56be34521d144c88dbb8c733f0e8b3f6"
Sep 13 20:56:45.429050: | decode_to_chunk: output: 
Sep 13 20:56:45.429051: |   56 be 34 52  1d 14 4c 88  db b8 c7 33  f0 e8 b3 f6
Sep 13 20:56:45.429053: | PRF chunk interface PRF md5 init key-chunk@0x55b124e60008 (length 16)
Sep 13 20:56:45.429055: |   aa aa aa aa  aa aa aa aa  aa aa aa aa  aa aa aa aa
Sep 13 20:56:45.429057: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.429058: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.429060: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.429062: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.429064: |     params: 16-bytes@0x7ffee51a5a40
Sep 13 20:56:45.429073: |     result: newref PRF chunk interface-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.429076: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.429077: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.429079: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.429081: |     key_size: 16-bytes
Sep 13 20:56:45.429082: |     base: base-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429084: |     operation: FLAGS_ONLY
Sep 13 20:56:45.429086: |     params: 8-bytes@0x7ffee51a5a28
Sep 13 20:56:45.429090: |     result: newref PRF chunk interface-key@0x55b124e61c30 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.429093: | PRF chunk interface: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:45.429097: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:45.429099: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.429101: |     base: base-key@0x55b124e61c30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429103: |     params: 16-bytes@0x7ffee51a5990
Sep 13 20:56:45.429108: |     result: newref trimed key-key@0x55b124e5cf30 (64-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.429110: | append_symkey_bytes: delref lhs-key@0x55b124e61c30
Sep 13 20:56:45.429113: | XOR_BASE_AND_DATA:
Sep 13 20:56:45.429114: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.429116: |     base: base-key@0x55b124e5cf30 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429118: |     params: 16-bytes@0x7ffee51a59d0
Sep 13 20:56:45.429123: |     result: newref result-key@0x55b124e61c30 (64-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.429126: | PRF chunk interface PRF md5 crypt-prf@0x55b124e619d8
Sep 13 20:56:45.429128: | PRF chunk interface PRF md5 update message-bytes@0x55b124e618c8 (length 50)
Sep 13 20:56:45.429129: |   dd dd dd dd  dd dd dd dd  dd dd dd dd  dd dd dd dd
Sep 13 20:56:45.429131: |   dd dd dd dd  dd dd dd dd  dd dd dd dd  dd dd dd dd
Sep 13 20:56:45.429133: |   dd dd dd dd  dd dd dd dd  dd dd dd dd  dd dd dd dd
Sep 13 20:56:45.429134: |   dd dd
Sep 13 20:56:45.429136: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:45.429137: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.429139: |     base: base-key@0x55b124e61c30 (64-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.429141: |     params: 16-bytes@0x7ffee51a5af0
Sep 13 20:56:45.429146: |     result: newref message-key@0x55b124e3b690 (114-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.429149: | append_symkey_bytes: delref lhs-key@0x55b124e61c30
Sep 13 20:56:45.429151: | PRF HMAC inner hash hash md5 inner-key@0x55b124e3b690 (size 114)
Sep 13 20:56:45.429153: | PRF HMAC inner hash hash md5 init
Sep 13 20:56:45.429156: | PRF HMAC inner hash hash md5 digest inner-key@0x55b124e3b690 (size 114)
Sep 13 20:56:45.429159: | PRF HMAC inner hash: inner-key@0x55b124e3b690 (114-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.429162: | PRF HMAC inner hash hash md5 final length 16
Sep 13 20:56:45.429164: |   82 0a 6b 33  5d 18 7b 90  dc ba b1 7e  f5 b4 26 ff
Sep 13 20:56:45.429166: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.429167: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.429169: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.429171: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.429172: |     params: 16-bytes@0x7ffee51a5820
Sep 13 20:56:45.429181: |     result: newref PRF HMAC inner hash-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.429184: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.429185: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.429187: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.429189: |     key_size: 16-bytes
Sep 13 20:56:45.429190: |     base: base-key@0x55b124e60020 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429192: |     operation: FLAGS_ONLY
Sep 13 20:56:45.429194: |     params: 8-bytes@0x7ffee51a5808
Sep 13 20:56:45.429198: |     result: newref PRF HMAC inner hash-key@0x55b124e61c30 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.429200: | PRF HMAC inner hash: delref tmp-key@0x55b124e60020
Sep 13 20:56:45.429203: | PRF chunk interface: delref inner-key@0x55b124e3b690
Sep 13 20:56:45.429205: | XOR_BASE_AND_DATA:
Sep 13 20:56:45.429207: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.429209: |     base: base-key@0x55b124e5cf30 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429211: |     params: 16-bytes@0x7ffee51a5920
Sep 13 20:56:45.429216: |     result: newref result-key@0x55b124e3b690 (64-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.429218: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:45.429222: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.429224: |     base: base-key@0x55b124e3b690 (64-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.429226: |     params: 8-bytes@0x7ffee51a5908
Sep 13 20:56:45.429232: |     result: newref result-key@0x55b124e60020 (80-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:45.429234: | append_symkey_symkey: delref lhs-key@0x55b124e3b690
Sep 13 20:56:45.429236: | PRF chunk interface: delref hashed-inner-key@0x55b124e61c30
Sep 13 20:56:45.429239: | PRF chunk interface: delref key-key@0x55b124e5cf30
Sep 13 20:56:45.429241: | PRF HMAC outer hash hash md5 init
Sep 13 20:56:45.429245: | PRF HMAC outer hash hash md5 digest outer-key@0x55b124e60020 (size 80)
Sep 13 20:56:45.429247: | PRF HMAC outer hash: outer-key@0x55b124e60020 (80-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.429250: | PRF HMAC outer hash hash md5 final bytes@0x7ffee51a5ad8 (length 16)
Sep 13 20:56:45.429252: |   56 be 34 52  1d 14 4c 88  db b8 c7 33  f0 e8 b3 f6
Sep 13 20:56:45.429254: | PRF chunk interface: delref outer-key@0x55b124e60020
Sep 13 20:56:45.429256: | PRF chunk interface PRF md5 final length 16
Sep 13 20:56:45.429258: |   56 be 34 52  1d 14 4c 88  db b8 c7 33  f0 e8 b3 f6
Sep 13 20:56:45.429260: | chunk output
Sep 13 20:56:45.429262: |   56 be 34 52  1d 14 4c 88  db b8 c7 33  f0 e8 b3 f6
Sep 13 20:56:45.429264: | verify_chunk_data: RFC 2104: MD5_HMAC test 3: ok
Sep 13 20:56:45.429265: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.429267: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.429269: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.429270: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.429272: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.429281: |     result: newref key symkey-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.429284: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.429285: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.429287: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.429288: |     key_size: 16-bytes
Sep 13 20:56:45.429290: |     base: base-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429292: |     operation: FLAGS_ONLY
Sep 13 20:56:45.429293: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.429298: |     result: newref key symkey-key@0x55b124e60020 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.429301: | key symkey: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:45.429303: | PRF symkey interface PRF md5 init key symkey-key@0x55b124e60020 (size 16)
Sep 13 20:56:45.429305: | PRF symkey interface: key symkey-key@0x55b124e60020 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429307: | PRF symkey interface: addref key-key@0x55b124e60020
Sep 13 20:56:45.429309: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:45.429311: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.429312: |     base: base-key@0x55b124e60020 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429314: |     params: 16-bytes@0x7ffee51a5990
Sep 13 20:56:45.429320: |     result: newref trimed key-key@0x55b124e5cf30 (64-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.429322: | append_symkey_bytes: delref lhs-key@0x55b124e60020
Sep 13 20:56:45.429323: | XOR_BASE_AND_DATA:
Sep 13 20:56:45.429325: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.429327: |     base: base-key@0x55b124e5cf30 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429329: |     params: 16-bytes@0x7ffee51a59d0
Sep 13 20:56:45.429334: |     result: newref result-key@0x55b124e61c30 (64-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.429336: | PRF symkey interface PRF md5 crypt-prf@0x55b124e61938
Sep 13 20:56:45.429338: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.429340: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.429341: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.429345: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.429347: |     params: 16-bytes@0x7ffee51a5ac0
Sep 13 20:56:45.429356: |     result: newref message symkey-key@0x55b124e3cfa0 (66-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.429358: |     key-offset: 0, key-size: 50
Sep 13 20:56:45.429360: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.429362: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.429363: |     key_size: 50-bytes
Sep 13 20:56:45.429365: |     base: base-key@0x55b124e3cfa0 (66-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429367: |     operation: FLAGS_ONLY
Sep 13 20:56:45.429368: |     params: 8-bytes@0x7ffee51a5aa8
Sep 13 20:56:45.429373: |     result: newref message symkey-key@0x55b124e3b690 (50-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.429375: | message symkey: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:45.429378: | PRF symkey interface PRF md5 update symkey message-key@0x55b124e3b690 (size 50)
Sep 13 20:56:45.429380: | PRF symkey interface: symkey message-key@0x55b124e3b690 (50-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429382: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:45.429383: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.429385: |     base: base-key@0x55b124e61c30 (64-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.429387: |     params: 8-bytes@0x7ffee51a5b18
Sep 13 20:56:45.429392: |     result: newref result-key@0x55b124e3cfa0 (114-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:45.429395: | append_symkey_symkey: delref lhs-key@0x55b124e61c30
Sep 13 20:56:45.429397: | PRF HMAC inner hash hash md5 inner-key@0x55b124e3cfa0 (size 114)
Sep 13 20:56:45.429399: | PRF HMAC inner hash hash md5 init
Sep 13 20:56:45.429402: | PRF HMAC inner hash hash md5 digest inner-key@0x55b124e3cfa0 (size 114)
Sep 13 20:56:45.429404: | PRF HMAC inner hash: inner-key@0x55b124e3cfa0 (114-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.429408: | PRF HMAC inner hash hash md5 final length 16
Sep 13 20:56:45.429409: |   82 0a 6b 33  5d 18 7b 90  dc ba b1 7e  f5 b4 26 ff
Sep 13 20:56:45.429411: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.429413: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.429415: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.429416: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.429418: |     params: 16-bytes@0x7ffee51a58e0
Sep 13 20:56:45.429427: |     result: newref PRF HMAC inner hash-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.429430: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.429432: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.429433: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.429435: |     key_size: 16-bytes
Sep 13 20:56:45.429437: |     base: base-key@0x55b124e39e10 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429438: |     operation: FLAGS_ONLY
Sep 13 20:56:45.429440: |     params: 8-bytes@0x7ffee51a58c8
Sep 13 20:56:45.429445: |     result: newref PRF HMAC inner hash-key@0x55b124e61c30 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.429447: | PRF HMAC inner hash: delref tmp-key@0x55b124e39e10
Sep 13 20:56:45.429449: | PRF symkey interface: delref inner-key@0x55b124e3cfa0
Sep 13 20:56:45.429451: | XOR_BASE_AND_DATA:
Sep 13 20:56:45.429453: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.429455: |     base: base-key@0x55b124e5cf30 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429457: |     params: 16-bytes@0x7ffee51a59e0
Sep 13 20:56:45.429462: |     result: newref result-key@0x55b124e3cfa0 (64-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.429464: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:45.429466: |     target: CONCATENATE_BASE_AND_DATA
Sep 13 20:56:45.429468: |     base: base-key@0x55b124e3cfa0 (64-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.429471: |     params: 8-bytes@0x7ffee51a59c8
Sep 13 20:56:45.429477: |     result: newref result-key@0x55b124e39e10 (80-bytes, CONCATENATE_BASE_AND_DATA)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:45.429480: | append_symkey_symkey: delref lhs-key@0x55b124e3cfa0
Sep 13 20:56:45.429482: | PRF symkey interface: delref hashed-inner-key@0x55b124e61c30
Sep 13 20:56:45.429485: | PRF symkey interface: delref key-key@0x55b124e5cf30
Sep 13 20:56:45.429487: | PRF HMAC outer hash hash md5 outer-key@0x55b124e39e10 (size 80)
Sep 13 20:56:45.429489: | PRF HMAC outer hash hash md5 init
Sep 13 20:56:45.429492: | PRF HMAC outer hash hash md5 digest outer-key@0x55b124e39e10 (size 80)
Sep 13 20:56:45.429494: | PRF HMAC outer hash: outer-key@0x55b124e39e10 (80-bytes, CONCATENATE_BASE_AND_DATA)
Sep 13 20:56:45.429497: | PRF HMAC outer hash hash md5 final length 16
Sep 13 20:56:45.429499: |   56 be 34 52  1d 14 4c 88  db b8 c7 33  f0 e8 b3 f6
Sep 13 20:56:45.429501: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.429503: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:45.429504: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.429506: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.429508: |     params: 16-bytes@0x7ffee51a59c0
Sep 13 20:56:45.429517: |     result: newref PRF HMAC outer hash-key@0x55b124e61c30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:45.429520: |     key-offset: 0, key-size: 16
Sep 13 20:56:45.429521: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:45.429523: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:45.429524: |     key_size: 16-bytes
Sep 13 20:56:45.429526: |     base: base-key@0x55b124e61c30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429528: |     operation: FLAGS_ONLY
Sep 13 20:56:45.429529: |     params: 8-bytes@0x7ffee51a59a8
Sep 13 20:56:45.429534: |     result: newref PRF HMAC outer hash-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:45.429536: | PRF HMAC outer hash: delref tmp-key@0x55b124e61c30
Sep 13 20:56:45.429539: | PRF symkey interface: delref outer-key@0x55b124e39e10
Sep 13 20:56:45.429541: |     :  hashed-outer-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429544: | PRF symkey interface PRF md5 final-key@0x55b124e5cf30 (size 16)
Sep 13 20:56:45.429556: | PRF symkey interface: key-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429562: | output: symkey-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429564: | RFC 2104: MD5_HMAC test 3 extracting all 16 bytes of key@0x55b124e5cf30
Sep 13 20:56:45.429566: | RFC 2104: MD5_HMAC test 3: symkey-key@0x55b124e5cf30 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429568: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:45.429574: | RFC 2104: MD5_HMAC test 3: newref slot-key@0x55b124e3d030 (16-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:45.429576: | sizeof bytes 16
Sep 13 20:56:45.429583: | wrapper: (SECItemType)544236883: e5 85 50 83  ed ab 82 86  3b 79 89 c3  67 06 70 e8
Sep 13 20:56:45.429587: | RFC 2104: MD5_HMAC test 3: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:45.429590: | RFC 2104: MD5_HMAC test 3 extracted len 16 bytes at 0x55b124e37d18
Sep 13 20:56:45.429592: | unwrapped:
Sep 13 20:56:45.429593: |   56 be 34 52  1d 14 4c 88  db b8 c7 33  f0 e8 b3 f6
Sep 13 20:56:45.429595: | verify_chunk_data: RFC 2104: MD5_HMAC test 3: ok
Sep 13 20:56:45.429597: | test_prf_vector: RFC 2104: MD5_HMAC test 3 passed
Sep 13 20:56:45.429599: | test_prf_vector: delref symkey-key@0x55b124e5cf30
Sep 13 20:56:45.429601: | test_prf_vector: delref message-key@0x55b124e3b690
Sep 13 20:56:45.429604: | test_prf_vector: delref key-key@0x55b124e60020
Sep 13 20:56:45.429606: | test_prf_vector: delref output-key@NULL
Sep 13 20:56:45.429632: 6 CPU cores online
Sep 13 20:56:45.429636: starting up 5 crypto helpers
Sep 13 20:56:45.429685: started thread for crypto helper 0
Sep 13 20:56:45.429704: | starting up helper thread 0
Sep 13 20:56:45.429729: | starting up helper thread 1
Sep 13 20:56:45.429714: started thread for crypto helper 1
Sep 13 20:56:45.429739: seccomp security for crypto helper not supported
Sep 13 20:56:45.429765: | status value returned by setting the priority of this thread (crypto helper 0) 22
Sep 13 20:56:45.429770: | crypto helper 0 waiting (nothing to do)
Sep 13 20:56:45.429748: seccomp security for crypto helper not supported
Sep 13 20:56:45.429782: | status value returned by setting the priority of this thread (crypto helper 1) 22
Sep 13 20:56:45.429786: | crypto helper 1 waiting (nothing to do)
Sep 13 20:56:45.429798: started thread for crypto helper 2
Sep 13 20:56:45.429810: | starting up helper thread 2
Sep 13 20:56:45.429833: seccomp security for crypto helper not supported
Sep 13 20:56:45.429836: | status value returned by setting the priority of this thread (crypto helper 2) 22
Sep 13 20:56:45.429838: | crypto helper 2 waiting (nothing to do)
Sep 13 20:56:45.429890: started thread for crypto helper 3
Sep 13 20:56:45.429898: | starting up helper thread 3
Sep 13 20:56:45.429907: seccomp security for crypto helper not supported
Sep 13 20:56:45.429909: | status value returned by setting the priority of this thread (crypto helper 3) 22
Sep 13 20:56:45.429911: | crypto helper 3 waiting (nothing to do)
Sep 13 20:56:45.429916: started thread for crypto helper 4
Sep 13 20:56:45.429927: | starting up helper thread 4
Sep 13 20:56:45.429929: Using Linux XFRM/NETKEY IPsec kernel support code on 4.4.0-21-generic
Sep 13 20:56:45.429946: seccomp security for crypto helper not supported
Sep 13 20:56:45.429965: | status value returned by setting the priority of this thread (crypto helper 4) 22
Sep 13 20:56:45.429968: | crypto helper 4 waiting (nothing to do)
Sep 13 20:56:45.429968: | Hard-wiring algorithms
Sep 13 20:56:45.429972: | adding AES_CCM_16 to kernel algorithm db
Sep 13 20:56:45.429975: | adding AES_CCM_12 to kernel algorithm db
Sep 13 20:56:45.429976: | adding AES_CCM_8 to kernel algorithm db
Sep 13 20:56:45.429978: | adding 3DES_CBC to kernel algorithm db
Sep 13 20:56:45.429980: | adding CAMELLIA_CBC to kernel algorithm db
Sep 13 20:56:45.429982: | adding AES_GCM_16 to kernel algorithm db
Sep 13 20:56:45.429984: | adding AES_GCM_12 to kernel algorithm db
Sep 13 20:56:45.429985: | adding AES_GCM_8 to kernel algorithm db
Sep 13 20:56:45.429987: | adding AES_CTR to kernel algorithm db
Sep 13 20:56:45.429989: | adding AES_CBC to kernel algorithm db
Sep 13 20:56:45.429991: | adding SERPENT_CBC to kernel algorithm db
Sep 13 20:56:45.429993: | adding TWOFISH_CBC to kernel algorithm db
Sep 13 20:56:45.429995: | adding NULL_AUTH_AES_GMAC to kernel algorithm db
Sep 13 20:56:45.429996: | adding NULL to kernel algorithm db
Sep 13 20:56:45.429998: | adding CHACHA20_POLY1305 to kernel algorithm db
Sep 13 20:56:45.430000: | adding HMAC_MD5_96 to kernel algorithm db
Sep 13 20:56:45.430002: | adding HMAC_SHA1_96 to kernel algorithm db
Sep 13 20:56:45.430004: | adding HMAC_SHA2_512_256 to kernel algorithm db
Sep 13 20:56:45.430005: | adding HMAC_SHA2_384_192 to kernel algorithm db
Sep 13 20:56:45.430007: | adding HMAC_SHA2_256_128 to kernel algorithm db
Sep 13 20:56:45.430009: | adding HMAC_SHA2_256_TRUNCBUG to kernel algorithm db
Sep 13 20:56:45.430011: | adding AES_XCBC_96 to kernel algorithm db
Sep 13 20:56:45.430013: | adding AES_CMAC_96 to kernel algorithm db
Sep 13 20:56:45.430014: | adding NONE to kernel algorithm db
Sep 13 20:56:45.430059: | global periodic timer EVENT_SHUNT_SCAN enabled with interval of 20 seconds
Sep 13 20:56:45.430062: | setup kernel fd callback
Sep 13 20:56:45.430065: | add_fd_read_event_handler: newref KERNEL_XRM_FD-pe@0x55b124e618c8
Sep 13 20:56:45.430068: | libevent_malloc: newref ptr-libevent@0x55b124e61a08 size 136
Sep 13 20:56:45.430070: | libevent_malloc: newref ptr-libevent@0x55b124e3d188 size 24
Sep 13 20:56:45.430074: | add_fd_read_event_handler: newref KERNEL_ROUTE_FD-pe@0x55b124e3cf38
Sep 13 20:56:45.430076: | libevent_malloc: newref ptr-libevent@0x55b124e639a8 size 136
Sep 13 20:56:45.430082: | libevent_malloc: newref ptr-libevent@0x55b124e37d18 size 24
Sep 13 20:56:45.430086: | vendor id hash md5 init
Sep 13 20:56:45.430093: | vendor id hash md5 digest data-bytes@0x55b123e0cb1b (length 11)
Sep 13 20:56:45.430095: |   4b 41 4d 45  2f 72 61 63  6f 6f 6e
Sep 13 20:56:45.430099: | vendor id hash md5 final bytes@0x55b124e5e7d8 (length 16)
Sep 13 20:56:45.430101: |   70 03 cb c1  09 7d be 9c  26 00 ba 69  83 bc 8b 35
Sep 13 20:56:45.430103: | vendor id hash md5 init
Sep 13 20:56:45.430106: | vendor id hash md5 digest data-bytes@0x55b123e0d910 (length 46)
Sep 13 20:56:45.430108: |   4e 4c 42 53  5f 50 52 45  53 45 4e 54  28 4e 4c 42
Sep 13 20:56:45.430110: |   2f 4d 53 43  53 20 66 61  73 74 20 66  61 69 6c 6f
Sep 13 20:56:45.430112: |   76 65 72 20  73 75 70 70  6f 72 74 65  64 29
Sep 13 20:56:45.430114: | vendor id hash md5 final bytes@0x55b124e63b78 (length 16)
Sep 13 20:56:45.430116: |   ec 22 62 b5  12 32 63 83  67 12 3b ce  3d 37 3c 5e
Sep 13 20:56:45.430118: | vendor id hash md5 init
Sep 13 20:56:45.430121: | vendor id hash md5 digest data-bytes@0x55b123e0d940 (length 32)
Sep 13 20:56:45.430123: |   4d 53 2d 4d  61 6d 69 65  45 78 69 73  74 73 28 41
Sep 13 20:56:45.430124: |   75 74 68 49  50 20 73 75  70 70 6f 72  74 65 64 29
Sep 13 20:56:45.430127: | vendor id hash md5 final bytes@0x55b124e63bb8 (length 16)
Sep 13 20:56:45.430129: |   6f fe a4 ae  ec 37 f4 9a  02 6f 97 cf  b5 53 30 6d
Sep 13 20:56:45.430131: | vendor id hash md5 init
Sep 13 20:56:45.430133: | vendor id hash md5 digest data-bytes@0x55b123e0cc9e (length 17)
Sep 13 20:56:45.430135: |   49 4b 45 20  43 47 41 20  76 65 72 73  69 6f 6e 20
Sep 13 20:56:45.430137: |   31
Sep 13 20:56:45.430139: | vendor id hash md5 final bytes@0x55b124e63bf8 (length 16)
Sep 13 20:56:45.430141: |   e3 a5 96 6a  76 37 9f e7  07 22 82 31  e5 ce 86 52
Sep 13 20:56:45.430143: | vendor id hash md5 init
Sep 13 20:56:45.430146: | vendor id hash md5 digest data-bytes@0x55b123e0d968 (length 32)
Sep 13 20:56:45.430148: |   4d 53 2d 4e  65 67 6f 74  69 61 74 69  6f 6e 20 44
Sep 13 20:56:45.430149: |   69 73 63 6f  76 65 72 79  20 43 61 70  61 62 6c 65
Sep 13 20:56:45.430152: | vendor id hash md5 final bytes@0x55b124e63ed8 (length 16)
Sep 13 20:56:45.430154: |   fb 1d e3 cd  f3 41 b7 ea  16 b7 e5 be  08 55 f1 20
Sep 13 20:56:45.430156: | vendor id hash md5 init
Sep 13 20:56:45.430158: | vendor id hash md5 digest data-bytes@0x55b123e0ccb0 (length 23)
Sep 13 20:56:45.430160: |   4d 69 63 72  6f 73 6f 66  74 20 58 62  6f 78 20 4f
Sep 13 20:56:45.430162: |   6e 65 20 32  30 31 33
Sep 13 20:56:45.430164: | vendor id hash md5 final bytes@0x55b124e63c38 (length 16)
Sep 13 20:56:45.430166: |   8a a3 94 cf  8a 55 77 dc  31 10 c1 13  b0 27 a4 f2
Sep 13 20:56:45.430168: | vendor id hash md5 init
Sep 13 20:56:45.430171: | vendor id hash md5 digest data-bytes@0x55b123e0ccc8 (length 22)
Sep 13 20:56:45.430172: |   58 62 6f 78  20 49 4b 45  76 32 20 4e  65 67 6f 74
Sep 13 20:56:45.430174: |   69 61 74 69  6f 6e
Sep 13 20:56:45.430177: | vendor id hash md5 final bytes@0x55b124e63f18 (length 16)
Sep 13 20:56:45.430178: |   aa 28 1f cc  d6 8c f8 a8  dc b8 5c c0  a7 10 40 2a
Sep 13 20:56:45.430180: | vendor id hash md5 init
Sep 13 20:56:45.430183: | vendor id hash md5 digest data-bytes@0x55b123e0ccdf (length 28)
Sep 13 20:56:45.430185: |   4d 53 46 54  20 49 50 73  65 63 20 53  65 63 75 72
Sep 13 20:56:45.430186: |   69 74 79 20  52 65 61 6c  6d 20 49 64
Sep 13 20:56:45.430189: | vendor id hash md5 final bytes@0x55b124e63c78 (length 16)
Sep 13 20:56:45.430191: |   68 6a 8c bd  fe 63 4b 40  51 46 fb 2b  af 33 e9 e8
Sep 13 20:56:45.430193: | vendor id hash md5 init
Sep 13 20:56:45.430195: | vendor id hash md5 digest data-bytes@0x55b123e0d990 (length 39)
Sep 13 20:56:45.430197: |   41 20 47 53  53 2d 41 50  49 20 41 75  74 68 65 6e
Sep 13 20:56:45.430199: |   74 69 63 61  74 69 6f 6e  20 4d 65 74  68 6f 64 20
Sep 13 20:56:45.430200: |   66 6f 72 20  49 4b 45
Sep 13 20:56:45.430203: | vendor id hash md5 final bytes@0x55b124e63cb8 (length 16)
Sep 13 20:56:45.430205: |   ad 2c 0d d0  b9 c3 20 83  cc ba 25 b8  86 1e c4 55
Sep 13 20:56:45.430209: | vendor id hash md5 init
Sep 13 20:56:45.430212: | vendor id hash md5 digest data-bytes@0x55b123e0ccfc (length 6)
Sep 13 20:56:45.430214: |   47 53 53 41  50 49
Sep 13 20:56:45.430216: | vendor id hash md5 final bytes@0x55b124e63f58 (length 16)
Sep 13 20:56:45.430218: |   62 1b 04 bb  09 88 2a c1  e1 59 35 fe  fa 24 ae ee
Sep 13 20:56:45.430220: | vendor id hash md5 init
Sep 13 20:56:45.430223: | vendor id hash md5 digest data-bytes@0x55b123e0cd03 (length 12)
Sep 13 20:56:45.430225: |   53 53 48 20  53 65 6e 74  69 6e 65 6c
Sep 13 20:56:45.430227: | vendor id hash md5 final bytes@0x55b124e63cf8 (length 16)
Sep 13 20:56:45.430229: |   05 41 82 a0  7c 7a e2 06  f9 d2 cf 9d  24 32 c4 82
Sep 13 20:56:45.430231: | vendor id hash md5 init
Sep 13 20:56:45.430234: | vendor id hash md5 digest data-bytes@0x55b123e0cd10 (length 16)
Sep 13 20:56:45.430235: |   53 53 48 20  53 65 6e 74  69 6e 65 6c  20 31 2e 31
Sep 13 20:56:45.430238: | vendor id hash md5 final bytes@0x55b124e63d38 (length 16)
Sep 13 20:56:45.430240: |   b9 16 23 e6  93 ca 18 a5  4c 6a 27 78  55 23 05 e8
Sep 13 20:56:45.430242: | vendor id hash md5 init
Sep 13 20:56:45.430244: | vendor id hash md5 digest data-bytes@0x55b123e0cd21 (length 16)
Sep 13 20:56:45.430246: |   53 53 48 20  53 65 6e 74  69 6e 65 6c  20 31 2e 32
Sep 13 20:56:45.430249: | vendor id hash md5 final bytes@0x55b124e63d78 (length 16)
Sep 13 20:56:45.430250: |   54 30 88 8d  e0 1a 31 a6  fa 8f 60 22  4e 44 99 58
Sep 13 20:56:45.430252: | vendor id hash md5 init
Sep 13 20:56:45.430255: | vendor id hash md5 digest data-bytes@0x55b123e0cd32 (length 16)
Sep 13 20:56:45.430257: |   53 53 48 20  53 65 6e 74  69 6e 65 6c  20 31 2e 33
Sep 13 20:56:45.430259: | vendor id hash md5 final bytes@0x55b124e63db8 (length 16)
Sep 13 20:56:45.430261: |   7e e5 cb 85  f7 1c e2 59  c9 4a 5c 73  1e e4 e7 52
Sep 13 20:56:45.430263: | vendor id hash md5 init
Sep 13 20:56:45.430266: | vendor id hash md5 digest data-bytes@0x55b123e0cd43 (length 16)
Sep 13 20:56:45.430267: |   53 53 48 20  53 65 6e 74  69 6e 65 6c  20 31 2e 34
Sep 13 20:56:45.430270: | vendor id hash md5 final bytes@0x55b124e63df8 (length 16)
Sep 13 20:56:45.430272: |   63 d9 a1 a7  00 94 91 b5  a0 a6 fd eb  2a 82 84 f0
Sep 13 20:56:45.430274: | vendor id hash md5 init
Sep 13 20:56:45.430276: | vendor id hash md5 digest data-bytes@0x55b123e0cd54 (length 18)
Sep 13 20:56:45.430278: |   53 53 48 20  53 65 6e 74  69 6e 65 6c  20 31 2e 34
Sep 13 20:56:45.430280: |   2e 31
Sep 13 20:56:45.430282: | vendor id hash md5 final bytes@0x55b124e63e38 (length 16)
Sep 13 20:56:45.430284: |   eb 4b 0d 96  27 6b 4e 22  0a d1 62 21  a7 b2 a5 e6
Sep 13 20:56:45.430286: | vendor id hash md5 init
Sep 13 20:56:45.430288: | vendor id hash md5 digest data-bytes@0x55b123e0d9b8 (length 55)
Sep 13 20:56:45.430290: |   53 73 68 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430292: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430294: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430295: |   6e 20 31 2e  31 2e 30
Sep 13 20:56:45.430298: | vendor id hash md5 final bytes@0x55b124e63f98 (length 16)
Sep 13 20:56:45.430300: |   fb f4 76 14  98 40 31 fa  8e 3b b6 19  80 89 b2 23
Sep 13 20:56:45.430302: | vendor id hash md5 init
Sep 13 20:56:45.430304: | vendor id hash md5 digest data-bytes@0x55b123e0d9f0 (length 55)
Sep 13 20:56:45.430306: |   53 73 68 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430308: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430309: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430311: |   6e 20 31 2e  31 2e 31
Sep 13 20:56:45.430313: | vendor id hash md5 final bytes@0x55b124e63fd8 (length 16)
Sep 13 20:56:45.430315: |   19 52 dc 91  ac 20 f6 46  fb 01 cf 42  a3 3a ee 30
Sep 13 20:56:45.430317: | vendor id hash md5 init
Sep 13 20:56:45.430320: | vendor id hash md5 digest data-bytes@0x55b123e0da28 (length 55)
Sep 13 20:56:45.430321: |   53 73 68 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430325: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430327: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430329: |   6e 20 31 2e  31 2e 32
Sep 13 20:56:45.430331: | vendor id hash md5 final bytes@0x55b124e64018 (length 16)
Sep 13 20:56:45.430333: |   e8 bf fa 64  3e 5c 8f 2c  d1 0f da 73  70 b6 eb e5
Sep 13 20:56:45.430335: | vendor id hash md5 init
Sep 13 20:56:45.430338: | vendor id hash md5 digest data-bytes@0x55b123e0da60 (length 55)
Sep 13 20:56:45.430340: |   53 73 68 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430341: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430343: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430345: |   6e 20 31 2e  32 2e 31
Sep 13 20:56:45.430347: | vendor id hash md5 final bytes@0x55b124e64058 (length 16)
Sep 13 20:56:45.430349: |   c1 11 1b 2d  ee 8c bc 3d  62 05 73 ec  57 aa b9 cb
Sep 13 20:56:45.430351: | vendor id hash md5 init
Sep 13 20:56:45.430353: | vendor id hash md5 digest data-bytes@0x55b123e0da98 (length 55)
Sep 13 20:56:45.430355: |   53 73 68 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430357: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430359: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430360: |   6e 20 31 2e  32 2e 32
Sep 13 20:56:45.430363: | vendor id hash md5 final bytes@0x55b124e64098 (length 16)
Sep 13 20:56:45.430364: |   09 ec 27 bf  bc 09 c7 58  23 cf ec bf  fe 56 5a 2e
Sep 13 20:56:45.430366: | vendor id hash md5 init
Sep 13 20:56:45.430369: | vendor id hash md5 digest data-bytes@0x55b123e0dad0 (length 55)
Sep 13 20:56:45.430371: |   53 53 48 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430372: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430374: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430376: |   6e 20 32 2e  30 2e 30
Sep 13 20:56:45.430378: | vendor id hash md5 final bytes@0x55b124e640d8 (length 16)
Sep 13 20:56:45.430380: |   7f 21 a5 96  e4 e3 18 f0  b2 f4 94 4c  23 84 cb 84
Sep 13 20:56:45.430382: | vendor id hash md5 init
Sep 13 20:56:45.430384: | vendor id hash md5 digest data-bytes@0x55b123e0db08 (length 55)
Sep 13 20:56:45.430386: |   53 53 48 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430388: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430389: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430391: |   6e 20 32 2e  31 2e 30
Sep 13 20:56:45.430394: | vendor id hash md5 final bytes@0x55b124e64118 (length 16)
Sep 13 20:56:45.430395: |   28 36 d1 fd  28 07 bc 9e  5a e3 07 86  32 04 51 ec
Sep 13 20:56:45.430397: | vendor id hash md5 init
Sep 13 20:56:45.430400: | vendor id hash md5 digest data-bytes@0x55b123e0db40 (length 55)
Sep 13 20:56:45.430402: |   53 53 48 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430403: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430405: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430406: |   6e 20 32 2e  31 2e 31
Sep 13 20:56:45.430409: | vendor id hash md5 final bytes@0x55b124e64158 (length 16)
Sep 13 20:56:45.430411: |   a6 8d e7 56  a9 c5 22 9b  ae 66 49 80  40 95 1a d5
Sep 13 20:56:45.430413: | vendor id hash md5 init
Sep 13 20:56:45.430415: | vendor id hash md5 digest data-bytes@0x55b123e0db78 (length 55)
Sep 13 20:56:45.430417: |   53 53 48 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430419: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430420: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430422: |   6e 20 32 2e  31 2e 32
Sep 13 20:56:45.430424: | vendor id hash md5 final bytes@0x55b124e64198 (length 16)
Sep 13 20:56:45.430426: |   3f 23 72 86  7e 23 7c 1c  d8 25 0a 75  55 9c ae 20
Sep 13 20:56:45.430428: | vendor id hash md5 init
Sep 13 20:56:45.430431: | vendor id hash md5 digest data-bytes@0x55b123e0dbb0 (length 55)
Sep 13 20:56:45.430432: |   53 53 48 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430436: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430438: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430439: |   6e 20 33 2e  30 2e 30
Sep 13 20:56:45.430442: | vendor id hash md5 final bytes@0x55b124e641d8 (length 16)
Sep 13 20:56:45.430444: |   0e 58 d5 77  4d f6 02 00  7d 0b 02 44  36 60 f7 eb
Sep 13 20:56:45.430445: | vendor id hash md5 init
Sep 13 20:56:45.430448: | vendor id hash md5 digest data-bytes@0x55b123e0dbe8 (length 55)
Sep 13 20:56:45.430450: |   53 53 48 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430452: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430453: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430455: |   6e 20 33 2e  30 2e 31
Sep 13 20:56:45.430457: | vendor id hash md5 final bytes@0x55b124e64218 (length 16)
Sep 13 20:56:45.430459: |   f5 ce 31 eb  c2 10 f4 43  50 cf 71 26  5b 57 38 0f
Sep 13 20:56:45.430461: | vendor id hash md5 init
Sep 13 20:56:45.430464: | vendor id hash md5 digest data-bytes@0x55b123e0dc20 (length 55)
Sep 13 20:56:45.430465: |   53 53 48 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430467: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430469: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430470: |   6e 20 34 2e  30 2e 30
Sep 13 20:56:45.430473: | vendor id hash md5 final bytes@0x55b124e64258 (length 16)
Sep 13 20:56:45.430475: |   f6 42 60 af  2e 27 42 da  dd d5 69 87  06 8a 99 a0
Sep 13 20:56:45.430476: | vendor id hash md5 init
Sep 13 20:56:45.430479: | vendor id hash md5 digest data-bytes@0x55b123e0dc58 (length 55)
Sep 13 20:56:45.430481: |   53 53 48 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430482: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430484: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430486: |   6e 20 34 2e  30 2e 31
Sep 13 20:56:45.430488: | vendor id hash md5 final bytes@0x55b124e64298 (length 16)
Sep 13 20:56:45.430490: |   7a 54 d3 bd  b3 b1 e6 d9  23 89 20 64  be 2d 98 1c
Sep 13 20:56:45.430492: | vendor id hash md5 init
Sep 13 20:56:45.430494: | vendor id hash md5 digest data-bytes@0x55b123e0dc90 (length 55)
Sep 13 20:56:45.430496: |   53 53 48 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430498: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430499: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430501: |   6e 20 34 2e  31 2e 30
Sep 13 20:56:45.430503: | vendor id hash md5 final bytes@0x55b124e642d8 (length 16)
Sep 13 20:56:45.430505: |   9a a1 f3 b4  34 72 a4 5d  5f 50 6a eb  26 0c f2 14
Sep 13 20:56:45.430507: | vendor id hash md5 init
Sep 13 20:56:45.430510: | vendor id hash md5 digest data-bytes@0x55b123e0dcc8 (length 55)
Sep 13 20:56:45.430512: |   53 53 48 20  43 6f 6d 6d  75 6e 69 63  61 74 69 6f
Sep 13 20:56:45.430513: |   6e 73 20 53  65 63 75 72  69 74 79 20  49 50 53 45
Sep 13 20:56:45.430515: |   43 20 45 78  70 72 65 73  73 20 76 65  72 73 69 6f
Sep 13 20:56:45.430516: |   6e 20 34 2e  32 2e 30
Sep 13 20:56:45.430519: | vendor id hash md5 final bytes@0x55b124e64318 (length 16)
Sep 13 20:56:45.430521: |   68 80 c7 d0  26 09 91 14  e4 86 c5 54  30 e7 ab ee
Sep 13 20:56:45.430523: | vendor id hash md5 init
Sep 13 20:56:45.430526: | vendor id hash md5 digest data-bytes@0x55b123e0dd00 (length 41)
Sep 13 20:56:45.430528: |   4c 69 6e 75  78 20 46 72  65 65 53 2f  57 41 4e 20
Sep 13 20:56:45.430529: |   32 2e 30 30  20 50 4c 55  54 4f 5f 53  45 4e 44 53
Sep 13 20:56:45.430531: |   5f 56 45 4e  44 4f 52 49  44
Sep 13 20:56:45.430534: | vendor id hash md5 final bytes@0x7ffee51a5ce0 (length 16)
Sep 13 20:56:45.430535: |   44 76 1b d7  6b 80 85 41  74 87 ee 8a  51 cf fc f3
Sep 13 20:56:45.430537: | vendor id hash md5 init
Sep 13 20:56:45.430540: | vendor id hash md5 digest data-bytes@0x55b123e0dd30 (length 53)
Sep 13 20:56:45.430542: |   4c 69 6e 75  78 20 46 72  65 65 53 2f  57 41 4e 20
Sep 13 20:56:45.430561: |   32 2e 30 30  20 58 2e 35  30 39 2d 31  2e 33 2e 31
Sep 13 20:56:45.430564: |   20 50 4c 55  54 4f 5f 53  45 4e 44 53  5f 56 45 4e
Sep 13 20:56:45.430566: |   44 4f 52 49  44
Sep 13 20:56:45.430570: | vendor id hash md5 final bytes@0x7ffee51a5ce0 (length 16)
Sep 13 20:56:45.430572: |   b7 0e 8a c3  92 b1 6e 05  48 2f c4 dc  36 10 91 68
Sep 13 20:56:45.430574: | vendor id hash md5 init
Sep 13 20:56:45.430577: | vendor id hash md5 digest data-bytes@0x55b123e0dd68 (length 58)
Sep 13 20:56:45.430579: |   4c 69 6e 75  78 20 46 72  65 65 53 2f  57 41 4e 20
Sep 13 20:56:45.430581: |   32 2e 30 30  20 58 2e 35  30 39 2d 31  2e 33 2e 31
Sep 13 20:56:45.430583: |   20 4c 44 41  50 20 50 4c  55 54 4f 5f  53 45 4e 44
Sep 13 20:56:45.430584: |   53 5f 56 45  4e 44 4f 52  49 44
Sep 13 20:56:45.430587: | vendor id hash md5 final bytes@0x7ffee51a5ce0 (length 16)
Sep 13 20:56:45.430589: |   97 1d ea 93  c3 c2 06 74  f9 ae 35 40  83 de 3e 2f
Sep 13 20:56:45.430591: | vendor id hash md5 init
Sep 13 20:56:45.430593: | vendor id hash md5 digest data-bytes@0x55b123e0ce41 (length 14)
Sep 13 20:56:45.430595: |   4f 70 65 6e  73 77 61 6e  20 32 2e 32  2e 30
Sep 13 20:56:45.430598: | vendor id hash md5 final bytes@0x7ffee51a5ce0 (length 16)
Sep 13 20:56:45.430600: |   08 72 0b ee  9e 28 95 3c  e0 8f 0a 18  b6 e2 9d da
Sep 13 20:56:45.430602: | vendor id hash md5 init
Sep 13 20:56:45.430604: | vendor id hash md5 digest data-bytes@0x55b123e0ddd0 (length 37)
Sep 13 20:56:45.430606: |   64 72 61 66  74 2d 73 74  65 6e 62 65  72 67 2d 69
Sep 13 20:56:45.430608: |   70 73 65 63  2d 6e 61 74  2d 74 72 61  76 65 72 73
Sep 13 20:56:45.430609: |   61 6c 2d 30  31
Sep 13 20:56:45.430612: | vendor id hash md5 final bytes@0x55b124e64818 (length 16)
Sep 13 20:56:45.430614: |   27 ba b5 dc  01 ea 07 60  ea 4e 31 90  ac 27 c0 d0
Sep 13 20:56:45.430616: | vendor id hash md5 init
Sep 13 20:56:45.430618: | vendor id hash md5 digest data-bytes@0x55b123e0ddf8 (length 37)
Sep 13 20:56:45.430620: |   64 72 61 66  74 2d 73 74  65 6e 62 65  72 67 2d 69
Sep 13 20:56:45.430622: |   70 73 65 63  2d 6e 61 74  2d 74 72 61  76 65 72 73
Sep 13 20:56:45.430623: |   61 6c 2d 30  32
Sep 13 20:56:45.430626: | vendor id hash md5 final bytes@0x55b124e64578 (length 16)
Sep 13 20:56:45.430628: |   61 05 c4 22  e7 68 47 e4  3f 96 84 80  12 92 ae cd
Sep 13 20:56:45.430630: | vendor id hash md5 init
Sep 13 20:56:45.430632: | vendor id hash md5 digest data-bytes@0x55b123e0ce69 (length 10)
Sep 13 20:56:45.430634: |   45 53 50 54  68 72 75 4e  41 54
Sep 13 20:56:45.430637: | vendor id hash md5 final bytes@0x55b124e64858 (length 16)
Sep 13 20:56:45.430638: |   50 76 0f 62  4c 63 e5 c5  3e ea 38 6c  68 5c a0 83
Sep 13 20:56:45.430640: | vendor id hash md5 init
Sep 13 20:56:45.430643: | vendor id hash md5 digest data-bytes@0x55b123e0de20 (length 38)
Sep 13 20:56:45.430645: |   64 72 61 66  74 2d 68 75  74 74 75 6e  65 6e 2d 69
Sep 13 20:56:45.430646: |   70 73 65 63  2d 65 73 70  2d 69 6e 2d  75 64 70 2d
Sep 13 20:56:45.430648: |   30 30 2e 74  78 74
Sep 13 20:56:45.430651: | vendor id hash md5 final bytes@0x55b124e645b8 (length 16)
Sep 13 20:56:45.430652: |   6a 74 34 c1  9d 7e 36 34  80 90 a0 23  34 c9 c8 05
Sep 13 20:56:45.430654: | vendor id hash md5 init
Sep 13 20:56:45.430657: | vendor id hash md5 digest data-bytes@0x55b123e0ce74 (length 29)
Sep 13 20:56:45.430659: |   64 72 61 66  74 2d 69 65  74 66 2d 69  70 73 65 63
Sep 13 20:56:45.430660: |   2d 6e 61 74  2d 74 2d 69  6b 65 2d 30  30
Sep 13 20:56:45.430663: | vendor id hash md5 final bytes@0x55b124e645f8 (length 16)
Sep 13 20:56:45.430665: |   44 85 15 2d  18 b6 bb cd  0b e8 a8 46  95 79 dd cc
Sep 13 20:56:45.430667: | vendor id hash md5 init
Sep 13 20:56:45.430669: | vendor id hash md5 digest data-bytes@0x55b123e0ce92 (length 29)
Sep 13 20:56:45.430671: |   64 72 61 66  74 2d 69 65  74 66 2d 69  70 73 65 63
Sep 13 20:56:45.430673: |   2d 6e 61 74  2d 74 2d 69  6b 65 2d 30  31
Sep 13 20:56:45.430676: | vendor id hash md5 final bytes@0x55b124e64898 (length 16)
Sep 13 20:56:45.430677: |   16 f6 ca 16  e4 a4 06 6d  83 82 1a 0f  0a ea a8 62
Sep 13 20:56:45.430681: | vendor id hash md5 init
Sep 13 20:56:45.430684: | vendor id hash md5 digest data-bytes@0x55b123e0ceb0 (length 29)
Sep 13 20:56:45.430686: |   64 72 61 66  74 2d 69 65  74 66 2d 69  70 73 65 63
Sep 13 20:56:45.430687: |   2d 6e 61 74  2d 74 2d 69  6b 65 2d 30  32
Sep 13 20:56:45.430690: | vendor id hash md5 final bytes@0x55b124e64638 (length 16)
Sep 13 20:56:45.430692: |   cd 60 46 43  35 df 21 f8  7c fd b2 fc  68 b6 a4 48
Sep 13 20:56:45.430694: | vendor id hash md5 init
Sep 13 20:56:45.430696: | vendor id hash md5 digest data-bytes@0x55b123e0de48 (length 30)
Sep 13 20:56:45.430698: |   64 72 61 66  74 2d 69 65  74 66 2d 69  70 73 65 63
Sep 13 20:56:45.430700: |   2d 6e 61 74  2d 74 2d 69  6b 65 2d 30  32 0a
Sep 13 20:56:45.430702: | vendor id hash md5 final bytes@0x55b124e64678 (length 16)
Sep 13 20:56:45.430704: |   90 cb 80 91  3e bb 69 6e  08 63 81 b5  ec 42 7b 1f
Sep 13 20:56:45.430706: | vendor id hash md5 init
Sep 13 20:56:45.430709: | vendor id hash md5 digest data-bytes@0x55b123e0cece (length 29)
Sep 13 20:56:45.430710: |   64 72 61 66  74 2d 69 65  74 66 2d 69  70 73 65 63
Sep 13 20:56:45.430712: |   2d 6e 61 74  2d 74 2d 69  6b 65 2d 30  33
Sep 13 20:56:45.430715: | vendor id hash md5 final bytes@0x55b124e646b8 (length 16)
Sep 13 20:56:45.430716: |   7d 94 19 a6  53 10 ca 6f  2c 17 9d 92  15 52 9d 56
Sep 13 20:56:45.430718: | vendor id hash md5 init
Sep 13 20:56:45.430721: | vendor id hash md5 digest data-bytes@0x55b123e0ceec (length 29)
Sep 13 20:56:45.430723: |   64 72 61 66  74 2d 69 65  74 66 2d 69  70 73 65 63
Sep 13 20:56:45.430724: |   2d 6e 61 74  2d 74 2d 69  6b 65 2d 30  34
Sep 13 20:56:45.430727: | vendor id hash md5 final bytes@0x55b124e646f8 (length 16)
Sep 13 20:56:45.430729: |   99 09 b6 4e  ed 93 7c 65  73 de 52 ac  e9 52 fa 6b
Sep 13 20:56:45.430731: | vendor id hash md5 init
Sep 13 20:56:45.430733: | vendor id hash md5 digest data-bytes@0x55b123e0cf0a (length 29)
Sep 13 20:56:45.430735: |   64 72 61 66  74 2d 69 65  74 66 2d 69  70 73 65 63
Sep 13 20:56:45.430737: |   2d 6e 61 74  2d 74 2d 69  6b 65 2d 30  35
Sep 13 20:56:45.430739: | vendor id hash md5 final bytes@0x55b124e64738 (length 16)
Sep 13 20:56:45.430741: |   80 d0 bb 3d  ef 54 56 5e  e8 46 45 d4  c8 5c e3 ee
Sep 13 20:56:45.430743: | vendor id hash md5 init
Sep 13 20:56:45.430745: | vendor id hash md5 digest data-bytes@0x55b123e0cf28 (length 29)
Sep 13 20:56:45.430747: |   64 72 61 66  74 2d 69 65  74 66 2d 69  70 73 65 63
Sep 13 20:56:45.430749: |   2d 6e 61 74  2d 74 2d 69  6b 65 2d 30  36
Sep 13 20:56:45.430752: | vendor id hash md5 final bytes@0x55b124e64778 (length 16)
Sep 13 20:56:45.430753: |   4d 1e 0e 13  6d ea fa 34  c4 f3 ea 9f  02 ec 72 85
Sep 13 20:56:45.430755: | vendor id hash md5 init
Sep 13 20:56:45.430758: | vendor id hash md5 digest data-bytes@0x55b123e0cf46 (length 29)
Sep 13 20:56:45.430760: |   64 72 61 66  74 2d 69 65  74 66 2d 69  70 73 65 63
Sep 13 20:56:45.430761: |   2d 6e 61 74  2d 74 2d 69  6b 65 2d 30  37
Sep 13 20:56:45.430764: | vendor id hash md5 final bytes@0x55b124e648d8 (length 16)
Sep 13 20:56:45.430766: |   43 9b 59 f8  ba 67 6c 4c  77 37 ae 22  ea b8 f5 82
Sep 13 20:56:45.430767: | vendor id hash md5 init
Sep 13 20:56:45.430770: | vendor id hash md5 digest data-bytes@0x55b123e0cf64 (length 29)
Sep 13 20:56:45.430772: |   64 72 61 66  74 2d 69 65  74 66 2d 69  70 73 65 63
Sep 13 20:56:45.430773: |   2d 6e 61 74  2d 74 2d 69  6b 65 2d 30  38
Sep 13 20:56:45.430776: | vendor id hash md5 final bytes@0x55b124e64918 (length 16)
Sep 13 20:56:45.430778: |   8f 8d 83 82  6d 24 6b 6f  c7 a8 a6 a4  28 c1 1d e8
Sep 13 20:56:45.430780: | vendor id hash md5 init
Sep 13 20:56:45.430782: | vendor id hash md5 digest data-bytes@0x55b123e0cf82 (length 26)
Sep 13 20:56:45.430784: |   64 72 61 66  74 2d 69 65  74 66 2d 69  70 73 65 63
Sep 13 20:56:45.430786: |   2d 6e 61 74  2d 74 2d 69  6b 65
Sep 13 20:56:45.430788: | vendor id hash md5 final bytes@0x55b124e64958 (length 16)
Sep 13 20:56:45.430790: |   4d f3 79 28  e9 fc 4f d1  b3 26 21 70  d5 15 c6 62
Sep 13 20:56:45.430793: | vendor id hash md5 init
Sep 13 20:56:45.430796: | vendor id hash md5 digest data-bytes@0x55b123e0cf9d (length 8)
Sep 13 20:56:45.430798: |   52 46 43 20  33 39 34 37
Sep 13 20:56:45.430801: | vendor id hash md5 final bytes@0x55b124e64998 (length 16)
Sep 13 20:56:45.430803: |   4a 13 1c 81  07 03 58 45  5c 57 28 f2  0e 95 45 2f
Sep 13 20:56:45.430805: | vendor id hash md5 init
Sep 13 20:56:45.430808: | vendor id hash md5 digest data-bytes@0x55b123e15999 (length 13)
Sep 13 20:56:45.430810: |   46 52 41 47  4d 45 4e 54  41 54 49 4f  4e
Sep 13 20:56:45.430812: | vendor id hash md5 final bytes@0x55b124e64a58 (length 16)
Sep 13 20:56:45.430814: |   40 48 b7 d5  6e bc e8 85  25 e7 de 7f  00 d6 c2 d3
Sep 13 20:56:45.430816: | vendor id hash md5 init
Sep 13 20:56:45.430819: | vendor id hash md5 digest data-bytes@0x55b123e0d04d (length 19)
Sep 13 20:56:45.430821: |   56 69 64 2d  49 6e 69 74  69 61 6c 2d  43 6f 6e 74
Sep 13 20:56:45.430822: |   61 63 74
Sep 13 20:56:45.430825: | vendor id hash md5 final bytes@0x55b124e64a98 (length 16)
Sep 13 20:56:45.430827: |   26 24 4d 38  ed db 61 b3  17 2a 36 e3  d0 cf b8 19
Sep 13 20:56:45.430828: | vendor id hash md5 init
Sep 13 20:56:45.430831: | vendor id hash md5 digest data-bytes@0x55b123e0d968 (length 32)
Sep 13 20:56:45.430833: |   4d 53 2d 4e  65 67 6f 74  69 61 74 69  6f 6e 20 44
Sep 13 20:56:45.430834: |   69 73 63 6f  76 65 72 79  20 43 61 70  61 62 6c 65
Sep 13 20:56:45.430837: | vendor id hash md5 final bytes@0x55b124e64ad8 (length 16)
Sep 13 20:56:45.430839: |   fb 1d e3 cd  f3 41 b7 ea  16 b7 e5 be  08 55 f1 20
Sep 13 20:56:45.430841: | vendor id hash md5 init
Sep 13 20:56:45.430843: | vendor id hash md5 digest data-bytes@0x55b123e0cc9e (length 17)
Sep 13 20:56:45.430845: |   49 4b 45 20  43 47 41 20  76 65 72 73  69 6f 6e 20
Sep 13 20:56:45.430847: |   31
Sep 13 20:56:45.430849: | vendor id hash md5 final bytes@0x55b124e64b18 (length 16)
Sep 13 20:56:45.430851: |   e3 a5 96 6a  76 37 9f e7  07 22 82 31  e5 ce 86 52
Sep 13 20:56:45.430853: | vendor id hash md5 init
Sep 13 20:56:45.430856: | vendor id hash md5 digest data-bytes@0x55b123e0d061 (length 14)
Sep 13 20:56:45.430857: |   4d 53 2d 4d  61 6d 69 65  45 78 69 73  74 73
Sep 13 20:56:45.430860: | vendor id hash md5 final bytes@0x55b124e64b58 (length 16)
Sep 13 20:56:45.430862: |   21 4c a4 fa  ff a7 f3 2d  67 48 e5 30  33 95 ae 83
Sep 13 20:56:45.430864: | vendor id hash md5 init
Sep 13 20:56:45.430866: | vendor id hash md5 digest data-bytes@0x55b123e010f1 (length 10)
Sep 13 20:56:45.430868: |   73 74 72 6f  6e 67 53 77  61 6e
Sep 13 20:56:45.430871: | vendor id hash md5 final bytes@0x55b124e64b98 (length 16)
Sep 13 20:56:45.430872: |   88 2f e5 6d  6f d2 0d bc  22 51 61 3b  2e be 5b eb
Sep 13 20:56:45.430874: | vendor id hash md5 init
Sep 13 20:56:45.430877: | vendor id hash md5 digest data-bytes@0x55b123e0d070 (length 16)
Sep 13 20:56:45.430879: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 30 2e 30
Sep 13 20:56:45.430881: | vendor id hash md5 final bytes@0x55b124e64c38 (length 16)
Sep 13 20:56:45.430883: |   2c e9 c9 46  a4 c8 79 bf  11 b5 0b 76  cc 56 92 cb
Sep 13 20:56:45.430885: | vendor id hash md5 init
Sep 13 20:56:45.430887: | vendor id hash md5 digest data-bytes@0x55b123e0d081 (length 16)
Sep 13 20:56:45.430889: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 30 2e 31
Sep 13 20:56:45.430892: | vendor id hash md5 final bytes@0x55b124e64c78 (length 16)
Sep 13 20:56:45.430894: |   9d bb af cf  1d b0 dd 59  5a e0 65 29  40 03 ad 3e
Sep 13 20:56:45.430896: | vendor id hash md5 init
Sep 13 20:56:45.430900: | vendor id hash md5 digest data-bytes@0x55b123e0d092 (length 16)
Sep 13 20:56:45.430902: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 30 2e 32
Sep 13 20:56:45.430905: | vendor id hash md5 final bytes@0x55b124e64cb8 (length 16)
Sep 13 20:56:45.430907: |   77 e8 ee a6  f5 56 a4 99  de 3f fe 7f  7f 95 66 1c
Sep 13 20:56:45.430909: | vendor id hash md5 init
Sep 13 20:56:45.430911: | vendor id hash md5 digest data-bytes@0x55b123e0d0a3 (length 16)
Sep 13 20:56:45.430913: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 30 2e 33
Sep 13 20:56:45.430918: | vendor id hash md5 final bytes@0x55b124e64cf8 (length 16)
Sep 13 20:56:45.430920: |   b1 81 b1 8e  11 4f c2 09  b3 c6 e2 6c  3a 80 71 8e
Sep 13 20:56:45.430921: | vendor id hash md5 init
Sep 13 20:56:45.430924: | vendor id hash md5 digest data-bytes@0x55b123e0d0b4 (length 16)
Sep 13 20:56:45.430926: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 30 2e 34
Sep 13 20:56:45.430929: | vendor id hash md5 final bytes@0x55b124e64d38 (length 16)
Sep 13 20:56:45.430930: |   1e f2 83 f8  35 49 b5 ff  96 08 b6 d6  34 f8 4d 75
Sep 13 20:56:45.430932: | vendor id hash md5 init
Sep 13 20:56:45.430935: | vendor id hash md5 digest data-bytes@0x55b123e0d0c5 (length 16)
Sep 13 20:56:45.430937: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 30 2e 35
Sep 13 20:56:45.430939: | vendor id hash md5 final bytes@0x55b124e64d78 (length 16)
Sep 13 20:56:45.430941: |   dd 18 0d 21  e5 ce 65 5a  76 8b a3 22  11 dd 8a d9
Sep 13 20:56:45.430943: | vendor id hash md5 init
Sep 13 20:56:45.430945: | vendor id hash md5 digest data-bytes@0x55b123e0d0d6 (length 16)
Sep 13 20:56:45.430947: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 30 2e 36
Sep 13 20:56:45.430950: | vendor id hash md5 final bytes@0x55b124e64db8 (length 16)
Sep 13 20:56:45.430952: |   4c 90 13 69  46 57 7b 51  91 9d 8d 9a  6b 8e 4a 9f
Sep 13 20:56:45.430954: | vendor id hash md5 init
Sep 13 20:56:45.430956: | vendor id hash md5 digest data-bytes@0x55b123e0d0e7 (length 16)
Sep 13 20:56:45.430958: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 30 2e 37
Sep 13 20:56:45.430960: | vendor id hash md5 final bytes@0x55b124e64df8 (length 16)
Sep 13 20:56:45.430962: |   ab 07 46 22  1c c8 fd 0d  52 38 f7 3a  9b 3d a5 57
Sep 13 20:56:45.430964: | vendor id hash md5 init
Sep 13 20:56:45.430967: | vendor id hash md5 digest data-bytes@0x55b123e0d0f8 (length 16)
Sep 13 20:56:45.430968: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 31 2e 30
Sep 13 20:56:45.430971: | vendor id hash md5 final bytes@0x55b124e64e38 (length 16)
Sep 13 20:56:45.430973: |   47 94 ce f6  84 34 22 98  0d 1a 3d 06  af 41 c5 cd
Sep 13 20:56:45.430975: | vendor id hash md5 init
Sep 13 20:56:45.430977: | vendor id hash md5 digest data-bytes@0x55b123e0d109 (length 16)
Sep 13 20:56:45.430979: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 31 2e 31
Sep 13 20:56:45.430982: | vendor id hash md5 final bytes@0x55b124e64e78 (length 16)
Sep 13 20:56:45.430983: |   d3 f1 c4 88  c3 68 17 5d  5f 40 a8 f5  ca 5f 5e 12
Sep 13 20:56:45.430985: | vendor id hash md5 init
Sep 13 20:56:45.430988: | vendor id hash md5 digest data-bytes@0x55b123e0d11a (length 16)
Sep 13 20:56:45.430990: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 31 2e 32
Sep 13 20:56:45.430992: | vendor id hash md5 final bytes@0x55b124e64eb8 (length 16)
Sep 13 20:56:45.430994: |   15 a1 ac e7  ee 52 fd df  ef 04 f9 28  db 2d d1 34
Sep 13 20:56:45.430996: | vendor id hash md5 init
Sep 13 20:56:45.430998: | vendor id hash md5 digest data-bytes@0x55b123e0d12b (length 16)
Sep 13 20:56:45.431000: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 31 2e 33
Sep 13 20:56:45.431003: | vendor id hash md5 final bytes@0x55b124e64ef8 (length 16)
Sep 13 20:56:45.431005: |   58 49 ab 6d  8b ea bd 6e  4d 09 e5 a3  b8 8c 08 9a
Sep 13 20:56:45.431007: | vendor id hash md5 init
Sep 13 20:56:45.431009: | vendor id hash md5 digest data-bytes@0x55b123e0d13c (length 16)
Sep 13 20:56:45.431011: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 31 2e 34
Sep 13 20:56:45.431013: | vendor id hash md5 final bytes@0x55b124e64f38 (length 16)
Sep 13 20:56:45.431015: |   31 2f 9c b1  a6 b9 0e 19  de 75 28 c9  04 ac 30 87
Sep 13 20:56:45.431017: | vendor id hash md5 init
Sep 13 20:56:45.431020: | vendor id hash md5 digest data-bytes@0x55b123e0d14d (length 16)
Sep 13 20:56:45.431021: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 31 2e 35
Sep 13 20:56:45.431024: | vendor id hash md5 final bytes@0x55b124e64f78 (length 16)
Sep 13 20:56:45.431026: |   bf 0f bf 73  06 eb b7 82  70 42 d8 93  53 98 86 e2
Sep 13 20:56:45.431028: | vendor id hash md5 init
Sep 13 20:56:45.431030: | vendor id hash md5 digest data-bytes@0x55b123e0d15e (length 16)
Sep 13 20:56:45.431034: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 31 2e 36
Sep 13 20:56:45.431036: | vendor id hash md5 final bytes@0x55b124e64fb8 (length 16)
Sep 13 20:56:45.431038: |   d1 96 83 36  8a f4 b0 ed  c2 1c cd e9  82 b1 d1 b0
Sep 13 20:56:45.431040: | vendor id hash md5 init
Sep 13 20:56:45.431043: | vendor id hash md5 digest data-bytes@0x55b123e0d16f (length 16)
Sep 13 20:56:45.431045: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 31 2e 37
Sep 13 20:56:45.431047: | vendor id hash md5 final bytes@0x55b124e64ff8 (length 16)
Sep 13 20:56:45.431049: |   ea 84 0a a4  df c9 71 2d  6c 32 b5 a1  6e b3 29 a3
Sep 13 20:56:45.431051: | vendor id hash md5 init
Sep 13 20:56:45.431054: | vendor id hash md5 digest data-bytes@0x55b123e0d180 (length 16)
Sep 13 20:56:45.431055: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 31 2e 38
Sep 13 20:56:45.431058: | vendor id hash md5 final bytes@0x55b124e65038 (length 16)
Sep 13 20:56:45.431060: |   66 a2 04 55  07 c1 19 da  78 a4 66 62  59 cd ea 48
Sep 13 20:56:45.431062: | vendor id hash md5 init
Sep 13 20:56:45.431064: | vendor id hash md5 digest data-bytes@0x55b123e0d191 (length 16)
Sep 13 20:56:45.431066: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 31 2e 39
Sep 13 20:56:45.431069: | vendor id hash md5 final bytes@0x55b124e65078 (length 16)
Sep 13 20:56:45.431070: |   78 fd d2 87  de f0 1a 3f  07 4b 53 69  ea b4 fd 1c
Sep 13 20:56:45.431072: | vendor id hash md5 init
Sep 13 20:56:45.431075: | vendor id hash md5 digest data-bytes@0x55b123e0d1a2 (length 17)
Sep 13 20:56:45.431077: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 31 2e 31
Sep 13 20:56:45.431078: |   30
Sep 13 20:56:45.431081: | vendor id hash md5 final bytes@0x55b124e650b8 (length 16)
Sep 13 20:56:45.431083: |   bf 3a 89 ae  5b ef 8e 72  d4 4d ac 8b  b8 8d 7d 5f
Sep 13 20:56:45.431085: | vendor id hash md5 init
Sep 13 20:56:45.431087: | vendor id hash md5 digest data-bytes@0x55b123e0d1b4 (length 17)
Sep 13 20:56:45.431089: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 31 2e 31
Sep 13 20:56:45.431090: |   31
Sep 13 20:56:45.431093: | vendor id hash md5 final bytes@0x55b124e650f8 (length 16)
Sep 13 20:56:45.431095: |   b7 bd 9f 2f  97 8e 32 59  a7 aa 9f 7a  13 96 ad 6c
Sep 13 20:56:45.431097: | vendor id hash md5 init
Sep 13 20:56:45.431099: | vendor id hash md5 digest data-bytes@0x55b123e0d1c6 (length 16)
Sep 13 20:56:45.431101: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 32 2e 30
Sep 13 20:56:45.431104: | vendor id hash md5 final bytes@0x55b124e65138 (length 16)
Sep 13 20:56:45.431105: |   9f 68 90 13  25 a9 72 89  43 35 30 2a  95 31 ab 9f
Sep 13 20:56:45.431107: | vendor id hash md5 init
Sep 13 20:56:45.431110: | vendor id hash md5 digest data-bytes@0x55b123e0d1d7 (length 16)
Sep 13 20:56:45.431112: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 32 2e 31
Sep 13 20:56:45.431114: | vendor id hash md5 final bytes@0x55b124e65178 (length 16)
Sep 13 20:56:45.431116: |   ba b2 53 f4  cb 10 a8 10  8a 7c 92 7c  56 c8 78 86
Sep 13 20:56:45.431118: | vendor id hash md5 init
Sep 13 20:56:45.431120: | vendor id hash md5 digest data-bytes@0x55b123e0d1e8 (length 16)
Sep 13 20:56:45.431122: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 32 2e 32
Sep 13 20:56:45.431125: | vendor id hash md5 final bytes@0x55b124e651b8 (length 16)
Sep 13 20:56:45.431127: |   2a 51 7d 0d  23 c3 7d 08  bc e7 c2 92  a0 21 7b 39
Sep 13 20:56:45.431128: | vendor id hash md5 init
Sep 13 20:56:45.431131: | vendor id hash md5 digest data-bytes@0x55b123e0d1f9 (length 16)
Sep 13 20:56:45.431133: |   73 74 72 6f  6e 67 53 77  61 6e 20 34  2e 32 2e 33
Sep 13 20:56:45.431135: | vendor id hash md5 final bytes@0x55b124e651f8 (length 16)
Sep 13 20:56:45.431137: |   2d 1f 40 61  18 fb d5 d2  84 74 79 1f  fa 00 48 8a
Sep 13 20:56:45.431139: | vendor id hash md5 init
Sep 13 20:56:45.431141: | vendor id hash md5 digest data-bytes@0x55b123e0d20a (length 16)
Sep 13 20:56:45.431143: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 38 2e 38
Sep 13 20:56:45.431146: | vendor id hash md5 final bytes@0x55b124e65238 (length 16)
Sep 13 20:56:45.431149: |   8c 4a 3b cb  72 9b 11 f7  03 d2 2a 5b  39 64 0c a8
Sep 13 20:56:45.431151: | vendor id hash md5 init
Sep 13 20:56:45.431154: | vendor id hash md5 digest data-bytes@0x55b123e0d21b (length 16)
Sep 13 20:56:45.431156: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 38 2e 37
Sep 13 20:56:45.431158: | vendor id hash md5 final bytes@0x55b124e65278 (length 16)
Sep 13 20:56:45.431160: |   3a 0d 4e 7c  a4 e4 92 ed  4d fe 47 6d  1a c6 01 8b
Sep 13 20:56:45.431162: | vendor id hash md5 init
Sep 13 20:56:45.431165: | vendor id hash md5 digest data-bytes@0x55b123e0d22c (length 16)
Sep 13 20:56:45.431167: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 38 2e 36
Sep 13 20:56:45.431169: | vendor id hash md5 final bytes@0x55b124e652b8 (length 16)
Sep 13 20:56:45.431171: |   fe 3f 49 70  6e 26 a9 fb  36 a8 7b fc  e9 ea 36 ce
Sep 13 20:56:45.431173: | vendor id hash md5 init
Sep 13 20:56:45.431175: | vendor id hash md5 digest data-bytes@0x55b123e0d23d (length 16)
Sep 13 20:56:45.431177: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 38 2e 35
Sep 13 20:56:45.431180: | vendor id hash md5 final bytes@0x55b124e652f8 (length 16)
Sep 13 20:56:45.431182: |   4c 7e fa 31  b3 9e 51 04  32 a3 17 57  0d 97 bb b9
Sep 13 20:56:45.431184: | vendor id hash md5 init
Sep 13 20:56:45.431186: | vendor id hash md5 digest data-bytes@0x55b123e0d24e (length 16)
Sep 13 20:56:45.431188: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 38 2e 34
Sep 13 20:56:45.431190: | vendor id hash md5 final bytes@0x55b124e65338 (length 16)
Sep 13 20:56:45.431192: |   76 c7 2b fd  39 84 24 dd  00 1b 86 d0  01 2f e0 61
Sep 13 20:56:45.431194: | vendor id hash md5 init
Sep 13 20:56:45.431197: | vendor id hash md5 digest data-bytes@0x55b123e0d25f (length 16)
Sep 13 20:56:45.431198: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 38 2e 33
Sep 13 20:56:45.431201: | vendor id hash md5 final bytes@0x55b124e65378 (length 16)
Sep 13 20:56:45.431203: |   fb 46 41 ad  0e eb 2a 34  49 1d 15 f4  ef f5 10 63
Sep 13 20:56:45.431205: | vendor id hash md5 init
Sep 13 20:56:45.431207: | vendor id hash md5 digest data-bytes@0x55b123e0d270 (length 16)
Sep 13 20:56:45.431209: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 38 2e 32
Sep 13 20:56:45.431212: | vendor id hash md5 final bytes@0x55b124e653b8 (length 16)
Sep 13 20:56:45.431213: |   29 99 32 27  7b 7d fe 38  2c e2 34 65  33 3a 7d 23
Sep 13 20:56:45.431215: | vendor id hash md5 init
Sep 13 20:56:45.431218: | vendor id hash md5 digest data-bytes@0x55b123e0d281 (length 16)
Sep 13 20:56:45.431220: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 38 2e 31
Sep 13 20:56:45.431222: | vendor id hash md5 final bytes@0x55b124e653f8 (length 16)
Sep 13 20:56:45.431224: |   e3 7f 2d 5b  a8 9a 62 cd  20 2e e2 7d  ac 06 c8 a8
Sep 13 20:56:45.431226: | vendor id hash md5 init
Sep 13 20:56:45.431228: | vendor id hash md5 digest data-bytes@0x55b123e0d292 (length 16)
Sep 13 20:56:45.431230: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 38 2e 30
Sep 13 20:56:45.431233: | vendor id hash md5 final bytes@0x55b124e65438 (length 16)
Sep 13 20:56:45.431235: |   32 f0 e9 b9  c0 6d fe 8c  9a d5 59 9a  63 69 71 a1
Sep 13 20:56:45.431237: | vendor id hash md5 init
Sep 13 20:56:45.431239: | vendor id hash md5 digest data-bytes@0x55b123e0d2a3 (length 16)
Sep 13 20:56:45.431241: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 37 2e 33
Sep 13 20:56:45.431243: | vendor id hash md5 final bytes@0x55b124e65478 (length 16)
Sep 13 20:56:45.431245: |   7f 50 cc 4e  bf 04 c2 d9  da 73 ab fd  69 b7 7a a2
Sep 13 20:56:45.431247: | vendor id hash md5 init
Sep 13 20:56:45.431250: | vendor id hash md5 digest data-bytes@0x55b123e0d2b4 (length 16)
Sep 13 20:56:45.431251: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 37 2e 32
Sep 13 20:56:45.431254: | vendor id hash md5 final bytes@0x55b124e654b8 (length 16)
Sep 13 20:56:45.431256: |   a1 94 e2 aa  dd d0 ba fb  95 25 3d d9  6d c7 33 eb
Sep 13 20:56:45.431258: | vendor id hash md5 init
Sep 13 20:56:45.431260: | vendor id hash md5 digest data-bytes@0x55b123e0d2c5 (length 16)
Sep 13 20:56:45.431262: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 37 2e 31
Sep 13 20:56:45.431267: | vendor id hash md5 final bytes@0x55b124e654f8 (length 16)
Sep 13 20:56:45.431269: |   81 34 87 85  82 12 17 85  ba 65 ea 34  5d 6b a7 24
Sep 13 20:56:45.431270: | vendor id hash md5 init
Sep 13 20:56:45.431273: | vendor id hash md5 digest data-bytes@0x55b123e0d2d6 (length 16)
Sep 13 20:56:45.431275: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 37 2e 30
Sep 13 20:56:45.431277: | vendor id hash md5 final bytes@0x55b124e65538 (length 16)
Sep 13 20:56:45.431279: |   07 fa 12 8e  47 54 f9 44  7b 1d d4 63  74 ee f3 60
Sep 13 20:56:45.431281: | vendor id hash md5 init
Sep 13 20:56:45.431284: | vendor id hash md5 digest data-bytes@0x55b123e0d2e7 (length 16)
Sep 13 20:56:45.431285: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 36 2e 34
Sep 13 20:56:45.431288: | vendor id hash md5 final bytes@0x55b124e65578 (length 16)
Sep 13 20:56:45.431290: |   b9 27 f9 52  19 a0 fe 36  00 db a3 c1  18 2a e5 5f
Sep 13 20:56:45.431292: | vendor id hash md5 init
Sep 13 20:56:45.431294: | vendor id hash md5 digest data-bytes@0x55b123e0d2f8 (length 16)
Sep 13 20:56:45.431296: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 36 2e 33
Sep 13 20:56:45.431299: | vendor id hash md5 final bytes@0x55b124e655b8 (length 16)
Sep 13 20:56:45.431300: |   b2 86 0e 78  37 f7 11 be  f3 d0 ee b1  06 87 2d ed
Sep 13 20:56:45.431302: | vendor id hash md5 init
Sep 13 20:56:45.431305: | vendor id hash md5 digest data-bytes@0x55b123e0d309 (length 16)
Sep 13 20:56:45.431307: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 36 2e 32
Sep 13 20:56:45.431309: | vendor id hash md5 final bytes@0x55b124e655f8 (length 16)
Sep 13 20:56:45.431311: |   5b 1c d6 fe  7d 05 0e da  6c 93 87 1c  10 7d b3 d2
Sep 13 20:56:45.431313: | vendor id hash md5 init
Sep 13 20:56:45.431315: | vendor id hash md5 digest data-bytes@0x55b123e0d31a (length 16)
Sep 13 20:56:45.431317: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 36 2e 31
Sep 13 20:56:45.431320: | vendor id hash md5 final bytes@0x55b124e65638 (length 16)
Sep 13 20:56:45.431322: |   66 af bc 12  bb fe 6c e1  08 b1 f6 9f  4b c9 17 b7
Sep 13 20:56:45.431324: | vendor id hash md5 init
Sep 13 20:56:45.431326: | vendor id hash md5 digest data-bytes@0x55b123e0d32b (length 16)
Sep 13 20:56:45.431328: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 36 2e 30
Sep 13 20:56:45.431330: | vendor id hash md5 final bytes@0x55b124e65678 (length 16)
Sep 13 20:56:45.431332: |   3f 32 66 49  9f fd bd 85  95 0e 70 22  98 06 28 44
Sep 13 20:56:45.431334: | vendor id hash md5 init
Sep 13 20:56:45.431337: | vendor id hash md5 digest data-bytes@0x55b123e0d33c (length 16)
Sep 13 20:56:45.431339: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 35 2e 37
Sep 13 20:56:45.431341: | vendor id hash md5 final bytes@0x55b124e656b8 (length 16)
Sep 13 20:56:45.431343: |   1f 44 42 29  6b 83 d7 e3  3a 8b 45 20  9b a0 e5 90
Sep 13 20:56:45.431345: | vendor id hash md5 init
Sep 13 20:56:45.431347: | vendor id hash md5 digest data-bytes@0x55b123e0d34d (length 16)
Sep 13 20:56:45.431349: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 35 2e 36
Sep 13 20:56:45.431352: | vendor id hash md5 final bytes@0x55b124e656f8 (length 16)
Sep 13 20:56:45.431354: |   3c 5e ba 3d  85 64 92 8e  32 ae 43 c3  d9 92 4d ee
Sep 13 20:56:45.431355: | vendor id hash md5 init
Sep 13 20:56:45.431358: | vendor id hash md5 digest data-bytes@0x55b123e0d35e (length 16)
Sep 13 20:56:45.431360: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 35 2e 35
Sep 13 20:56:45.431362: | vendor id hash md5 final bytes@0x55b124e65738 (length 16)
Sep 13 20:56:45.431364: |   3f 26 7e d6  21 ad a7 ee  6c 7d 88 93  cc b0 b1 4b
Sep 13 20:56:45.431366: | vendor id hash md5 init
Sep 13 20:56:45.431369: | vendor id hash md5 digest data-bytes@0x55b123e0d36f (length 16)
Sep 13 20:56:45.431370: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 35 2e 34
Sep 13 20:56:45.431373: | vendor id hash md5 final bytes@0x55b124e65778 (length 16)
Sep 13 20:56:45.431375: |   7a 6b f5 b7  df 89 64 2a  75 a7 8e f7  d6 57 c1 c0
Sep 13 20:56:45.431377: | vendor id hash md5 init
Sep 13 20:56:45.431379: | vendor id hash md5 digest data-bytes@0x55b123e0d380 (length 16)
Sep 13 20:56:45.431383: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 35 2e 33
Sep 13 20:56:45.431386: | vendor id hash md5 final bytes@0x55b124e657b8 (length 16)
Sep 13 20:56:45.431388: |   df 5b 1f 0f  1d 56 79 d9  f8 51 2b 16  c5 5a 60 65
Sep 13 20:56:45.431390: | vendor id hash md5 init
Sep 13 20:56:45.431392: | vendor id hash md5 digest data-bytes@0x55b123e0d391 (length 16)
Sep 13 20:56:45.431394: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 35 2e 32
Sep 13 20:56:45.431396: | vendor id hash md5 final bytes@0x55b124e657f8 (length 16)
Sep 13 20:56:45.431398: |   86 1c e5 eb  72 16 4b 19  0e 9e 62 9a  31 cf 49 01
Sep 13 20:56:45.431400: | vendor id hash md5 init
Sep 13 20:56:45.431403: | vendor id hash md5 digest data-bytes@0x55b123e0d3a2 (length 16)
Sep 13 20:56:45.431404: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 35 2e 31
Sep 13 20:56:45.431407: | vendor id hash md5 final bytes@0x55b124e65838 (length 16)
Sep 13 20:56:45.431409: |   9a 4a 46 48  f6 0f 8e da  7c fc bf e2  71 ee 5b 7d
Sep 13 20:56:45.431411: | vendor id hash md5 init
Sep 13 20:56:45.431413: | vendor id hash md5 digest data-bytes@0x55b123e0d3b3 (length 16)
Sep 13 20:56:45.431415: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 35 2e 30
Sep 13 20:56:45.431418: | vendor id hash md5 final bytes@0x55b124e65878 (length 16)
Sep 13 20:56:45.431419: |   9e b3 d9 07  ed 7a da 4e  3c bc ac b9  17 ab c8 e4
Sep 13 20:56:45.431421: | vendor id hash md5 init
Sep 13 20:56:45.431424: | vendor id hash md5 digest data-bytes@0x55b123e0d3c4 (length 16)
Sep 13 20:56:45.431426: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 34 2e 34
Sep 13 20:56:45.431428: | vendor id hash md5 final bytes@0x55b124e658b8 (length 16)
Sep 13 20:56:45.431430: |   48 5a 70 36  1b 44 33 b3  1d ea 1c 6b  e0 df 24 3e
Sep 13 20:56:45.431432: | vendor id hash md5 init
Sep 13 20:56:45.431434: | vendor id hash md5 digest data-bytes@0x55b123e0d3d5 (length 16)
Sep 13 20:56:45.431436: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 34 2e 33
Sep 13 20:56:45.431439: | vendor id hash md5 final bytes@0x55b124e658f8 (length 16)
Sep 13 20:56:45.431441: |   98 2b 7a 06  3a 33 c1 43  a8 ea dc 88  24 9f 6b cc
Sep 13 20:56:45.431442: | vendor id hash md5 init
Sep 13 20:56:45.431445: | vendor id hash md5 digest data-bytes@0x55b123e0d3e6 (length 16)
Sep 13 20:56:45.431447: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 34 2e 32
Sep 13 20:56:45.431449: | vendor id hash md5 final bytes@0x55b124e65938 (length 16)
Sep 13 20:56:45.431451: |   e7 a3 fd 0c  6d 77 1a 8f  1b 8a 86 a4  16 9c 9e a4
Sep 13 20:56:45.431453: | vendor id hash md5 init
Sep 13 20:56:45.431456: | vendor id hash md5 digest data-bytes@0x55b123e0d3f7 (length 16)
Sep 13 20:56:45.431458: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 34 2e 31
Sep 13 20:56:45.431460: | vendor id hash md5 final bytes@0x55b124e65978 (length 16)
Sep 13 20:56:45.431462: |   75 b0 65 3c  b2 81 eb 26  d3 1e de 38  c8 e1 e2 28
Sep 13 20:56:45.431464: | vendor id hash md5 init
Sep 13 20:56:45.431466: | vendor id hash md5 digest data-bytes@0x55b123e0d408 (length 16)
Sep 13 20:56:45.431468: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 34 2e 30
Sep 13 20:56:45.431471: | vendor id hash md5 final bytes@0x55b124e659b8 (length 16)
Sep 13 20:56:45.431472: |   e8 29 c8 81  49 ba b3 c0  ce e8 5d a6  0e 18 ae 9b
Sep 13 20:56:45.431474: | vendor id hash md5 init
Sep 13 20:56:45.431477: | vendor id hash md5 digest data-bytes@0x55b123e0d419 (length 16)
Sep 13 20:56:45.431479: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 33 2e 32
Sep 13 20:56:45.431481: | vendor id hash md5 final bytes@0x55b124e659f8 (length 16)
Sep 13 20:56:45.431483: |   42 a4 83 4c  92 ab 9a 77  77 06 3a fa  25 4b cb 69
Sep 13 20:56:45.431485: | vendor id hash md5 init
Sep 13 20:56:45.431487: | vendor id hash md5 digest data-bytes@0x55b123e0d42a (length 16)
Sep 13 20:56:45.431489: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 33 2e 31
Sep 13 20:56:45.431492: | vendor id hash md5 final bytes@0x55b124e65a38 (length 16)
Sep 13 20:56:45.431494: |   f6 97 c1 af  cc 2e c8 dd  cd f9 9d c7  af 03 a6 7f
Sep 13 20:56:45.431497: | vendor id hash md5 init
Sep 13 20:56:45.431500: | vendor id hash md5 digest data-bytes@0x55b123e0d43b (length 16)
Sep 13 20:56:45.431502: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 33 2e 30
Sep 13 20:56:45.431504: | vendor id hash md5 final bytes@0x55b124e65a78 (length 16)
Sep 13 20:56:45.431506: |   b8 f9 2b 2f  a2 d3 fe 5f  e1 58 34 4b  da 1c c6 ae
Sep 13 20:56:45.431508: | vendor id hash md5 init
Sep 13 20:56:45.431511: | vendor id hash md5 digest data-bytes@0x55b123e0d44c (length 16)
Sep 13 20:56:45.431512: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 32 2e 32
Sep 13 20:56:45.431515: | vendor id hash md5 final bytes@0x55b124e65ab8 (length 16)
Sep 13 20:56:45.431517: |   99 dc 7c c8  23 37 6b 3b  33 d0 43 57  89 6a e0 7b
Sep 13 20:56:45.431519: | vendor id hash md5 init
Sep 13 20:56:45.431521: | vendor id hash md5 digest data-bytes@0x55b123e0d45d (length 16)
Sep 13 20:56:45.431523: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 32 2e 31
Sep 13 20:56:45.431526: | vendor id hash md5 final bytes@0x55b124e65af8 (length 16)
Sep 13 20:56:45.431527: |   d9 11 8b 1e  9d e5 ef ce  d9 cc 9d 88  3f 21 68 ff
Sep 13 20:56:45.431529: | vendor id hash md5 init
Sep 13 20:56:45.431532: | vendor id hash md5 digest data-bytes@0x55b123e0d46e (length 16)
Sep 13 20:56:45.431534: |   73 74 72 6f  6e 67 53 77  61 6e 20 32  2e 32 2e 30
Sep 13 20:56:45.431536: | vendor id hash md5 final bytes@0x55b124e65b38 (length 16)
Sep 13 20:56:45.431538: |   85 b6 cb ec  48 0d 5c 8c  d9 88 2c 82  5a c2 c2 44
Sep 13 20:56:45.431540: | vendor id hash md5 init
Sep 13 20:56:45.431555: | vendor id hash md5 digest data-bytes@0x55b123e15999 (length 13)
Sep 13 20:56:45.431557: |   46 52 41 47  4d 45 4e 54  41 54 49 4f  4e
Sep 13 20:56:45.431560: | vendor id hash md5 final bytes@0x55b124e65b78 (length 16)
Sep 13 20:56:45.431562: |   40 48 b7 d5  6e bc e8 85  25 e7 de 7f  00 d6 c2 d3
Sep 13 20:56:45.431568: | global one-shot timer EVENT_CHECK_CRLS initialized
Sep 13 20:56:45.431580: systemd watchdog for ipsec service configured with timeout of 200000000 usecs
Sep 13 20:56:45.431582: watchdog: sending probes every 100 secs
Sep 13 20:56:45.431584: | pluto_sd: executing action action: start(2), status 0
Sep 13 20:56:45.431620: | global periodic timer EVENT_SD_WATCHDOG enabled with interval of 100 seconds
Sep 13 20:56:45.431625: | Setting up events, loop start
Sep 13 20:56:45.431628: | add_fd_read_event_handler: newref PLUTO_CTL_FD-pe@0x55b124e63b08
Sep 13 20:56:45.431630: | libevent_malloc: newref ptr-libevent@0x55b124e65bf8 size 136
Sep 13 20:56:45.431632: | libevent_malloc: newref ptr-libevent@0x55b124e647c8 size 24
Sep 13 20:56:45.431636: | libevent_realloc: newref ptr-libevent@0x55b124e65cb8 size 256
Sep 13 20:56:45.431638: | libevent_malloc: newref ptr-libevent@0x55b124e65bb8 size 16
Sep 13 20:56:45.431640: | libevent_realloc: newref ptr-libevent@0x55b124e65ec8 size 144
Sep 13 20:56:45.431645: | libevent_malloc: newref ptr-libevent@0x55b124e65f88 size 152
Sep 13 20:56:45.431648: | libevent_malloc: newref ptr-libevent@0x55b124e64be8 size 24
Sep 13 20:56:45.431651: | signal event handler PLUTO_SIGCHLD installed
Sep 13 20:56:45.431653: | libevent_malloc: newref ptr-libevent@0x55b124e65de8 size 16
Sep 13 20:56:45.431655: | libevent_malloc: newref ptr-libevent@0x55b124e66058 size 152
Sep 13 20:56:45.431657: | signal event handler PLUTO_SIGTERM installed
Sep 13 20:56:45.431659: | libevent_malloc: newref ptr-libevent@0x55b124e65e28 size 16
Sep 13 20:56:45.431661: | libevent_malloc: newref ptr-libevent@0x55b124e66128 size 152
Sep 13 20:56:45.431663: | signal event handler PLUTO_SIGHUP installed
Sep 13 20:56:45.431895: | created addconn helper (pid:20326) using fork+execve
Sep 13 20:56:45.431911: | forked child 20326
Sep 13 20:56:45.431922: seccomp security not supported
Sep 13 20:56:45.432772: | newref fdt@0x55b124e66288(0->1) (in whack_handle_cb() at rcv_whack.c:625)
Sep 13 20:56:45.432783: | fd_accept: new fd-fd@0x55b124e66288 (in whack_handle_cb() at rcv_whack.c:625)
Sep 13 20:56:45.432804: | FOR_EACH_CONNECTION_... in conn_by_name
Sep 13 20:56:45.432815: | FOR_EACH_CONNECTION_... in foreach_connection_by_alias
Sep 13 20:56:45.432817: | FOR_EACH_CONNECTION_... in conn_by_name
Sep 13 20:56:45.432819: | FOR_EACH_CONNECTION_... in foreach_connection_by_alias
Sep 13 20:56:45.432822: | FOR_EACH_CONNECTION_... in conn_by_name
Sep 13 20:56:45.432829: | Added new connection ikev2-cert with policy RSASIG+ECDSA+ENCRYPT+TUNNEL+DONT_REKEY+IKEV2_ALLOW+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG_ALLOW+ESN_NO+RSASIG_v1_5
Sep 13 20:56:45.432839: | ike (phase1) algorithm values: 3DES_CBC-HMAC_SHA1-MODP1024
Sep 13 20:56:45.432842: | from whack: got --esp=aes_gcm-null,aes128-sha1,aes256-sha1,aes128-sha2,aes256-sha2,3des-sha1
Sep 13 20:56:45.432874: | ESP/AH string values: AES_GCM_16-NONE, AES_CBC_128-HMAC_SHA1_96, AES_CBC_256-HMAC_SHA1_96, AES_CBC_128-HMAC_SHA2_256_128, AES_CBC_256-HMAC_SHA2_256_128, 3DES_CBC-HMAC_SHA1_96
Sep 13 20:56:45.434509: | loading left certificate '192.168.0.136' pubkey
Sep 13 20:56:45.434818: | get_pluto_gn_from_nss_cert: allocated pluto_gn 0x55b124e68c08
Sep 13 20:56:45.434825: | get_pluto_gn_from_nss_cert: allocated pluto_gn 0x55b124e68c58
Sep 13 20:56:45.434971: | unreference key: 0x55b124e69b98 CN=192.168.0.136, O=IKEv2 VPN cnt 1--
Sep 13 20:56:45.435019: | preload cert/secret for connection: 192.168.0.136
Sep 13 20:56:45.435063: | adding RSA secret for certificate: 192.168.0.136
Sep 13 20:56:45.435068: | extracting the RSA private key for 192.168.0.136
Sep 13 20:56:45.435422: | certs and keys locked by 'lsw_add_rsa_secret'
Sep 13 20:56:45.435425: | certs and keys unlocked by 'lsw_add_rsa_secret'
Sep 13 20:56:45.435430: | spent 0.403 milliseconds in load_nss_cert_secret() loading private key 192.168.0.136
Sep 13 20:56:45.435433: | counting wild cards for @192.168.0.136 is 0
Sep 13 20:56:45.435436: | counting wild cards for @user1.org is 0
Sep 13 20:56:45.435440: | subnet from address 192.168.0.136 (in default_end() at connections.c:378)
Sep 13 20:56:45.435444: | subnet from address 192.168.0.1 (in default_end() at connections.c:378)
Sep 13 20:56:45.435447: | based upon policy narrowing=yes, the connection is a template.
Sep 13 20:56:45.435450: added connection description "ikev2-cert"
Sep 13 20:56:45.435471: | ike_life: 3600s; ipsec_life: 28800s; rekey_margin: 540s; rekey_fuzz: 100%; keyingtries: 0; replay_window: 32; policy: RSASIG+ECDSA+ENCRYPT+TUNNEL+DONT_REKEY+IKEV2_ALLOW+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG_ALLOW+ESN_NO+RSASIG_v1_5
Sep 13 20:56:45.435479: | 192.168.0.136[@192.168.0.136]---192.168.0.2...192.168.0.1<192.168.0.1>[@user1.org]
Sep 13 20:56:45.435483: | delref fdp@0x55b124e66288(1->0) (in whack_handle_cb() at rcv_whack.c:646)
Sep 13 20:56:45.435488: | freeref fd-fd@0x55b124e66288 (in whack_handle_cb() at rcv_whack.c:646)
Sep 13 20:56:45.435492: | spent 2.73 milliseconds in whack
Sep 13 20:56:45.435604: | newref fdt@0x55b124e66288(0->1) (in whack_handle_cb() at rcv_whack.c:625)
Sep 13 20:56:45.435614: | fd_accept: new fd-fd@0x55b124e66288 (in whack_handle_cb() at rcv_whack.c:625)
Sep 13 20:56:45.435634: | pluto_sd: executing action action: reloading(4), status 0
Sep 13 20:56:45.435665: listening for IKE messages
Sep 13 20:56:45.435692: | Inspecting interface lo 
Sep 13 20:56:45.435699: | found lo with address 127.0.0.1
Sep 13 20:56:45.435701: | Inspecting interface ens33 
Sep 13 20:56:45.435704: | found ens33 with address 192.168.0.136
Sep 13 20:56:45.435722: | cannot offload to ens33 because SIOCETHTOOL ETHTOOL_GSSET_INFO failed: Operation not supported
Sep 13 20:56:45.435726: Kernel does not support NIC esp-hw-offload (ETHTOOL_GSSET_INFO failed)
Sep 13 20:56:45.435730: adding interface ens33/ens33 (esp-hw-offload not supported by kernel) 192.168.0.136:500
Sep 13 20:56:45.435768: | NAT-Traversal: Trying sockopt style NAT-T
Sep 13 20:56:45.435774: | NAT-Traversal: ESPINUDP(2) setup succeeded for sockopt style NAT-T family IPv4
Sep 13 20:56:45.435778: adding interface ens33/ens33 192.168.0.136:4500
Sep 13 20:56:45.435787: adding interface lo/lo (esp-hw-offload not supported by kernel) 127.0.0.1:500
Sep 13 20:56:45.435798: | NAT-Traversal: Trying sockopt style NAT-T
Sep 13 20:56:45.435801: | NAT-Traversal: ESPINUDP(2) setup succeeded for sockopt style NAT-T family IPv4
Sep 13 20:56:45.435804: adding interface lo/lo 127.0.0.1:4500
Sep 13 20:56:45.435827: | found lo with address 0000:0000:0000:0000:0000:0000:0000:0001
Sep 13 20:56:45.435834: | sorting 1 interfaces
Sep 13 20:56:45.435845: adding interface lo/lo (esp-hw-offload not supported by kernel) [::1]:500
Sep 13 20:56:45.435874: | FOR_EACH_UNORIENTED_CONNECTION_... in check_orientations
Sep 13 20:56:45.435882: | connect_to_host_pair: 192.168.0.136:500 192.168.0.1:500 -> hp@(nil): none
Sep 13 20:56:45.435885: | new hp@0x55b124e67d98
Sep 13 20:56:45.435893: | add_fd_read_event_handler: newref ethX-pe@0x55b124e67e38
Sep 13 20:56:45.435896: | libevent_malloc: newref ptr-libevent@0x55b124e67ea8 size 136
Sep 13 20:56:45.435898: | libevent_malloc: newref ptr-libevent@0x55b124e6a618 size 24
Sep 13 20:56:45.435903: | setup callback for interface lo [::1]:500 fd 21
Sep 13 20:56:45.435905: | add_fd_read_event_handler: newref ethX-pe@0x55b124e67f68
Sep 13 20:56:45.435907: | libevent_malloc: newref ptr-libevent@0x55b124e67fd8 size 136
Sep 13 20:56:45.435909: | libevent_malloc: newref ptr-libevent@0x55b124e68098 size 24
Sep 13 20:56:45.435912: | setup callback for interface lo 127.0.0.1:4500 fd 20
Sep 13 20:56:45.435914: | add_fd_read_event_handler: newref ethX-pe@0x55b124e680e8
Sep 13 20:56:45.435916: | libevent_malloc: newref ptr-libevent@0x55b124e6ae18 size 136
Sep 13 20:56:45.435918: | libevent_malloc: newref ptr-libevent@0x55b124e68158 size 24
Sep 13 20:56:45.435921: | setup callback for interface lo 127.0.0.1:500 fd 19
Sep 13 20:56:45.435923: | add_fd_read_event_handler: newref ethX-pe@0x55b124e6aed8
Sep 13 20:56:45.435925: | libevent_malloc: newref ptr-libevent@0x55b124e6af48 size 136
Sep 13 20:56:45.435927: | libevent_malloc: newref ptr-libevent@0x55b124e681a8 size 24
Sep 13 20:56:45.435930: | setup callback for interface ens33 192.168.0.136:4500 fd 18
Sep 13 20:56:45.435932: | add_fd_read_event_handler: newref ethX-pe@0x55b124e6b008
Sep 13 20:56:45.435934: | libevent_malloc: newref ptr-libevent@0x55b124e6b078 size 136
Sep 13 20:56:45.435935: | libevent_malloc: newref ptr-libevent@0x55b124e6b138 size 24
Sep 13 20:56:45.435938: | setup callback for interface ens33 192.168.0.136:500 fd 17
Sep 13 20:56:45.436713: | no stale xfrmi interface 'ipsec1' found
Sep 13 20:56:45.436723: | certs and keys locked by 'free_preshared_secrets'
Sep 13 20:56:45.436726: forgetting secrets
Sep 13 20:56:45.436746: | certs and keys unlocked by 'free_preshared_secrets'
Sep 13 20:56:45.436760: loading secrets from "/etc/ipsec.secrets"
Sep 13 20:56:45.436766: | id type added to secret(0x55b124e6ab88) PKK_PSK: %any
Sep 13 20:56:45.436769: | id type added to secret(0x55b124e6ab88) PKK_PSK: %any
Sep 13 20:56:45.436771: WARNING: using a weak secret (PSK)
Sep 13 20:56:45.436775: | Processing PSK at line 1: passed
Sep 13 20:56:45.436776: | certs and keys locked by 'process_secret'
Sep 13 20:56:45.436778: | certs and keys unlocked by 'process_secret'
Sep 13 20:56:45.436782: | pluto_sd: executing action action: ready(5), status 0
Sep 13 20:56:45.436806: | delref fdp@0x55b124e66288(1->0) (in whack_handle_cb() at rcv_whack.c:646)
Sep 13 20:56:45.436824: | freeref fd-fd@0x55b124e66288 (in whack_handle_cb() at rcv_whack.c:646)
Sep 13 20:56:45.436831: | spent 0.496 milliseconds in whack
Sep 13 20:56:45.436942: | processing signal PLUTO_SIGCHLD
Sep 13 20:56:45.436957: | waitpid returned pid 20326 (exited with status 0)
Sep 13 20:56:45.436961: | reaped addconn helper child (status 0)
Sep 13 20:56:45.436965: | waitpid returned ECHILD (no child processes left)
Sep 13 20:56:45.436968: | spent 0.0149 milliseconds in signal handler PLUTO_SIGCHLD
Sep 13 20:56:51.564926: | spent 0.00423 milliseconds in comm_handle_cb() calling check_incoming_msg_errqueue()
Sep 13 20:56:51.564994: | *received 244 bytes from 192.168.0.1:500 on ens33 (192.168.0.136:500)
Sep 13 20:56:51.564999: |   dc 3a 94 c4  30 44 5b 90  00 00 00 00  00 00 00 00
Sep 13 20:56:51.565007: |   21 20 22 08  00 00 00 00  00 00 00 f4  22 00 00 2c
Sep 13 20:56:51.565009: |   00 00 00 28  01 01 00 04  03 00 00 08  01 00 00 03
Sep 13 20:56:51.565011: |   03 00 00 08  03 00 00 02  03 00 00 08  02 00 00 02
Sep 13 20:56:51.565013: |   00 00 00 08  04 00 00 02  28 00 00 88  00 02 00 00
Sep 13 20:56:51.565014: |   2d b7 9c 94  08 5e c6 b5  d7 67 08 3d  fb 43 9b bb
Sep 13 20:56:51.565016: |   2c 9a a3 1e  8f 40 a8 80  8a 72 eb 55  33 71 24 fa
Sep 13 20:56:51.565018: |   d5 43 82 11  fb a9 8a 74  d9 c2 07 b6  54 82 79 b5
Sep 13 20:56:51.565019: |   22 cc 13 0a  a3 ae 5e 6d  98 f0 00 fe  46 85 44 1c
Sep 13 20:56:51.565021: |   0d a1 41 5e  56 f6 89 b3  96 3c 4b 4d  17 bf cd e6
Sep 13 20:56:51.565023: |   de d6 71 d6  58 9f 4c 4e  2e 8d f4 41  29 0c 55 b8
Sep 13 20:56:51.565024: |   24 c4 20 74  a9 39 e3 8e  ab 5b bd 7e  02 05 89 2f
Sep 13 20:56:51.565026: |   6a c2 ce 93  f8 96 dc e1  34 08 f5 f8  e1 49 35 49
Sep 13 20:56:51.565027: |   00 00 00 24  cf b0 a3 2e  27 3c 52 27  bc 03 16 78
Sep 13 20:56:51.565029: |   44 e1 bf 3e  1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68
Sep 13 20:56:51.565031: |   b0 76 76 a2
Sep 13 20:56:51.565036: | start processing: from 192.168.0.1:500 (in process_md() at demux.c:379)
Sep 13 20:56:51.565040: | **parse ISAKMP Message:
Sep 13 20:56:51.565044: |    initiator cookie: dc 3a 94 c4  30 44 5b 90
Sep 13 20:56:51.565047: |    responder cookie: 00 00 00 00  00 00 00 00
Sep 13 20:56:51.565049: |    next payload type: ISAKMP_NEXT_v2SA (0x21)
Sep 13 20:56:51.565051: |    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996) (0x20)
Sep 13 20:56:51.565053: |    exchange type: ISAKMP_v2_IKE_SA_INIT (0x22)
Sep 13 20:56:51.565055: |    flags: ISAKMP_FLAG_v2_IKE_INIT (0x8)
Sep 13 20:56:51.565058: |    Message ID: 0 (00 00 00 00)
Sep 13 20:56:51.565060: |    length: 244 (00 00 00 f4)
Sep 13 20:56:51.565062: |  processing version=2.0 packet with exchange type=ISAKMP_v2_IKE_SA_INIT (34)
Sep 13 20:56:51.565065: | I am the IKE SA Original Responder receiving an IKEv2 IKE_SA_INIT request 
Sep 13 20:56:51.565068: | State DB: IKEv2 state not found (find_v2_ike_sa_by_initiator_spi)
Sep 13 20:56:51.565071: | Now let's proceed with payload (ISAKMP_NEXT_v2SA)
Sep 13 20:56:51.565073: | ***parse IKEv2 Security Association Payload:
Sep 13 20:56:51.565075: |    next payload type: ISAKMP_NEXT_v2KE (0x22)
Sep 13 20:56:51.565077: |    flags: none (0x0)
Sep 13 20:56:51.565079: |    length: 44 (00 2c)
Sep 13 20:56:51.565081: | processing payload: ISAKMP_NEXT_v2SA (len=40)
Sep 13 20:56:51.565083: | Now let's proceed with payload (ISAKMP_NEXT_v2KE)
Sep 13 20:56:51.565085: | ***parse IKEv2 Key Exchange Payload:
Sep 13 20:56:51.565087: |    next payload type: ISAKMP_NEXT_v2Ni (0x28)
Sep 13 20:56:51.565089: |    flags: none (0x0)
Sep 13 20:56:51.565091: |    length: 136 (00 88)
Sep 13 20:56:51.565092: |    DH group: OAKLEY_GROUP_MODP1024 (0x2)
Sep 13 20:56:51.565094: | processing payload: ISAKMP_NEXT_v2KE (len=128)
Sep 13 20:56:51.565096: | Now let's proceed with payload (ISAKMP_NEXT_v2Ni)
Sep 13 20:56:51.565098: | ***parse IKEv2 Nonce Payload:
Sep 13 20:56:51.565100: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.565101: |    flags: none (0x0)
Sep 13 20:56:51.565103: |    length: 36 (00 24)
Sep 13 20:56:51.565105: | processing payload: ISAKMP_NEXT_v2Ni (len=32)
Sep 13 20:56:51.565107: | DDOS disabled and no cookie sent, continuing
Sep 13 20:56:51.565111: | find_host_connection local=192.168.0.136:500 remote=192.168.0.1:500 policy=ECDSA+IKEV2_ALLOW but ignoring ports
Sep 13 20:56:51.565115: | find_host_pair: comparing 192.168.0.136:500 to 192.168.0.1:500 but ignoring ports
Sep 13 20:56:51.565117: | find_next_host_connection policy=ECDSA+IKEV2_ALLOW
Sep 13 20:56:51.565120: | found policy = RSASIG+ECDSA+ENCRYPT+TUNNEL+DONT_REKEY+IKEV2_ALLOW+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG_ALLOW+ESN_NO+RSASIG_v1_5 (ikev2-cert)
Sep 13 20:56:51.565122: | find_next_host_connection returns ikev2-cert
Sep 13 20:56:51.565124: | find_next_host_connection policy=ECDSA+IKEV2_ALLOW
Sep 13 20:56:51.565126: | find_next_host_connection returns empty
Sep 13 20:56:51.565129: | local endpoint has narrowing=yes - needs instantiation
Sep 13 20:56:51.565136: | subnet from address 192.168.0.1 (in default_end() at connections.c:378)
Sep 13 20:56:51.565139: | subnet from address 192.168.0.136 (in default_end() at connections.c:378)
Sep 13 20:56:51.565143: | find_host_pair: comparing 192.168.0.136:500 to 192.168.0.1:500 but ignoring ports
Sep 13 20:56:51.565146: | connect_to_host_pair: 192.168.0.136:500 192.168.0.1:500 -> hp@0x55b124e67d98: ikev2-cert
Sep 13 20:56:51.565150: | rw_instantiate() instantiated "ikev2-cert"[1] 192.168.0.1 for 192.168.0.1
Sep 13 20:56:51.565152: | found connection: ikev2-cert[1] 192.168.0.1 with policy ECDSA+IKEV2_ALLOW
Sep 13 20:56:51.565155: | IKE SPIr hash sha2_256 init
Sep 13 20:56:51.565170: | IKE SPIr hash sha2_256 digest addr-bytes@0x55b124e6b1a0 (length 24)
Sep 13 20:56:51.565173: |   04 00 00 00  c0 a8 00 01  00 00 00 00  00 00 00 00
Sep 13 20:56:51.565174: |   00 00 00 00  f4 01 00 00
Sep 13 20:56:51.565177: | IKE SPIr hash sha2_256 digest sod-bytes@0x55b124075fc0 (length 32)
Sep 13 20:56:51.565179: |   f5 23 e1 21  4d 19 fa d6  7c 37 73 d4  c7 90 4c 1b
Sep 13 20:56:51.565180: |   5f 20 10 64  3f 3c 1d b8  a7 b3 db 7b  b5 18 9c c3
Sep 13 20:56:51.565182: | IKE SPIr hash sha2_256 digest counter-bytes@0x55b124075fa0 (length 4)
Sep 13 20:56:51.565184: |   01 00 00 00
Sep 13 20:56:51.565190: | IKE SPIr hash sha2_256 final bytes@0x7ffee51a4280 (length 32)
Sep 13 20:56:51.565192: |   cc c8 77 25  23 cb 7d 48  0e c7 12 57  1f a6 80 a7
Sep 13 20:56:51.565194: |   03 79 5f 65  c2 61 68 b2  49 92 0a 9c  81 63 1d c2
Sep 13 20:56:51.565197: | addref fd@NULL (in new_state() at state.c:555)
Sep 13 20:56:51.565199: | creating state object #1 at 0x55b124e6cd28
Sep 13 20:56:51.565201: | State DB: adding IKEv2 state #1 in UNDEFINED
Sep 13 20:56:51.565208: | pstats #1 ikev2.ike started
Sep 13 20:56:51.565214: | parent state #1: UNDEFINED(ignore) => PARENT_R0(half-open IKE SA)
Sep 13 20:56:51.565221: | Message ID: IKE #1 initializing (IKE SA): ike.initiator.sent=0->-1 ike.initiator.recv=0->-1 ike.responder.sent=0->-1 ike.responder.recv=0->-1 ike.wip.initiator=0->-1 ike.wip.responder=0->-1
Sep 13 20:56:51.565232: | start processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:500 (in ikev2_process_packet() at ikev2.c:1755)
Sep 13 20:56:51.565235: | #1 st.st_msgid_lastrecv -1 md.hdr.isa_msgid 00000000
Sep 13 20:56:51.565238: | State DB: IKEv2 state not found (find_v2_sa_by_responder_wip)
Sep 13 20:56:51.565240: | #1 is idle
Sep 13 20:56:51.565243: | Message ID: IKE #1 not a duplicate - message request 0 is new: ike.initiator.sent=-1 ike.initiator.recv=-1 ike.responder.sent=-1 ike.responder.recv=-1 ike.wip.initiator=-1 ike.wip.responder=-1
Sep 13 20:56:51.565246: | [RE]START processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:500 (in ike_process_packet() at ikev2.c:1838)
Sep 13 20:56:51.565248: | #1 in state PARENT_R0: processing SA_INIT request
Sep 13 20:56:51.565250: | selected state microcode Respond to IKE_SA_INIT
Sep 13 20:56:51.565253: | Message ID: IKE #1 responder starting message request 0: ike.initiator.sent=-1 ike.initiator.recv=-1 ike.responder.sent=-1 ike.responder.recv=-1 ike.wip.initiator=-1 ike.wip.responder=-1->0
Sep 13 20:56:51.565255: | calling processor Respond to IKE_SA_INIT
Sep 13 20:56:51.565259: | #1 updating local interface from 192.168.0.136:500 to 192.168.0.136:500 using md->iface (in update_ike_endpoints() at state.c:2627)
Sep 13 20:56:51.565261: | constructing local IKE proposals for ikev2-cert (IKE SA responder matching remote proposals)
Sep 13 20:56:51.565265: | converting ike_info 3DES_CBC-HMAC_SHA1-MODP1024 to ikev2 ...
Sep 13 20:56:51.565267: | omitting IKEv2 PROTO_v2_IKE 3des_cbc ENCRYPT transform key-length
Sep 13 20:56:51.565271: | ...  ikev2_proposal: 1:IKE=3DES-HMAC_SHA1-HMAC_SHA1_96-MODP1024
Sep 13 20:56:51.565274: "ikev2-cert"[1] 192.168.0.1: local IKE proposals (IKE SA responder matching remote proposals): 
Sep 13 20:56:51.565277: "ikev2-cert"[1] 192.168.0.1:   1:IKE=3DES-HMAC_SHA1-HMAC_SHA1_96-MODP1024
Sep 13 20:56:51.565282: | Comparing remote proposals against IKE responder 1 local proposals
Sep 13 20:56:51.565285: | local proposal 1 type ENCR has 1 transforms
Sep 13 20:56:51.565287: | local proposal 1 type PRF has 1 transforms
Sep 13 20:56:51.565289: | local proposal 1 type INTEG has 1 transforms
Sep 13 20:56:51.565290: | local proposal 1 type DH has 1 transforms
Sep 13 20:56:51.565292: | local proposal 1 type ESN has 0 transforms
Sep 13 20:56:51.565295: | local proposal 1 transforms: required: ENCR+PRF+INTEG+DH; optional: none
Sep 13 20:56:51.565297: | ****parse IKEv2 Proposal Substructure Payload:
Sep 13 20:56:51.565299: |    last proposal: v2_PROPOSAL_LAST (0x0)
Sep 13 20:56:51.565302: |    length: 40 (00 28)
Sep 13 20:56:51.565304: |    prop #: 1 (01)
Sep 13 20:56:51.565306: |    proto ID: IKEv2_SEC_PROTO_IKE (0x1)
Sep 13 20:56:51.565308: |    spi size: 0 (00)
Sep 13 20:56:51.565310: |    # transforms: 4 (04)
Sep 13 20:56:51.565312: | Comparing remote proposal 1 containing 4 transforms against local proposal [1..1] of 1 local proposals
Sep 13 20:56:51.565314: | *****parse IKEv2 Transform Substructure Payload:
Sep 13 20:56:51.565316: |    last transform: v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.565318: |    length: 8 (00 08)
Sep 13 20:56:51.565320: |    IKEv2 transform type: TRANS_TYPE_ENCR (0x1)
Sep 13 20:56:51.565322: |    IKEv2 transform ID: 3DES (0x3)
Sep 13 20:56:51.565324: | remote proposal 1 transform 0 (ENCR=3DES) matches local proposal 1 type 1 (ENCR) transform 0
Sep 13 20:56:51.565326: | *****parse IKEv2 Transform Substructure Payload:
Sep 13 20:56:51.565328: |    last transform: v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.565330: |    length: 8 (00 08)
Sep 13 20:56:51.565332: |    IKEv2 transform type: TRANS_TYPE_INTEG (0x3)
Sep 13 20:56:51.565334: |    IKEv2 transform ID: AUTH_HMAC_SHA1_96 (0x2)
Sep 13 20:56:51.565336: | remote proposal 1 transform 1 (INTEG=HMAC_SHA1_96) matches local proposal 1 type 3 (INTEG) transform 0
Sep 13 20:56:51.565338: | *****parse IKEv2 Transform Substructure Payload:
Sep 13 20:56:51.565340: |    last transform: v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.565342: |    length: 8 (00 08)
Sep 13 20:56:51.565344: |    IKEv2 transform type: TRANS_TYPE_PRF (0x2)
Sep 13 20:56:51.565345: |    IKEv2 transform ID: PRF_HMAC_SHA1 (0x2)
Sep 13 20:56:51.565348: | remote proposal 1 transform 2 (PRF=HMAC_SHA1) matches local proposal 1 type 2 (PRF) transform 0
Sep 13 20:56:51.565349: | *****parse IKEv2 Transform Substructure Payload:
Sep 13 20:56:51.565351: |    last transform: v2_TRANSFORM_LAST (0x0)
Sep 13 20:56:51.565353: |    length: 8 (00 08)
Sep 13 20:56:51.565355: |    IKEv2 transform type: TRANS_TYPE_DH (0x4)
Sep 13 20:56:51.565357: |    IKEv2 transform ID: OAKLEY_GROUP_MODP1024 (0x2)
Sep 13 20:56:51.565359: | remote proposal 1 transform 3 (DH=MODP1024) matches local proposal 1 type 4 (DH) transform 0
Sep 13 20:56:51.565361: | remote proposal 1 proposed transforms: ENCR+PRF+INTEG+DH; matched: ENCR+PRF+INTEG+DH; unmatched: none
Sep 13 20:56:51.565364: | comparing remote proposal 1 containing ENCR+PRF+INTEG+DH transforms to local proposal 1; required: ENCR+PRF+INTEG+DH; optional: none; matched: ENCR+PRF+INTEG+DH
Sep 13 20:56:51.565366: | remote proposal 1 matches local proposal 1
Sep 13 20:56:51.565370: "ikev2-cert"[1] 192.168.0.1 #1: proposal 1:IKE=3DES-HMAC_SHA1-HMAC_SHA1_96-MODP1024 chosen from remote proposals 1:IKE:ENCR=3DES;INTEG=HMAC_SHA1_96;PRF=HMAC_SHA1;DH=MODP1024[first-match]
Sep 13 20:56:51.565373: | accepted IKE proposal ikev2_proposal: 1:IKE=3DES-HMAC_SHA1-HMAC_SHA1_96-MODP1024
Sep 13 20:56:51.565375: | converting proposal to internal trans attrs
Sep 13 20:56:51.565377: | encryption ike_alg_lookup_by_id id: 3DES=3, found 3DES_CBC

Sep 13 20:56:51.565380: | PRF ike_alg_lookup_by_id id: HMAC_SHA1=2, found HMAC_SHA1

Sep 13 20:56:51.565383: | integrity ike_alg_lookup_by_id id: HMAC_SHA1_96=2, found HMAC_SHA1_96

Sep 13 20:56:51.565386: | DH ike_alg_lookup_by_id id: MODP1024=2, found MODP1024

Sep 13 20:56:51.565391: | DH public value received:
Sep 13 20:56:51.565393: |   2d b7 9c 94  08 5e c6 b5  d7 67 08 3d  fb 43 9b bb
Sep 13 20:56:51.565395: |   2c 9a a3 1e  8f 40 a8 80  8a 72 eb 55  33 71 24 fa
Sep 13 20:56:51.565397: |   d5 43 82 11  fb a9 8a 74  d9 c2 07 b6  54 82 79 b5
Sep 13 20:56:51.565398: |   22 cc 13 0a  a3 ae 5e 6d  98 f0 00 fe  46 85 44 1c
Sep 13 20:56:51.565400: |   0d a1 41 5e  56 f6 89 b3  96 3c 4b 4d  17 bf cd e6
Sep 13 20:56:51.565401: |   de d6 71 d6  58 9f 4c 4e  2e 8d f4 41  29 0c 55 b8
Sep 13 20:56:51.565403: |   24 c4 20 74  a9 39 e3 8e  ab 5b bd 7e  02 05 89 2f
Sep 13 20:56:51.565405: |   6a c2 ce 93  f8 96 dc e1  34 08 f5 f8  e1 49 35 49
Sep 13 20:56:51.565408: | adding ikev2_inI1outR1 KE work-order 1 for state #1
Sep 13 20:56:51.565410: | event_schedule: newref EVENT_CRYPTO_TIMEOUT-pe@0x55b124e6ef18
Sep 13 20:56:51.565413: | inserting event EVENT_CRYPTO_TIMEOUT, timeout in 60 seconds for #1
Sep 13 20:56:51.565416: | libevent_malloc: newref ptr-libevent@0x55b124e6ef88 size 136
Sep 13 20:56:51.565437: |   #1 spent 0.178 milliseconds in processing: Respond to IKE_SA_INIT in v2_dispatch()
Sep 13 20:56:51.565443: | MD.ST contains the IKE SA #1
Sep 13 20:56:51.565447: | [RE]START processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:500 (in complete_v2_state_transition() at ikev2.c:3235)
Sep 13 20:56:51.565447: | crypto helper 0 resuming
Sep 13 20:56:51.565476: | crypto helper 0 starting work-order 1 for state #1
Sep 13 20:56:51.565449: | #1 complete_v2_state_transition() PARENT_R0 -> PARENT_R1 with status STF_SUSPEND
Sep 13 20:56:51.565490: | suspending state #1 and saving MD 0x55b124e6b188
Sep 13 20:56:51.565493: | #1 is busy; has suspended MD 0x55b124e6b188
Sep 13 20:56:51.565497: | [RE]START processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:500 (in log_stf_suspend() at ikev2.c:3030)
Sep 13 20:56:51.565482: | crypto helper 0 doing build KE and nonce (ikev2_inI1outR1 KE); request ID 1
Sep 13 20:56:51.565500: | "ikev2-cert"[1] 192.168.0.1 #1 complete v2 state STATE_PARENT_R0 transition with STF_SUSPEND suspended from complete_v2_state_transition:3313
Sep 13 20:56:51.565522: | stop processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:500 (in ikev2_process_packet() at ikev2.c:1757)
Sep 13 20:56:51.565526: | NSS: Value of Prime:
Sep 13 20:56:51.565534: |   ff ff ff ff  ff ff ff ff  c9 0f da a2  21 68 c2 34
Sep 13 20:56:51.565536: |   c4 c6 62 8b  80 dc 1c d1  29 02 4e 08  8a 67 cc 74
Sep 13 20:56:51.565537: |   02 0b be a6  3b 13 9b 22  51 4a 08 79  8e 34 04 dd
Sep 13 20:56:51.565539: |   ef 95 19 b3  cd 3a 43 1b  30 2b 0a 6d  f2 5f 14 37
Sep 13 20:56:51.565527: | #1 spent 0.549 milliseconds in ikev2_process_packet()
Sep 13 20:56:51.565550: | stop processing: from 192.168.0.1:500 (in process_md() at demux.c:381)
Sep 13 20:56:51.565553: | processing: STOP state #0 (in process_md() at demux.c:383)
Sep 13 20:56:51.565555: | processing: STOP connection NULL (in process_md() at demux.c:384)
Sep 13 20:56:51.565558: | spent 0.579 milliseconds in comm_handle_cb() reading and processing packet
Sep 13 20:56:51.565541: |   4f e1 35 6d  6d 51 c2 45  e4 85 b5 76  62 5e 7e c6
Sep 13 20:56:51.565565: |   f4 4c 42 e9  a6 37 ed 6b  0b ff 5c b6  f4 06 b7 ed
Sep 13 20:56:51.565567: |   ee 38 6b fb  5a 89 9f a5  ae 9f 24 11  7c 4b 1f e6
Sep 13 20:56:51.565569: |   49 28 66 51  ec e6 53 81  ff ff ff ff  ff ff ff ff
Sep 13 20:56:51.565571: | NSS: Value of base:
Sep 13 20:56:51.565572: |   02
Sep 13 20:56:51.565746: | DH secret MODP1024@0x7f2918002188: created
Sep 13 20:56:51.565750: | NSS: Local DH MODP1024 secret (pointer): 0x7f2918002188
Sep 13 20:56:51.565752: | NSS: Public DH wire value:
Sep 13 20:56:51.565754: |   4e 1f be 49  2b 18 07 98  d6 6e f9 ed  0c bb 8d c9
Sep 13 20:56:51.565755: |   68 cc 44 d3  c9 f0 d6 f6  c6 68 89 79  44 22 a5 69
Sep 13 20:56:51.565757: |   dd 42 a2 14  19 98 cb 14  73 50 2a fb  87 36 e7 c4
Sep 13 20:56:51.565759: |   09 12 46 51  ae 06 39 52  a6 7d f6 ff  68 1b 05 a8
Sep 13 20:56:51.565760: |   2a 82 37 57  44 52 aa ff  3b ce 9d 00  51 53 30 3d
Sep 13 20:56:51.565765: |   f6 df 0a 17  77 aa 5f 5e  bf c4 89 64  91 e8 88 20
Sep 13 20:56:51.565767: |   53 c8 81 95  7a 5e 1a d8  38 17 6b ac  51 80 fd d5
Sep 13 20:56:51.565769: |   05 ea 00 93  58 ea 9a f2  51 21 5a 1c  29 a4 ce f2
Sep 13 20:56:51.565773: | Generated nonce:
Sep 13 20:56:51.565775: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.565777: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.565780: | crypto helper 0 finished build KE and nonce (ikev2_inI1outR1 KE); request ID 1 time elapsed 0.000297 seconds
Sep 13 20:56:51.565784: | (#1) spent 0.295 milliseconds in crypto helper computing work-order 1: ikev2_inI1outR1 KE (pcr)
Sep 13 20:56:51.565797: | crypto helper 0 sending results from work-order 1 for state #1 to event queue
Sep 13 20:56:51.565802: | scheduling resume sending helper answer for #1
Sep 13 20:56:51.565805: | libevent_malloc: newref ptr-libevent@0x7f2918003308 size 136
Sep 13 20:56:51.565821: | crypto helper 0 waiting (nothing to do)
Sep 13 20:56:51.565832: | processing resume sending helper answer for #1
Sep 13 20:56:51.565840: | start processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:500 (in resume_handler() at server.c:817)
Sep 13 20:56:51.565843: | unsuspending #1 MD 0x55b124e6b188
Sep 13 20:56:51.565845: | crypto helper 0 replies to request ID 1
Sep 13 20:56:51.565847: | calling continuation function 0x55b123d8ab90
Sep 13 20:56:51.565849: | ikev2_parent_inI1outR1_continue() for #1 STATE_PARENT_R0: calculated ke+nonce, sending R1
Sep 13 20:56:51.565872: | **emit ISAKMP Message:
Sep 13 20:56:51.565876: |    initiator cookie: dc 3a 94 c4  30 44 5b 90
Sep 13 20:56:51.565878: |    responder cookie: cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.565880: |    next payload type: ISAKMP_NEXT_NONE (0x0)
Sep 13 20:56:51.565882: |    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996) (0x20)
Sep 13 20:56:51.565884: |    exchange type: ISAKMP_v2_IKE_SA_INIT (0x22)
Sep 13 20:56:51.565886: |    flags: ISAKMP_FLAG_v2_MSG_RESPONSE (0x20)
Sep 13 20:56:51.565888: |    Message ID: 0 (00 00 00 00)
Sep 13 20:56:51.565890: | next payload chain: saving message location 'ISAKMP Message'.'next payload type'
Sep 13 20:56:51.565893: | Emitting ikev2_proposal ...
Sep 13 20:56:51.565894: | ***emit IKEv2 Security Association Payload:
Sep 13 20:56:51.565896: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.565898: |    flags: none (0x0)
Sep 13 20:56:51.565900: | next payload chain: setting previous 'ISAKMP Message'.'next payload type' to current IKEv2 Security Association Payload (33:ISAKMP_NEXT_v2SA)
Sep 13 20:56:51.565902: | next payload chain: saving location 'IKEv2 Security Association Payload'.'next payload type' in 'reply packet'
Sep 13 20:56:51.565904: | ****emit IKEv2 Proposal Substructure Payload:
Sep 13 20:56:51.565906: |    last proposal: v2_PROPOSAL_LAST (0x0)
Sep 13 20:56:51.565908: |    prop #: 1 (01)
Sep 13 20:56:51.565910: |    proto ID: IKEv2_SEC_PROTO_IKE (0x1)
Sep 13 20:56:51.565912: |    spi size: 0 (00)
Sep 13 20:56:51.565914: |    # transforms: 4 (04)
Sep 13 20:56:51.565916: | last substructure: saving location 'IKEv2 Security Association Payload'.'IKEv2 Proposal Substructure Payload'.'last proposal'
Sep 13 20:56:51.565918: | *****emit IKEv2 Transform Substructure Payload:
Sep 13 20:56:51.565920: |    last transform: v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.565921: |    IKEv2 transform type: TRANS_TYPE_ENCR (0x1)
Sep 13 20:56:51.565923: |    IKEv2 transform ID: 3DES (0x3)
Sep 13 20:56:51.565925: | last substructure: saving location 'IKEv2 Proposal Substructure Payload'.'IKEv2 Transform Substructure Payload'.'last transform'
Sep 13 20:56:51.565927: | emitting length of IKEv2 Transform Substructure Payload: 8
Sep 13 20:56:51.565929: | *****emit IKEv2 Transform Substructure Payload:
Sep 13 20:56:51.565931: |    last transform: v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.565933: |    IKEv2 transform type: TRANS_TYPE_PRF (0x2)
Sep 13 20:56:51.565934: |    IKEv2 transform ID: PRF_HMAC_SHA1 (0x2)
Sep 13 20:56:51.565939: | last substructure: checking 'IKEv2 Proposal Substructure Payload'.'IKEv2 Transform Substructure Payload'.'last transform' is v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.565941: | last substructure: saving location 'IKEv2 Proposal Substructure Payload'.'IKEv2 Transform Substructure Payload'.'last transform'
Sep 13 20:56:51.565943: | emitting length of IKEv2 Transform Substructure Payload: 8
Sep 13 20:56:51.565945: | *****emit IKEv2 Transform Substructure Payload:
Sep 13 20:56:51.565947: |    last transform: v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.565948: |    IKEv2 transform type: TRANS_TYPE_INTEG (0x3)
Sep 13 20:56:51.565950: |    IKEv2 transform ID: AUTH_HMAC_SHA1_96 (0x2)
Sep 13 20:56:51.565952: | last substructure: checking 'IKEv2 Proposal Substructure Payload'.'IKEv2 Transform Substructure Payload'.'last transform' is v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.565954: | last substructure: saving location 'IKEv2 Proposal Substructure Payload'.'IKEv2 Transform Substructure Payload'.'last transform'
Sep 13 20:56:51.565956: | emitting length of IKEv2 Transform Substructure Payload: 8
Sep 13 20:56:51.565958: | *****emit IKEv2 Transform Substructure Payload:
Sep 13 20:56:51.565959: |    last transform: v2_TRANSFORM_LAST (0x0)
Sep 13 20:56:51.565961: |    IKEv2 transform type: TRANS_TYPE_DH (0x4)
Sep 13 20:56:51.565963: |    IKEv2 transform ID: OAKLEY_GROUP_MODP1024 (0x2)
Sep 13 20:56:51.565965: | last substructure: checking 'IKEv2 Proposal Substructure Payload'.'IKEv2 Transform Substructure Payload'.'last transform' is v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.565967: | last substructure: saving location 'IKEv2 Proposal Substructure Payload'.'IKEv2 Transform Substructure Payload'.'last transform'
Sep 13 20:56:51.565968: | emitting length of IKEv2 Transform Substructure Payload: 8
Sep 13 20:56:51.565970: | emitting length of IKEv2 Proposal Substructure Payload: 40
Sep 13 20:56:51.565972: | last substructure: checking 'IKEv2 Proposal Substructure Payload'.'IKEv2 Transform Substructure Payload'.'last transform' is 0
Sep 13 20:56:51.565974: | emitting length of IKEv2 Security Association Payload: 44
Sep 13 20:56:51.565976: | last substructure: checking 'IKEv2 Security Association Payload'.'IKEv2 Proposal Substructure Payload'.'last proposal' is 0
Sep 13 20:56:51.565979: | wire (crypto helper) group MODP1024 and state group MODP1024 match
Sep 13 20:56:51.565981: | DH secret MODP1024@0x7f2918002188: transferring ownership from helper KE to state #1
Sep 13 20:56:51.565983: | ***emit IKEv2 Key Exchange Payload:
Sep 13 20:56:51.565985: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.565987: |    flags: none (0x0)
Sep 13 20:56:51.565988: |    DH group: OAKLEY_GROUP_MODP1024 (0x2)
Sep 13 20:56:51.565990: | next payload chain: setting previous 'IKEv2 Security Association Payload'.'next payload type' to current IKEv2 Key Exchange Payload (34:ISAKMP_NEXT_v2KE)
Sep 13 20:56:51.565992: | next payload chain: saving location 'IKEv2 Key Exchange Payload'.'next payload type' in 'reply packet'
Sep 13 20:56:51.565995: | emitting 128 raw bytes of ikev2 g^x into IKEv2 Key Exchange Payload
Sep 13 20:56:51.565996: | ikev2 g^x:
Sep 13 20:56:51.565998: |   4e 1f be 49  2b 18 07 98  d6 6e f9 ed  0c bb 8d c9
Sep 13 20:56:51.566000: |   68 cc 44 d3  c9 f0 d6 f6  c6 68 89 79  44 22 a5 69
Sep 13 20:56:51.566002: |   dd 42 a2 14  19 98 cb 14  73 50 2a fb  87 36 e7 c4
Sep 13 20:56:51.566003: |   09 12 46 51  ae 06 39 52  a6 7d f6 ff  68 1b 05 a8
Sep 13 20:56:51.566005: |   2a 82 37 57  44 52 aa ff  3b ce 9d 00  51 53 30 3d
Sep 13 20:56:51.566006: |   f6 df 0a 17  77 aa 5f 5e  bf c4 89 64  91 e8 88 20
Sep 13 20:56:51.566008: |   53 c8 81 95  7a 5e 1a d8  38 17 6b ac  51 80 fd d5
Sep 13 20:56:51.566010: |   05 ea 00 93  58 ea 9a f2  51 21 5a 1c  29 a4 ce f2
Sep 13 20:56:51.566012: | emitting length of IKEv2 Key Exchange Payload: 136
Sep 13 20:56:51.566013: | ***emit IKEv2 Nonce Payload:
Sep 13 20:56:51.566015: |    next payload type: ISAKMP_NEXT_v2N (0x29)
Sep 13 20:56:51.566017: |    flags: none (0x0)
Sep 13 20:56:51.566021: | next payload chain: ignoring supplied 'IKEv2 Nonce Payload'.'next payload type' value 41:ISAKMP_NEXT_v2N
Sep 13 20:56:51.566023: | next payload chain: setting previous 'IKEv2 Key Exchange Payload'.'next payload type' to current IKEv2 Nonce Payload (40:ISAKMP_NEXT_v2Ni)
Sep 13 20:56:51.566025: | next payload chain: saving location 'IKEv2 Nonce Payload'.'next payload type' in 'reply packet'
Sep 13 20:56:51.566027: | emitting 32 raw bytes of IKEv2 nonce into IKEv2 Nonce Payload
Sep 13 20:56:51.566029: | IKEv2 nonce:
Sep 13 20:56:51.566030: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.566032: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.566034: | emitting length of IKEv2 Nonce Payload: 36
Sep 13 20:56:51.566036: | Adding a v2N Payload
Sep 13 20:56:51.566037: | ***emit IKEv2 Notify Payload:
Sep 13 20:56:51.566039: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.566041: |    flags: none (0x0)
Sep 13 20:56:51.566043: |    Protocol ID: PROTO_v2_RESERVED (0x0)
Sep 13 20:56:51.566045: |    SPI size: 0 (00)
Sep 13 20:56:51.566047: |    Notify Message Type: v2N_IKEV2_FRAGMENTATION_SUPPORTED (0x402e)
Sep 13 20:56:51.566049: | next payload chain: setting previous 'IKEv2 Nonce Payload'.'next payload type' to current IKEv2 Notify Payload (41:ISAKMP_NEXT_v2N)
Sep 13 20:56:51.566051: | next payload chain: saving location 'IKEv2 Notify Payload'.'next payload type' in 'reply packet'
Sep 13 20:56:51.566052: | emitting length of IKEv2 Notify Payload: 8
Sep 13 20:56:51.566054: | NAT-T: encapsulation=yes, so mangling hash to force NAT-T detection
Sep 13 20:56:51.566056: |  NAT-Traversal support  [enabled] add v2N payloads.
Sep 13 20:56:51.566059: | NATD hash sha init
Sep 13 20:56:51.566065: | NATD hash sha digest IKE SPIi-bytes@0x7ffee51a4260 (length 8)
Sep 13 20:56:51.566067: |   dc 3a 94 c4  30 44 5b 90
Sep 13 20:56:51.566069: | NATD hash sha digest IKE SPIr-bytes@0x7ffee51a4268 (length 8)
Sep 13 20:56:51.566071: |   cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.566073: | NATD hash sha digest IP addr-bytes@0x7ffee51a4084 (length 4)
Sep 13 20:56:51.566075: |   c0 a8 00 88
Sep 13 20:56:51.566077: | NATD hash sha digest PORT-bytes@0x7ffee51a4056 (length 2)
Sep 13 20:56:51.566079: |   00 00
Sep 13 20:56:51.566082: | NATD hash sha final length 20
Sep 13 20:56:51.566084: |   ec 2c 55 6a  81 11 d1 af  53 a6 cd e5  b8 c1 f2 0d
Sep 13 20:56:51.566086: |   f9 7e 92 38
Sep 13 20:56:51.566088: | natd_hash: hasher=0x55b124058b80(20)
Sep 13 20:56:51.566089: | natd_hash: icookie=
Sep 13 20:56:51.566091: |   dc 3a 94 c4  30 44 5b 90
Sep 13 20:56:51.566093: | natd_hash: rcookie=
Sep 13 20:56:51.566094: |   cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.566096: | natd_hash: ip=
Sep 13 20:56:51.566097: |   c0 a8 00 88
Sep 13 20:56:51.566099: | natd_hash: port=
Sep 13 20:56:51.566101: |   00 00
Sep 13 20:56:51.566102: | natd_hash: hash=
Sep 13 20:56:51.566104: |   ec 2c 55 6a  81 11 d1 af  53 a6 cd e5  b8 c1 f2 0d
Sep 13 20:56:51.566106: |   f9 7e 92 38
Sep 13 20:56:51.566107: | Adding a v2N Payload
Sep 13 20:56:51.566109: | ***emit IKEv2 Notify Payload:
Sep 13 20:56:51.566111: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.566112: |    flags: none (0x0)
Sep 13 20:56:51.566114: |    Protocol ID: PROTO_v2_RESERVED (0x0)
Sep 13 20:56:51.566116: |    SPI size: 0 (00)
Sep 13 20:56:51.566118: |    Notify Message Type: v2N_NAT_DETECTION_SOURCE_IP (0x4004)
Sep 13 20:56:51.566120: | next payload chain: setting previous 'IKEv2 Notify Payload'.'next payload type' to current IKEv2 Notify Payload (41:ISAKMP_NEXT_v2N)
Sep 13 20:56:51.566122: | next payload chain: saving location 'IKEv2 Notify Payload'.'next payload type' in 'reply packet'
Sep 13 20:56:51.566124: | emitting 20 raw bytes of Notify data into IKEv2 Notify Payload
Sep 13 20:56:51.566126: | Notify data:
Sep 13 20:56:51.566127: |   ec 2c 55 6a  81 11 d1 af  53 a6 cd e5  b8 c1 f2 0d
Sep 13 20:56:51.566129: |   f9 7e 92 38
Sep 13 20:56:51.566131: | emitting length of IKEv2 Notify Payload: 28
Sep 13 20:56:51.566132: | NATD hash sha init
Sep 13 20:56:51.566138: | NATD hash sha digest IKE SPIi-bytes@0x7ffee51a4260 (length 8)
Sep 13 20:56:51.566140: |   dc 3a 94 c4  30 44 5b 90
Sep 13 20:56:51.566142: | NATD hash sha digest IKE SPIr-bytes@0x7ffee51a4268 (length 8)
Sep 13 20:56:51.566144: |   cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.566146: | NATD hash sha digest IP addr-bytes@0x7ffee51a4084 (length 4)
Sep 13 20:56:51.566147: |   c0 a8 00 01
Sep 13 20:56:51.566149: | NATD hash sha digest PORT-bytes@0x7ffee51a4056 (length 2)
Sep 13 20:56:51.566151: |   01 f4
Sep 13 20:56:51.566154: | NATD hash sha final length 20
Sep 13 20:56:51.566156: |   b9 9d ba c8  22 02 38 52  bb e3 68 b9  d4 20 c7 34
Sep 13 20:56:51.566157: |   2f 3d 75 aa
Sep 13 20:56:51.566159: | natd_hash: hasher=0x55b124058b80(20)
Sep 13 20:56:51.566161: | natd_hash: icookie=
Sep 13 20:56:51.566162: |   dc 3a 94 c4  30 44 5b 90
Sep 13 20:56:51.566164: | natd_hash: rcookie=
Sep 13 20:56:51.566166: |   cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.566167: | natd_hash: ip=
Sep 13 20:56:51.566169: |   c0 a8 00 01
Sep 13 20:56:51.566170: | natd_hash: port=
Sep 13 20:56:51.566172: |   01 f4
Sep 13 20:56:51.566174: | natd_hash: hash=
Sep 13 20:56:51.566175: |   b9 9d ba c8  22 02 38 52  bb e3 68 b9  d4 20 c7 34
Sep 13 20:56:51.566177: |   2f 3d 75 aa
Sep 13 20:56:51.566179: | Adding a v2N Payload
Sep 13 20:56:51.566180: | ***emit IKEv2 Notify Payload:
Sep 13 20:56:51.566182: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.566184: |    flags: none (0x0)
Sep 13 20:56:51.566185: |    Protocol ID: PROTO_v2_RESERVED (0x0)
Sep 13 20:56:51.566187: |    SPI size: 0 (00)
Sep 13 20:56:51.566189: |    Notify Message Type: v2N_NAT_DETECTION_DESTINATION_IP (0x4005)
Sep 13 20:56:51.566191: | next payload chain: setting previous 'IKEv2 Notify Payload'.'next payload type' to current IKEv2 Notify Payload (41:ISAKMP_NEXT_v2N)
Sep 13 20:56:51.566193: | next payload chain: saving location 'IKEv2 Notify Payload'.'next payload type' in 'reply packet'
Sep 13 20:56:51.566195: | emitting 20 raw bytes of Notify data into IKEv2 Notify Payload
Sep 13 20:56:51.566197: | Notify data:
Sep 13 20:56:51.566198: |   b9 9d ba c8  22 02 38 52  bb e3 68 b9  d4 20 c7 34
Sep 13 20:56:51.566200: |   2f 3d 75 aa
Sep 13 20:56:51.566202: | emitting length of IKEv2 Notify Payload: 28
Sep 13 20:56:51.566203: | going to send a certreq
Sep 13 20:56:51.566205: | connection->kind is not CK_PERMANENT (instance), so collect CAs
Sep 13 20:56:51.566207: | Not a roadwarrior instance, sending empty CA in CERTREQ
Sep 13 20:56:51.566209: | ***emit IKEv2 Certificate Request Payload:
Sep 13 20:56:51.566211: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.566213: |    flags: none (0x0)
Sep 13 20:56:51.566215: |    ikev2 cert encoding: CERT_X509_SIGNATURE (0x4)
Sep 13 20:56:51.566217: | next payload chain: setting previous 'IKEv2 Notify Payload'.'next payload type' to current IKEv2 Certificate Request Payload (38:ISAKMP_NEXT_v2CERTREQ)
Sep 13 20:56:51.566219: | next payload chain: saving location 'IKEv2 Certificate Request Payload'.'next payload type' in 'reply packet'
Sep 13 20:56:51.566220: | emitting length of IKEv2 Certificate Request Payload: 5
Sep 13 20:56:51.566222: | emitting length of ISAKMP Message: 313
Sep 13 20:56:51.566225: | MD.ST contains the IKE SA #1
Sep 13 20:56:51.566229: | [RE]START processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:500 (in complete_v2_state_transition() at ikev2.c:3235)
Sep 13 20:56:51.566231: | #1 complete_v2_state_transition() PARENT_R0 -> PARENT_R1 with status STF_OK
Sep 13 20:56:51.566233: | transitioning from state STATE_PARENT_R0 to state STATE_PARENT_R1
Sep 13 20:56:51.566235: | parent state #1: PARENT_R0(half-open IKE SA) => PARENT_R1(half-open IKE SA)
Sep 13 20:56:51.566237: | Message ID: updating counters for #1 after switching state ...
Sep 13 20:56:51.566241: | Message ID: IKE #1 updating responder received message request 0: ike.initiator.sent=-1 ike.initiator.recv=-1 ike.responder.sent=-1 ike.responder.recv=-1->0 ike.wip.initiator=-1 ike.wip.responder=0->-1
Sep 13 20:56:51.566246: | Message ID: IKE #1 updating responder sent message response 0: ike.initiator.sent=-1 ike.initiator.recv=-1 ike.responder.sent=-1->0 ike.responder.recv=0 ike.wip.initiator=-1 ike.wip.responder=-1
Sep 13 20:56:51.566249: | Message ID: IKE #1 no pending message initiators to schedule: ike.initiator.sent=-1 ike.initiator.recv=-1 ike.responder.sent=0 ike.responder.recv=0 ike.wip.initiator=-1 ike.wip.responder=-1
Sep 13 20:56:51.566253: "ikev2-cert"[1] 192.168.0.1 #1: STATE_PARENT_R1: received v2I1, sent v2R1 {auth=IKEv2 cipher=3DES_CBC_192 integ=HMAC_SHA1_96 prf=HMAC_SHA1 group=MODP1024}
Sep 13 20:56:51.566256: | sending V2 new request packet to 192.168.0.1:500 (from 192.168.0.136:500)
Sep 13 20:56:51.566260: | sending 313 bytes for STATE_PARENT_R0 through ens33 from 192.168.0.136:500 to 192.168.0.1:500 (using #1)
Sep 13 20:56:51.566262: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.566264: |   21 20 22 20  00 00 00 00  00 00 01 39  22 00 00 2c
Sep 13 20:56:51.566266: |   00 00 00 28  01 01 00 04  03 00 00 08  01 00 00 03
Sep 13 20:56:51.566267: |   03 00 00 08  02 00 00 02  03 00 00 08  03 00 00 02
Sep 13 20:56:51.566269: |   00 00 00 08  04 00 00 02  28 00 00 88  00 02 00 00
Sep 13 20:56:51.566270: |   4e 1f be 49  2b 18 07 98  d6 6e f9 ed  0c bb 8d c9
Sep 13 20:56:51.566272: |   68 cc 44 d3  c9 f0 d6 f6  c6 68 89 79  44 22 a5 69
Sep 13 20:56:51.566274: |   dd 42 a2 14  19 98 cb 14  73 50 2a fb  87 36 e7 c4
Sep 13 20:56:51.566275: |   09 12 46 51  ae 06 39 52  a6 7d f6 ff  68 1b 05 a8
Sep 13 20:56:51.566277: |   2a 82 37 57  44 52 aa ff  3b ce 9d 00  51 53 30 3d
Sep 13 20:56:51.566279: |   f6 df 0a 17  77 aa 5f 5e  bf c4 89 64  91 e8 88 20
Sep 13 20:56:51.566280: |   53 c8 81 95  7a 5e 1a d8  38 17 6b ac  51 80 fd d5
Sep 13 20:56:51.566282: |   05 ea 00 93  58 ea 9a f2  51 21 5a 1c  29 a4 ce f2
Sep 13 20:56:51.566283: |   29 00 00 24  ab ce b2 a9  cc ef 82 6d  4f 32 ca 04
Sep 13 20:56:51.566285: |   34 3f e7 80  35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05
Sep 13 20:56:51.566287: |   d1 f2 53 ad  29 00 00 08  00 00 40 2e  29 00 00 1c
Sep 13 20:56:51.566288: |   00 00 40 04  ec 2c 55 6a  81 11 d1 af  53 a6 cd e5
Sep 13 20:56:51.566290: |   b8 c1 f2 0d  f9 7e 92 38  26 00 00 1c  00 00 40 05
Sep 13 20:56:51.566292: |   b9 9d ba c8  22 02 38 52  bb e3 68 b9  d4 20 c7 34
Sep 13 20:56:51.566293: |   2f 3d 75 aa  00 00 00 05  04
Sep 13 20:56:51.566384: | state #1 requesting EVENT_CRYPTO_TIMEOUT to be deleted
Sep 13 20:56:51.566392: | libevent_free: delref ptr-libevent@0x55b124e6ef88
Sep 13 20:56:51.566395: | free_event_entry: delref EVENT_CRYPTO_TIMEOUT-pe@0x55b124e6ef18
Sep 13 20:56:51.566398: | event_schedule: newref EVENT_SO_DISCARD-pe@0x55b124e6ef18
Sep 13 20:56:51.566400: | inserting event EVENT_SO_DISCARD, timeout in 200 seconds for #1
Sep 13 20:56:51.566402: | libevent_malloc: newref ptr-libevent@0x55b124e6ef88 size 136
Sep 13 20:56:51.566406: | resume sending helper answer for #1 suppresed complete_v2_state_transition()
Sep 13 20:56:51.566410: | #1 spent 0.567 milliseconds in resume sending helper answer
Sep 13 20:56:51.566415: | stop processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:500 (in resume_handler() at server.c:860)
Sep 13 20:56:51.566417: | libevent_free: delref ptr-libevent@0x7f2918003308
Sep 13 20:56:51.630282: | spent 0.00343 milliseconds in comm_handle_cb() calling check_incoming_msg_errqueue()
Sep 13 20:56:51.630317: | *received 804 bytes from 192.168.0.1:4500 on ens33 (192.168.0.136:4500)
Sep 13 20:56:51.630321: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.630323: |   2e 20 23 08  00 00 00 01  00 00 03 24  23 00 03 08
Sep 13 20:56:51.630325: |   f2 5a 71 50  d6 72 05 bb  b3 c5 53 91  26 23 8c 92
Sep 13 20:56:51.630326: |   03 0f f0 66  3e fa c2 79  7e 8f 72 32  c9 6e ff 55
Sep 13 20:56:51.630328: |   d1 a5 a4 af  7f f2 6f f9  41 77 5a a2  1d d9 d5 83
Sep 13 20:56:51.630330: |   79 91 ad 15  6e 62 6e b7  8e 11 43 9b  8e 6d 95 7a
Sep 13 20:56:51.630331: |   70 31 08 65  3f a8 76 7a  b5 8b cb ad  4f 64 7c 4f
Sep 13 20:56:51.630340: |   0f 65 3a 0c  1a 3c 1a dc  43 ab 8d f6  fc 5c bd 34
Sep 13 20:56:51.630342: |   b3 d9 d7 91  7e 57 da 8a  7d 80 2f b0  e8 dc 20 64
Sep 13 20:56:51.630344: |   7b 13 01 47  c8 9e a4 ad  ff 36 38 c7  80 f0 d4 68
Sep 13 20:56:51.630346: |   92 20 75 61  6e 9f b6 a0  49 f3 73 ac  41 95 12 04
Sep 13 20:56:51.630347: |   ad 81 2a a8  a8 28 33 4a  d0 c6 d0 d4  fa 6a 40 6d
Sep 13 20:56:51.630349: |   53 eb 6f e7  44 d6 31 56  a8 c1 10 96  9b 11 09 16
Sep 13 20:56:51.630350: |   a8 63 b8 e5  04 73 16 b9  92 cc cd cd  28 7c c4 0e
Sep 13 20:56:51.630352: |   3e ec d2 d3  5a 5d a7 c3  5d cc 92 e7  9e 13 8b c6
Sep 13 20:56:51.630354: |   2e 8c b3 a1  e4 4e f5 9c  b1 66 0f a1  3b ab 24 3c
Sep 13 20:56:51.630355: |   80 5b 2c 29  92 ab e4 ba  22 05 49 4c  82 99 1a b3
Sep 13 20:56:51.630357: |   08 c3 01 04  99 f5 db f8  2d 9c 02 8f  9a 89 37 db
Sep 13 20:56:51.630359: |   7b 00 95 67  10 17 2b dd  c3 48 f9 14  60 d8 2d 12
Sep 13 20:56:51.630360: |   26 d4 50 b5  5c 65 71 d7  d4 bd dd 6f  96 08 70 fb
Sep 13 20:56:51.630362: |   95 7a 85 0d  bf c0 ac 1a  08 29 cb 2c  b9 77 76 c9
Sep 13 20:56:51.630364: |   af ec 3f 44  b2 d6 e0 5c  9f cd 73 b8  f3 2c 86 7e
Sep 13 20:56:51.630365: |   0d d7 8d 2c  18 8a 3d 23  ab 78 ec a0  49 8f e0 ba
Sep 13 20:56:51.630367: |   f3 6f d9 a9  3a ca 4a f2  8a 4b 34 46  72 57 69 44
Sep 13 20:56:51.630368: |   44 05 ba 96  45 69 56 58  97 69 8e d7  fa b0 81 1b
Sep 13 20:56:51.630370: |   16 47 4d 28  61 48 73 79  fc ac 90 b2  75 1d ad 52
Sep 13 20:56:51.630372: |   f5 ba 39 37  ef 95 0c 76  4d e3 64 34  97 e4 a9 f1
Sep 13 20:56:51.630373: |   c8 96 4b b1  f2 61 b4 8c  28 ee 69 a7  25 84 b8 6e
Sep 13 20:56:51.630375: |   8a f7 2a 1c  54 c3 70 63  74 9e 73 c2  93 e2 68 9a
Sep 13 20:56:51.630377: |   fa a6 1e 91  57 61 6f 79  c0 6b d6 42  9f bf d1 90
Sep 13 20:56:51.630378: |   a5 91 d2 42  57 e3 09 90  4e 61 e8 7c  e4 3b 1a ee
Sep 13 20:56:51.630380: |   ea 8d d1 99  dd e5 02 28  4e db f5 2a  53 06 49 f1
Sep 13 20:56:51.630381: |   40 ef 81 14  d0 ac 8c 0b  9d 12 e9 a3  d4 48 b8 d1
Sep 13 20:56:51.630383: |   a3 cd da 87  db 08 62 3e  10 91 f4 97  b3 7c 71 1a
Sep 13 20:56:51.630385: |   19 ab 8a 8e  4d 4e 5f 5b  98 6f ac e6  28 ab f4 5d
Sep 13 20:56:51.630386: |   0f 89 1f 5d  80 b1 76 ed  c7 49 e1 6f  90 3a 83 fe
Sep 13 20:56:51.630388: |   c8 13 a2 d8  b1 8d 42 94  5b 59 9a 97  1a 66 89 25
Sep 13 20:56:51.630389: |   03 bc c8 8a  0c c1 48 e6  34 02 5e 95  93 59 74 90
Sep 13 20:56:51.630391: |   f8 77 a8 db  76 ce eb 83  50 91 18 3e  39 49 95 29
Sep 13 20:56:51.630393: |   04 4d 51 60  b5 eb 6d 08  8b 72 aa 90  ca 8a 72 20
Sep 13 20:56:51.630394: |   41 27 4c 6e  6a 58 4a f9  18 70 c2 44  92 ef a1 47
Sep 13 20:56:51.630396: |   2b c8 9a 49  d4 25 f8 46  2f c0 df 0a  bf bf 2d 28
Sep 13 20:56:51.630398: |   40 85 5b 46  8d 36 ad 67  9e dd 56 a7  20 9f 3e 36
Sep 13 20:56:51.630399: |   0a ee 9c 53  c6 33 fd 12  1e e8 0d 5a  5f 6f 7d c9
Sep 13 20:56:51.630401: |   4d 3c 43 77  49 19 7d c9  a2 a4 35 f7  3e f5 c7 1b
Sep 13 20:56:51.630402: |   e0 3f ba 4e  ef a7 94 2c  7a 04 51 4f  3e e7 d8 d0
Sep 13 20:56:51.630404: |   18 cd 0d d9  82 2f 2c 89  5b 04 65 5e  eb b9 87 6e
Sep 13 20:56:51.630406: |   7e 51 a0 e5  ad e5 05 d4  7e 7d 13 5a  55 27 9f 34
Sep 13 20:56:51.630407: |   9c 65 45 d2  47 bb 29 6e  a6 0c 17 cf  4a c1 3d a0
Sep 13 20:56:51.630409: |   96 a5 88 ea  84 ae cf 71  3d c9 1c ee  6b bc 4f 29
Sep 13 20:56:51.630410: |   f5 4b 83 c3
Sep 13 20:56:51.630414: | start processing: from 192.168.0.1:4500 (in process_md() at demux.c:379)
Sep 13 20:56:51.630418: | **parse ISAKMP Message:
Sep 13 20:56:51.630421: |    initiator cookie: dc 3a 94 c4  30 44 5b 90
Sep 13 20:56:51.630424: |    responder cookie: cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.630426: |    next payload type: ISAKMP_NEXT_v2SK (0x2e)
Sep 13 20:56:51.630428: |    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996) (0x20)
Sep 13 20:56:51.630430: |    exchange type: ISAKMP_v2_IKE_AUTH (0x23)
Sep 13 20:56:51.630432: |    flags: ISAKMP_FLAG_v2_IKE_INIT (0x8)
Sep 13 20:56:51.630435: |    Message ID: 1 (00 00 00 01)
Sep 13 20:56:51.630440: |    length: 804 (00 00 03 24)
Sep 13 20:56:51.630442: |  processing version=2.0 packet with exchange type=ISAKMP_v2_IKE_AUTH (35)
Sep 13 20:56:51.630445: | I am the IKE SA Original Responder receiving an IKEv2 IKE_AUTH request 
Sep 13 20:56:51.630449: | State DB: found IKEv2 state #1 in PARENT_R1 (find_v2_ike_sa)
Sep 13 20:56:51.630455: | start processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:500 (in ikev2_process_packet() at ikev2.c:1755)
Sep 13 20:56:51.630458: | #1 st.st_msgid_lastrecv 0 md.hdr.isa_msgid 00000001
Sep 13 20:56:51.630460: | State DB: IKEv2 state not found (find_v2_sa_by_responder_wip)
Sep 13 20:56:51.630462: | #1 is idle
Sep 13 20:56:51.630466: | Message ID: IKE #1 not a duplicate - message request 1 is new: ike.initiator.sent=-1 ike.initiator.recv=-1 ike.responder.sent=0 ike.responder.recv=0 ike.wip.initiator=-1 ike.wip.responder=-1
Sep 13 20:56:51.630470: | [RE]START processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:500 (in ike_process_packet() at ikev2.c:1838)
Sep 13 20:56:51.630471: | unpacking clear payload
Sep 13 20:56:51.630473: | Now let's proceed with payload (ISAKMP_NEXT_v2SK)
Sep 13 20:56:51.630476: | ***parse IKEv2 Encryption Payload:
Sep 13 20:56:51.630478: |    next payload type: ISAKMP_NEXT_v2IDi (0x23)
Sep 13 20:56:51.630480: |    flags: none (0x0)
Sep 13 20:56:51.630482: |    length: 776 (03 08)
Sep 13 20:56:51.630484: | processing payload: ISAKMP_NEXT_v2SK (len=772)
Sep 13 20:56:51.630486: | #1 in state PARENT_R1: received v2I1, sent v2R1
Sep 13 20:56:51.630488: | selected state microcode Responder: process IKE_AUTH request (no SKEYSEED)
Sep 13 20:56:51.630490: | calling processor Responder: process IKE_AUTH request (no SKEYSEED)
Sep 13 20:56:51.630492: | ikev2 parent inI2outR2: calculating g^{xy} in order to decrypt I2
Sep 13 20:56:51.630496: | offloading IKEv2 SKEYSEED using prf=HMAC_SHA1 integ=HMAC_SHA1_96 cipherkey=3DES_CBC
Sep 13 20:56:51.630498: | start_dh_v2: addref skey_d_old-key@NULL
Sep 13 20:56:51.630501: | DH secret MODP1024@0x7f2918002188: transferring ownership from state #1 to helper IKEv2 DH
Sep 13 20:56:51.630504: | adding ikev2_inI2outR2 KE work-order 2 for state #1
Sep 13 20:56:51.630506: | state #1 requesting EVENT_SO_DISCARD to be deleted
Sep 13 20:56:51.630509: | libevent_free: delref ptr-libevent@0x55b124e6ef88
Sep 13 20:56:51.630512: | free_event_entry: delref EVENT_SO_DISCARD-pe@0x55b124e6ef18
Sep 13 20:56:51.630514: | event_schedule: newref EVENT_CRYPTO_TIMEOUT-pe@0x55b124e6ef18
Sep 13 20:56:51.630517: | inserting event EVENT_CRYPTO_TIMEOUT, timeout in 60 seconds for #1
Sep 13 20:56:51.630520: | libevent_malloc: newref ptr-libevent@0x55b124e6ef88 size 136
Sep 13 20:56:51.630541: |   #1 spent 0.0467 milliseconds in processing: Responder: process IKE_AUTH request (no SKEYSEED) in v2_dispatch()
Sep 13 20:56:51.630547: | MD.ST contains the IKE SA #1
Sep 13 20:56:51.630551: | [RE]START processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:500 (in complete_v2_state_transition() at ikev2.c:3235)
Sep 13 20:56:51.630554: | #1 complete_v2_state_transition() PARENT_R1 -> PARENT_R1 with status STF_SUSPEND
Sep 13 20:56:51.630554: | crypto helper 1 resuming
Sep 13 20:56:51.630556: | suspending state #1 and saving MD 0x55b124e6b188
Sep 13 20:56:51.630580: | #1 is busy; has suspended MD 0x55b124e6b188
Sep 13 20:56:51.630584: | [RE]START processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:500 (in log_stf_suspend() at ikev2.c:3030)
Sep 13 20:56:51.630572: | crypto helper 1 starting work-order 2 for state #1
Sep 13 20:56:51.630601: | crypto helper 1 doing compute dh (V2) (ikev2_inI2outR2 KE); request ID 2
Sep 13 20:56:51.630605: | peer's g: 
Sep 13 20:56:51.630607: |   2d b7 9c 94  08 5e c6 b5  d7 67 08 3d  fb 43 9b bb
Sep 13 20:56:51.630608: |   2c 9a a3 1e  8f 40 a8 80  8a 72 eb 55  33 71 24 fa
Sep 13 20:56:51.630614: |   d5 43 82 11  fb a9 8a 74  d9 c2 07 b6  54 82 79 b5
Sep 13 20:56:51.630616: |   22 cc 13 0a  a3 ae 5e 6d  98 f0 00 fe  46 85 44 1c
Sep 13 20:56:51.630587: | "ikev2-cert"[1] 192.168.0.1 #1 complete v2 state STATE_PARENT_R1 transition with STF_SUSPEND suspended from complete_v2_state_transition:3313
Sep 13 20:56:51.630647: | stop processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:500 (in ikev2_process_packet() at ikev2.c:1757)
Sep 13 20:56:51.630665: | #1 spent 0.344 milliseconds in ikev2_process_packet()
Sep 13 20:56:51.630623: |   0d a1 41 5e  56 f6 89 b3  96 3c 4b 4d  17 bf cd e6
Sep 13 20:56:51.630677: |   de d6 71 d6  58 9f 4c 4e  2e 8d f4 41  29 0c 55 b8
Sep 13 20:56:51.630680: |   24 c4 20 74  a9 39 e3 8e  ab 5b bd 7e  02 05 89 2f
Sep 13 20:56:51.630682: |   6a c2 ce 93  f8 96 dc e1  34 08 f5 f8  e1 49 35 49
Sep 13 20:56:51.630686: | Started DH shared-secret computation in NSS:
Sep 13 20:56:51.630670: | stop processing: from 192.168.0.1:4500 (in process_md() at demux.c:381)
Sep 13 20:56:51.630698: | processing: STOP state #0 (in process_md() at demux.c:383)
Sep 13 20:56:51.630701: | processing: STOP connection NULL (in process_md() at demux.c:384)
Sep 13 20:56:51.630704: | spent 0.379 milliseconds in comm_handle_cb() reading and processing packet
Sep 13 20:56:51.630852: | newref : g_ir-key@0x55b124e60020 (128-bytes, CONCATENATE_DATA_AND_BASE)
Sep 13 20:56:51.630856: | DH secret MODP1024@0x7f2918002188: computed shared DH secret key@0x55b124e60020
Sep 13 20:56:51.630859: | dh-shared : g^ir-key@0x55b124e60020 (128-bytes, CONCATENATE_DATA_AND_BASE)
Sep 13 20:56:51.630861: | NSS: Started key computation
Sep 13 20:56:51.630863: | calculating skeyseed using prf=sha integ=sha cipherkey-size=24 salt-size=0
Sep 13 20:56:51.630866: | SKEYSEED = prf(Ni | Nr, g^ir) PRF sha init Ni | Nr-chunk@0x7f2910000978 (length 64)
Sep 13 20:56:51.630868: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.630870: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.630871: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.630873: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.630876: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.630878: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.630880: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.630882: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.630884: |     params: 16-bytes@0x7f291fab53f0
Sep 13 20:56:51.630905: |     result: newref Ni | Nr-key@0x55b124e5cf30 (80-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.630908: |     key-offset: 0, key-size: 64
Sep 13 20:56:51.630910: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.630912: |     target: SHA_1_HMAC
Sep 13 20:56:51.630913: |     flags: SIGN
Sep 13 20:56:51.630915: |     key_size: 64-bytes
Sep 13 20:56:51.630917: |     base: base-key@0x55b124e5cf30 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.630919: |     operation: FLAGS_ONLY
Sep 13 20:56:51.630920: |     params: 8-bytes@0x7f291fab53d8
Sep 13 20:56:51.630926: |     result: newref Ni | Nr-key@0x55b124e3b690 (64-bytes, SHA_1_HMAC)(in init_bytes() at ike_alg_prf_mac_nss_ops.c:116)
Sep 13 20:56:51.630929: | Ni | Nr: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:51.630935: | SKEYSEED = prf(Ni | Nr, g^ir) prf: created sha context 0x7f29100009e0 from Ni | Nr-key@0x55b124e3b690
Sep 13 20:56:51.630940: | SKEYSEED = prf(Ni | Nr, g^ir) prf: begin sha with context 0x7f29100009e0 from Ni | Nr-key@0x55b124e3b690
Sep 13 20:56:51.630942: | SKEYSEED = prf(Ni | Nr, g^ir): delref clone-key@0x55b124e3b690
Sep 13 20:56:51.630945: | SKEYSEED = prf(Ni | Nr, g^ir) PRF sha crypt-prf@0x7f2910001278
Sep 13 20:56:51.630947: | SKEYSEED = prf(Ni | Nr, g^ir) PRF sha update g^ir-key@0x55b124e60020 (size 128)
Sep 13 20:56:51.630949: | SKEYSEED = prf(Ni | Nr, g^ir): g^ir-key@0x55b124e60020 (128-bytes, CONCATENATE_DATA_AND_BASE)
Sep 13 20:56:51.630951: | nss hmac digest hack extracting all 128 bytes of key@0x55b124e60020
Sep 13 20:56:51.630953: | nss hmac digest hack: symkey-key@0x55b124e60020 (128-bytes, CONCATENATE_DATA_AND_BASE)
Sep 13 20:56:51.630958: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.630966: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (128-bytes, CONCATENATE_DATA_AND_BASE)
Sep 13 20:56:51.630968: | sizeof bytes 128
Sep 13 20:56:51.630990: | wrapper: (SECItemType)602024089: a1 02 d4 f7  f9 ac 91 70  de e9 01 e5  13 4b a8 07  63 18 5d ec  d9 cc 27 b7  19 1e 2e de  0d 7f 77 1b  4d 9c ed 5e  16 7d d1 9f  d5 50 1e 56  8a 48 7e 62  b3 7d 51 aa  31 f6 55 4f  c9 f3 37 f0  4a c7 55 eb  db 55 7f 35  c5 86 64 76  0a c9 6b 22  a8 05 18 c9  5c f5 73 f0  d4 e0 74 be  eb f1 fc 96  7f fd 9f ad  1d dd 55 cf  c2 1b 4c 29  4d 38 72 e8  54 8f 79 fe  81 2c 11 54  4f 9e 41 5f  99 16 b8 fa  85 3d da 58
Sep 13 20:56:51.630995: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.630998: | nss hmac digest hack extracted len 128 bytes at 0x7f2910001528
Sep 13 20:56:51.631000: | unwrapped:
Sep 13 20:56:51.631002: |   35 af 3d 66  bd 5e 24 02  9a 78 8c c4  7a ed 8b fb
Sep 13 20:56:51.631003: |   80 b6 44 87  6c 0d 4c 53  fd 83 69 2a  23 7c b7 c0
Sep 13 20:56:51.631005: |   7c 4a 1f e5  ad 7e be ad  18 e2 1b 51  a2 4f 09 9f
Sep 13 20:56:51.631007: |   50 bc f9 b2  eb 74 8a 93  0c 21 4e 5d  58 f0 ff 45
Sep 13 20:56:51.631008: |   cf 35 9d d2  5d 9d b5 25  53 8a 83 5b  58 05 4e 18
Sep 13 20:56:51.631010: |   5c d7 4e 69  31 c1 00 f6  2d b6 9f 58  2b 7e 75 42
Sep 13 20:56:51.631012: |   ca 69 b7 d4  da c5 30 14  9a 30 35 48  13 c3 b5 62
Sep 13 20:56:51.631013: |   9f 1d 63 4b  21 47 b5 1b  b2 61 0b 3b  52 25 c2 79
Sep 13 20:56:51.631019: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631021: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.631023: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631025: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631027: |     params: 16-bytes@0x7f291fab5470
Sep 13 20:56:51.631037: |     result: newref final-key@0x55b124e5cf30 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.631040: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.631041: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.631043: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631045: |     key_size: 20-bytes
Sep 13 20:56:51.631046: |     base: base-key@0x55b124e5cf30 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631048: |     operation: FLAGS_ONLY
Sep 13 20:56:51.631050: |     params: 8-bytes@0x7f291fab5458
Sep 13 20:56:51.631055: |     result: newref final-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.631057: | final: delref tmp-key@0x55b124e5cf30
Sep 13 20:56:51.631061: | SKEYSEED = prf(Ni | Nr, g^ir) PRF sha final-key@0x55b124e3b690 (size 20)
Sep 13 20:56:51.631064: | SKEYSEED = prf(Ni | Nr, g^ir): key-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631066: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631068: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.631069: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631071: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631073: |     params: 16-bytes@0x7f291fab53e0
Sep 13 20:56:51.631084: |     result: newref data=Ni-key@0x55b124e39e10 (48-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.631086: |     key-offset: 0, key-size: 32
Sep 13 20:56:51.631088: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.631090: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631091: |     key_size: 32-bytes
Sep 13 20:56:51.631093: |     base: base-key@0x55b124e39e10 (48-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631095: |     operation: FLAGS_ONLY
Sep 13 20:56:51.631096: |     params: 8-bytes@0x7f291fab53c8
Sep 13 20:56:51.631101: |     result: newref data=Ni-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.631103: | data=Ni: delref tmp-key@0x55b124e39e10
Sep 13 20:56:51.631106: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:51.631108: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631112: |     base: base-key@0x55b124e5cf30 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631113: |     params: 16-bytes@0x7f291fab5410
Sep 13 20:56:51.631119: |     result: newref data+=Nr-key@0x55b124e39e10 (64-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.631122: | append_symkey_bytes: delref lhs-key@0x55b124e5cf30
Sep 13 20:56:51.631124: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:51.631126: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631127: |     base: base-key@0x55b124e39e10 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631129: |     params: 16-bytes@0x7f291fab5410
Sep 13 20:56:51.631135: |     result: newref data+=SPIi-key@0x55b124e5cf30 (72-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.631137: | append_symkey_bytes: delref lhs-key@0x55b124e39e10
Sep 13 20:56:51.631139: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:51.631141: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631143: |     base: base-key@0x55b124e5cf30 (72-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631144: |     params: 16-bytes@0x7f291fab5410
Sep 13 20:56:51.631150: |     result: newref data+=SPIr-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.631152: | append_symkey_bytes: delref lhs-key@0x55b124e5cf30
Sep 13 20:56:51.631155: | prf+0 PRF sha init key-key@0x55b124e3b690 (size 20)
Sep 13 20:56:51.631157: | prf+0: key-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631159: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.631161: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.631163: |     target: SHA_1_HMAC
Sep 13 20:56:51.631164: |     flags: SIGN
Sep 13 20:56:51.631166: |     key_size: 20-bytes
Sep 13 20:56:51.631168: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631169: |     operation: FLAGS_ONLY
Sep 13 20:56:51.631171: |     params: 8-bytes@0x7f291fab5318
Sep 13 20:56:51.631176: |     result: newref clone-key@0x55b124e5cf30 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.631180: | prf+0 prf: created sha context 0x7f2910000aa0 from key-key@0x55b124e5cf30
Sep 13 20:56:51.631183: | prf+0 prf: begin sha with context 0x7f2910000aa0 from key-key@0x55b124e5cf30
Sep 13 20:56:51.631185: | prf+0: delref clone-key@0x55b124e5cf30
Sep 13 20:56:51.631187: | prf+0 PRF sha crypt-prf@0x7f2910000b38
Sep 13 20:56:51.631189: | prf+0 PRF sha update seed-key@0x55b124e39e10 (size 80)
Sep 13 20:56:51.631191: | prf+0: seed-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631193: | nss hmac digest hack extracting all 80 bytes of key@0x55b124e39e10
Sep 13 20:56:51.631195: | nss hmac digest hack: symkey-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631197: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631203: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631205: | sizeof bytes 80
Sep 13 20:56:51.631218: | wrapper: (SECItemType)602024119: 38 ac 9b 22  1b bc 7d f8  72 dd d5 9a  0c 96 6c 88  a9 cc 92 7d  07 9f 60 7e  c4 61 7f 57  63 50 2b 53  20 27 2f e7  9d d5 19 b0  19 a9 22 30  8b fc e2 2e  c8 68 a1 24  b1 21 7a 21  a0 99 94 a4  02 23 5f 3d  73 57 06 41  18 e9 11 7e  3f 98 a5 f2  61 e0 72 8f
Sep 13 20:56:51.631224: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.631228: | nss hmac digest hack extracted len 80 bytes at 0x7f2910002bd8
Sep 13 20:56:51.631230: | unwrapped:
Sep 13 20:56:51.631232: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.631233: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.631235: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.631237: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.631239: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.631241: | prf+0 PRF sha update 1++-byte@0x1 (1)
Sep 13 20:56:51.631245: |   01
Sep 13 20:56:51.631250: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631252: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.631254: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631256: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631258: |     params: 16-bytes@0x7f291fab5300
Sep 13 20:56:51.631269: |     result: newref final-key@0x55b124e61c30 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.631272: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.631274: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.631275: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631277: |     key_size: 20-bytes
Sep 13 20:56:51.631279: |     base: base-key@0x55b124e61c30 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631281: |     operation: FLAGS_ONLY
Sep 13 20:56:51.631282: |     params: 8-bytes@0x7f291fab52e8
Sep 13 20:56:51.631287: |     result: newref final-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.631289: | final: delref tmp-key@0x55b124e61c30
Sep 13 20:56:51.631292: | prf+0 PRF sha final-key@0x55b124e5cf30 (size 20)
Sep 13 20:56:51.631295: | prf+0: key-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631297: | prfplus: addref old_t[1]-key@0x55b124e5cf30
Sep 13 20:56:51.631298: | prf+N PRF sha init key-key@0x55b124e3b690 (size 20)
Sep 13 20:56:51.631300: | prf+N: key-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631302: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.631304: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.631305: |     target: SHA_1_HMAC
Sep 13 20:56:51.631307: |     flags: SIGN
Sep 13 20:56:51.631309: |     key_size: 20-bytes
Sep 13 20:56:51.631310: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631312: |     operation: FLAGS_ONLY
Sep 13 20:56:51.631314: |     params: 8-bytes@0x7f291fab5318
Sep 13 20:56:51.631319: |     result: newref clone-key@0x55b124e61c30 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.631323: | prf+N prf: created sha context 0x7f2910000aa0 from key-key@0x55b124e61c30
Sep 13 20:56:51.631326: | prf+N prf: begin sha with context 0x7f2910000aa0 from key-key@0x55b124e61c30
Sep 13 20:56:51.631328: | prf+N: delref clone-key@0x55b124e61c30
Sep 13 20:56:51.631330: | prf+N PRF sha crypt-prf@0x7f2910000a78
Sep 13 20:56:51.631332: | prf+N PRF sha update old_t-key@0x55b124e5cf30 (size 20)
Sep 13 20:56:51.631334: | prf+N: old_t-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631336: | nss hmac digest hack extracting all 20 bytes of key@0x55b124e5cf30
Sep 13 20:56:51.631338: | nss hmac digest hack: symkey-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631340: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631348: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631351: | sizeof bytes 32
Sep 13 20:56:51.631359: | wrapper: (SECItemType)602024138: 50 e8 85 26  65 23 d8 92  f0 39 c7 1c  a9 94 52 de  cc 38 f9 a6  0a 94 b4 27  79 71 ab 09  a0 23 c4 68
Sep 13 20:56:51.631363: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.631366: | nss hmac digest hack extracted len 32 bytes at 0x7f2910001268
Sep 13 20:56:51.631368: | unwrapped:
Sep 13 20:56:51.631369: |   79 2a 46 af  77 76 89 cc  92 1d 78 9d  4c e1 b9 6c
Sep 13 20:56:51.631371: |   e6 06 b0 cd  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:51.631373: | prf+N PRF sha update seed-key@0x55b124e39e10 (size 80)
Sep 13 20:56:51.631376: | prf+N: seed-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631378: | nss hmac digest hack extracting all 80 bytes of key@0x55b124e39e10
Sep 13 20:56:51.631380: | nss hmac digest hack: symkey-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631382: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631389: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631391: | sizeof bytes 80
Sep 13 20:56:51.631403: | wrapper: (SECItemType)602024138: 38 ac 9b 22  1b bc 7d f8  72 dd d5 9a  0c 96 6c 88  a9 cc 92 7d  07 9f 60 7e  c4 61 7f 57  63 50 2b 53  20 27 2f e7  9d d5 19 b0  19 a9 22 30  8b fc e2 2e  c8 68 a1 24  b1 21 7a 21  a0 99 94 a4  02 23 5f 3d  73 57 06 41  18 e9 11 7e  3f 98 a5 f2  61 e0 72 8f
Sep 13 20:56:51.631407: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.631410: | nss hmac digest hack extracted len 80 bytes at 0x7f2910004298
Sep 13 20:56:51.631412: | unwrapped:
Sep 13 20:56:51.631414: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.631416: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.631418: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.631420: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.631421: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.631424: | prf+N PRF sha update N++-byte@0x2 (2)
Sep 13 20:56:51.631426: |   02
Sep 13 20:56:51.631431: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631433: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.631435: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631437: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631439: |     params: 16-bytes@0x7f291fab5300
Sep 13 20:56:51.631450: |     result: newref final-key@0x55b124e3cfa0 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.631453: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.631454: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.631456: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631458: |     key_size: 20-bytes
Sep 13 20:56:51.631460: |     base: base-key@0x55b124e3cfa0 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631462: |     operation: FLAGS_ONLY
Sep 13 20:56:51.631463: |     params: 8-bytes@0x7f291fab52e8
Sep 13 20:56:51.631469: |     result: newref final-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.631471: | final: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:51.631475: | prf+N PRF sha final-key@0x55b124e61c30 (size 20)
Sep 13 20:56:51.631477: | prf+N: key-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631479: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:51.631481: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631482: |     base: base-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631484: |     params: 8-bytes@0x7f291fab53b8
Sep 13 20:56:51.631491: |     result: newref result-key@0x55b124e3cfa0 (40-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:51.631493: | append_symkey_symkey: delref lhs-key@0x55b124e5cf30
Sep 13 20:56:51.631495: | prfplus: delref old_t[N]-key@0x55b124e5cf30
Sep 13 20:56:51.631498: | prf+N PRF sha init key-key@0x55b124e3b690 (size 20)
Sep 13 20:56:51.631500: | prf+N: key-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631502: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.631504: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.631506: |     target: SHA_1_HMAC
Sep 13 20:56:51.631508: |     flags: SIGN
Sep 13 20:56:51.631509: |     key_size: 20-bytes
Sep 13 20:56:51.631512: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631514: |     operation: FLAGS_ONLY
Sep 13 20:56:51.631515: |     params: 8-bytes@0x7f291fab5318
Sep 13 20:56:51.631521: |     result: newref clone-key@0x55b124e5cf30 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.631526: | prf+N prf: created sha context 0x7f2910000aa0 from key-key@0x55b124e5cf30
Sep 13 20:56:51.631529: | prf+N prf: begin sha with context 0x7f2910000aa0 from key-key@0x55b124e5cf30
Sep 13 20:56:51.631531: | prf+N: delref clone-key@0x55b124e5cf30
Sep 13 20:56:51.631533: | prf+N PRF sha crypt-prf@0x7f2910000b38
Sep 13 20:56:51.631537: | prf+N PRF sha update old_t-key@0x55b124e61c30 (size 20)
Sep 13 20:56:51.631540: | prf+N: old_t-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631541: | nss hmac digest hack extracting all 20 bytes of key@0x55b124e61c30
Sep 13 20:56:51.631543: | nss hmac digest hack: symkey-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631545: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631554: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631557: | sizeof bytes 32
Sep 13 20:56:51.631564: | wrapper: (SECItemType)602024138: df 92 2a 2b  d4 ef f7 8c  cb c4 96 ef  63 f0 f6 ff  3d 0d 54 8a  53 65 47 5d  1e 76 ca d9  c9 dd d4 ef
Sep 13 20:56:51.631569: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.631572: | nss hmac digest hack extracted len 32 bytes at 0x7f2910001268
Sep 13 20:56:51.631574: | unwrapped:
Sep 13 20:56:51.631575: |   34 3d 99 77  4b 1e c7 9f  24 5d 2c 6e  7c 69 45 79
Sep 13 20:56:51.631577: |   66 89 8e e8  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:51.631580: | prf+N PRF sha update seed-key@0x55b124e39e10 (size 80)
Sep 13 20:56:51.631582: | prf+N: seed-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631584: | nss hmac digest hack extracting all 80 bytes of key@0x55b124e39e10
Sep 13 20:56:51.631586: | nss hmac digest hack: symkey-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631588: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631592: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631594: | sizeof bytes 80
Sep 13 20:56:51.631605: | wrapper: (SECItemType)602024138: 38 ac 9b 22  1b bc 7d f8  72 dd d5 9a  0c 96 6c 88  a9 cc 92 7d  07 9f 60 7e  c4 61 7f 57  63 50 2b 53  20 27 2f e7  9d d5 19 b0  19 a9 22 30  8b fc e2 2e  c8 68 a1 24  b1 21 7a 21  a0 99 94 a4  02 23 5f 3d  73 57 06 41  18 e9 11 7e  3f 98 a5 f2  61 e0 72 8f
Sep 13 20:56:51.631609: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.631612: | nss hmac digest hack extracted len 80 bytes at 0x7f2910005938
Sep 13 20:56:51.631613: | unwrapped:
Sep 13 20:56:51.631615: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.631617: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.631618: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.631620: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.631622: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.631624: | prf+N PRF sha update N++-byte@0x3 (3)
Sep 13 20:56:51.631627: |   03
Sep 13 20:56:51.631631: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631633: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.631635: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631637: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631639: |     params: 16-bytes@0x7f291fab5300
Sep 13 20:56:51.631649: |     result: newref final-key@0x7f2910001400 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.631652: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.631654: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.631655: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631657: |     key_size: 20-bytes
Sep 13 20:56:51.631659: |     base: base-key@0x7f2910001400 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631661: |     operation: FLAGS_ONLY
Sep 13 20:56:51.631662: |     params: 8-bytes@0x7f291fab52e8
Sep 13 20:56:51.631695: |     result: newref final-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.631702: | final: delref tmp-key@0x7f2910001400
Sep 13 20:56:51.631706: | prf+N PRF sha final-key@0x55b124e5cf30 (size 20)
Sep 13 20:56:51.631709: | prf+N: key-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631711: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:51.631718: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631720: |     base: base-key@0x55b124e3cfa0 (40-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631722: |     params: 8-bytes@0x7f291fab53b8
Sep 13 20:56:51.631729: |     result: newref result-key@0x7f2910001400 (60-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:51.631732: | append_symkey_symkey: delref lhs-key@0x55b124e3cfa0
Sep 13 20:56:51.631735: | prfplus: delref old_t[N]-key@0x55b124e61c30
Sep 13 20:56:51.631738: | prf+N PRF sha init key-key@0x55b124e3b690 (size 20)
Sep 13 20:56:51.631741: | prf+N: key-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631743: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.631745: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.631746: |     target: SHA_1_HMAC
Sep 13 20:56:51.631748: |     flags: SIGN
Sep 13 20:56:51.631750: |     key_size: 20-bytes
Sep 13 20:56:51.631752: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631754: |     operation: FLAGS_ONLY
Sep 13 20:56:51.631755: |     params: 8-bytes@0x7f291fab5318
Sep 13 20:56:51.631761: |     result: newref clone-key@0x55b124e61c30 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.631767: | prf+N prf: created sha context 0x7f2910000aa0 from key-key@0x55b124e61c30
Sep 13 20:56:51.631769: | prf+N prf: begin sha with context 0x7f2910000aa0 from key-key@0x55b124e61c30
Sep 13 20:56:51.631772: | prf+N: delref clone-key@0x55b124e61c30
Sep 13 20:56:51.631774: | prf+N PRF sha crypt-prf@0x7f2910000a08
Sep 13 20:56:51.631776: | prf+N PRF sha update old_t-key@0x55b124e5cf30 (size 20)
Sep 13 20:56:51.631778: | prf+N: old_t-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631779: | nss hmac digest hack extracting all 20 bytes of key@0x55b124e5cf30
Sep 13 20:56:51.631781: | nss hmac digest hack: symkey-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631784: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631789: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631792: | sizeof bytes 32
Sep 13 20:56:51.631801: | wrapper: (SECItemType)602024138: 15 d3 a6 d5  df d2 31 c4  b6 6c e0 05  70 fd f0 6d  c9 2e f2 12  32 7a c1 69  8d cb 2f 9a  5c 25 93 20
Sep 13 20:56:51.631805: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.631808: | nss hmac digest hack extracted len 32 bytes at 0x7f2910001268
Sep 13 20:56:51.631810: | unwrapped:
Sep 13 20:56:51.631812: |   a1 5f 15 12  34 24 35 56  1d e1 fc b6  44 87 72 83
Sep 13 20:56:51.631813: |   96 3c 91 a1  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:51.631816: | prf+N PRF sha update seed-key@0x55b124e39e10 (size 80)
Sep 13 20:56:51.631818: | prf+N: seed-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631820: | nss hmac digest hack extracting all 80 bytes of key@0x55b124e39e10
Sep 13 20:56:51.631822: | nss hmac digest hack: symkey-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631824: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631829: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631831: | sizeof bytes 80
Sep 13 20:56:51.631842: | wrapper: (SECItemType)602024138: 38 ac 9b 22  1b bc 7d f8  72 dd d5 9a  0c 96 6c 88  a9 cc 92 7d  07 9f 60 7e  c4 61 7f 57  63 50 2b 53  20 27 2f e7  9d d5 19 b0  19 a9 22 30  8b fc e2 2e  c8 68 a1 24  b1 21 7a 21  a0 99 94 a4  02 23 5f 3d  73 57 06 41  18 e9 11 7e  3f 98 a5 f2  61 e0 72 8f
Sep 13 20:56:51.631846: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.631849: | nss hmac digest hack extracted len 80 bytes at 0x7f29100010c8
Sep 13 20:56:51.631851: | unwrapped:
Sep 13 20:56:51.631852: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.631854: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.631856: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.631860: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.631862: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.631864: | prf+N PRF sha update N++-byte@0x4 (4)
Sep 13 20:56:51.631866: |   04
Sep 13 20:56:51.631870: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631873: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.631874: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631876: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631878: |     params: 16-bytes@0x7f291fab5300
Sep 13 20:56:51.631889: |     result: newref final-key@0x55b124e3cfa0 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.631891: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.631893: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.631895: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631896: |     key_size: 20-bytes
Sep 13 20:56:51.631898: |     base: base-key@0x55b124e3cfa0 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631900: |     operation: FLAGS_ONLY
Sep 13 20:56:51.631902: |     params: 8-bytes@0x7f291fab52e8
Sep 13 20:56:51.631907: |     result: newref final-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.631909: | final: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:51.631912: | prf+N PRF sha final-key@0x55b124e61c30 (size 20)
Sep 13 20:56:51.631914: | prf+N: key-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631916: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:51.631918: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.631919: |     base: base-key@0x7f2910001400 (60-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631921: |     params: 8-bytes@0x7f291fab53b8
Sep 13 20:56:51.631927: |     result: newref result-key@0x55b124e3cfa0 (80-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:51.631929: | append_symkey_symkey: delref lhs-key@0x7f2910001400
Sep 13 20:56:51.631932: | prfplus: delref old_t[N]-key@0x55b124e5cf30
Sep 13 20:56:51.631935: | prf+N PRF sha init key-key@0x55b124e3b690 (size 20)
Sep 13 20:56:51.631937: | prf+N: key-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631939: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.631940: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.631942: |     target: SHA_1_HMAC
Sep 13 20:56:51.631943: |     flags: SIGN
Sep 13 20:56:51.631945: |     key_size: 20-bytes
Sep 13 20:56:51.631947: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631948: |     operation: FLAGS_ONLY
Sep 13 20:56:51.631950: |     params: 8-bytes@0x7f291fab5318
Sep 13 20:56:51.631955: |     result: newref clone-key@0x55b124e5cf30 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.631959: | prf+N prf: created sha context 0x7f2910000aa0 from key-key@0x55b124e5cf30
Sep 13 20:56:51.631961: | prf+N prf: begin sha with context 0x7f2910000aa0 from key-key@0x55b124e5cf30
Sep 13 20:56:51.631963: | prf+N: delref clone-key@0x55b124e5cf30
Sep 13 20:56:51.631965: | prf+N PRF sha crypt-prf@0x7f2910000a78
Sep 13 20:56:51.631967: | prf+N PRF sha update old_t-key@0x55b124e61c30 (size 20)
Sep 13 20:56:51.631969: | prf+N: old_t-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631971: | nss hmac digest hack extracting all 20 bytes of key@0x55b124e61c30
Sep 13 20:56:51.631973: | nss hmac digest hack: symkey-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631975: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.631980: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.631982: | sizeof bytes 32
Sep 13 20:56:51.631990: | wrapper: (SECItemType)602024138: 5f cb 12 fc  64 88 cd b8  f5 34 e4 5a  c1 3d 54 5c  d6 4b 96 9d  45 1e 6f bf  04 84 03 2b  23 0c cb e5
Sep 13 20:56:51.631994: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.632001: | nss hmac digest hack extracted len 32 bytes at 0x7f2910000c08
Sep 13 20:56:51.632003: | unwrapped:
Sep 13 20:56:51.632005: |   86 c4 97 40  73 98 27 f4  2b da 62 8c  24 79 91 bc
Sep 13 20:56:51.632007: |   34 6f c6 46  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:51.632009: | prf+N PRF sha update seed-key@0x55b124e39e10 (size 80)
Sep 13 20:56:51.632011: | prf+N: seed-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632013: | nss hmac digest hack extracting all 80 bytes of key@0x55b124e39e10
Sep 13 20:56:51.632015: | nss hmac digest hack: symkey-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632017: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632021: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632024: | sizeof bytes 80
Sep 13 20:56:51.632038: | wrapper: (SECItemType)602024138: 38 ac 9b 22  1b bc 7d f8  72 dd d5 9a  0c 96 6c 88  a9 cc 92 7d  07 9f 60 7e  c4 61 7f 57  63 50 2b 53  20 27 2f e7  9d d5 19 b0  19 a9 22 30  8b fc e2 2e  c8 68 a1 24  b1 21 7a 21  a0 99 94 a4  02 23 5f 3d  73 57 06 41  18 e9 11 7e  3f 98 a5 f2  61 e0 72 8f
Sep 13 20:56:51.632042: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.632045: | nss hmac digest hack extracted len 80 bytes at 0x7f29100009d8
Sep 13 20:56:51.632047: | unwrapped:
Sep 13 20:56:51.632049: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.632050: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.632052: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.632054: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.632055: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.632058: | prf+N PRF sha update N++-byte@0x5 (5)
Sep 13 20:56:51.632059: |   05
Sep 13 20:56:51.632064: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632066: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.632067: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632069: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632071: |     params: 16-bytes@0x7f291fab5300
Sep 13 20:56:51.632080: |     result: newref final-key@0x7f2910001400 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.632083: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.632084: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.632086: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632088: |     key_size: 20-bytes
Sep 13 20:56:51.632090: |     base: base-key@0x7f2910001400 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632091: |     operation: FLAGS_ONLY
Sep 13 20:56:51.632093: |     params: 8-bytes@0x7f291fab52e8
Sep 13 20:56:51.632098: |     result: newref final-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.632100: | final: delref tmp-key@0x7f2910001400
Sep 13 20:56:51.632103: | prf+N PRF sha final-key@0x55b124e5cf30 (size 20)
Sep 13 20:56:51.632105: | prf+N: key-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632107: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:51.632109: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632110: |     base: base-key@0x55b124e3cfa0 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632112: |     params: 8-bytes@0x7f291fab53b8
Sep 13 20:56:51.632118: |     result: newref result-key@0x7f2910001400 (100-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:51.632120: | append_symkey_symkey: delref lhs-key@0x55b124e3cfa0
Sep 13 20:56:51.632123: | prfplus: delref old_t[N]-key@0x55b124e61c30
Sep 13 20:56:51.632125: | prf+N PRF sha init key-key@0x55b124e3b690 (size 20)
Sep 13 20:56:51.632128: | prf+N: key-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632129: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.632131: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.632132: |     target: SHA_1_HMAC
Sep 13 20:56:51.632137: |     flags: SIGN
Sep 13 20:56:51.632139: |     key_size: 20-bytes
Sep 13 20:56:51.632141: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632143: |     operation: FLAGS_ONLY
Sep 13 20:56:51.632144: |     params: 8-bytes@0x7f291fab5318
Sep 13 20:56:51.632149: |     result: newref clone-key@0x55b124e61c30 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.632154: | prf+N prf: created sha context 0x7f2910005ac0 from key-key@0x55b124e61c30
Sep 13 20:56:51.632156: | prf+N prf: begin sha with context 0x7f2910005ac0 from key-key@0x55b124e61c30
Sep 13 20:56:51.632158: | prf+N: delref clone-key@0x55b124e61c30
Sep 13 20:56:51.632160: | prf+N PRF sha crypt-prf@0x7f2910000b38
Sep 13 20:56:51.632162: | prf+N PRF sha update old_t-key@0x55b124e5cf30 (size 20)
Sep 13 20:56:51.632164: | prf+N: old_t-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632166: | nss hmac digest hack extracting all 20 bytes of key@0x55b124e5cf30
Sep 13 20:56:51.632168: | nss hmac digest hack: symkey-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632170: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632174: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632176: | sizeof bytes 32
Sep 13 20:56:51.632184: | wrapper: (SECItemType)602024138: f6 35 35 bf  50 b3 1a 99  46 f1 7a 3f  a1 d2 f7 68  de 1f 0a 07  ff e2 0a df  d5 c5 60 28  bd 29 d1 b1
Sep 13 20:56:51.632188: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.632190: | nss hmac digest hack extracted len 32 bytes at 0x7f2910002d08
Sep 13 20:56:51.632192: | unwrapped:
Sep 13 20:56:51.632194: |   2c 5f c2 ee  7e fa 00 c2  23 44 d6 7f  28 44 9a 16
Sep 13 20:56:51.632196: |   46 9a 62 a5  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:51.632198: | prf+N PRF sha update seed-key@0x55b124e39e10 (size 80)
Sep 13 20:56:51.632200: | prf+N: seed-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632202: | nss hmac digest hack extracting all 80 bytes of key@0x55b124e39e10
Sep 13 20:56:51.632204: | nss hmac digest hack: symkey-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632206: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632211: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632213: | sizeof bytes 80
Sep 13 20:56:51.632226: | wrapper: (SECItemType)602024138: 38 ac 9b 22  1b bc 7d f8  72 dd d5 9a  0c 96 6c 88  a9 cc 92 7d  07 9f 60 7e  c4 61 7f 57  63 50 2b 53  20 27 2f e7  9d d5 19 b0  19 a9 22 30  8b fc e2 2e  c8 68 a1 24  b1 21 7a 21  a0 99 94 a4  02 23 5f 3d  73 57 06 41  18 e9 11 7e  3f 98 a5 f2  61 e0 72 8f
Sep 13 20:56:51.632230: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.632233: | nss hmac digest hack extracted len 80 bytes at 0x7f2910000978
Sep 13 20:56:51.632235: | unwrapped:
Sep 13 20:56:51.632237: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.632239: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.632240: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.632242: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.632244: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.632246: | prf+N PRF sha update N++-byte@0x6 (6)
Sep 13 20:56:51.632248: |   06
Sep 13 20:56:51.632252: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632255: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.632257: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632258: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632260: |     params: 16-bytes@0x7f291fab5300
Sep 13 20:56:51.632270: |     result: newref final-key@0x55b124e3cfa0 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.632272: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.632276: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.632278: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632280: |     key_size: 20-bytes
Sep 13 20:56:51.632282: |     base: base-key@0x55b124e3cfa0 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632283: |     operation: FLAGS_ONLY
Sep 13 20:56:51.632285: |     params: 8-bytes@0x7f291fab52e8
Sep 13 20:56:51.632290: |     result: newref final-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.632292: | final: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:51.632295: | prf+N PRF sha final-key@0x55b124e61c30 (size 20)
Sep 13 20:56:51.632297: | prf+N: key-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632299: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:51.632301: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632302: |     base: base-key@0x7f2910001400 (100-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632304: |     params: 8-bytes@0x7f291fab53b8
Sep 13 20:56:51.632310: |     result: newref result-key@0x55b124e3cfa0 (120-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:51.632313: | append_symkey_symkey: delref lhs-key@0x7f2910001400
Sep 13 20:56:51.632315: | prfplus: delref old_t[N]-key@0x55b124e5cf30
Sep 13 20:56:51.632318: | prf+N PRF sha init key-key@0x55b124e3b690 (size 20)
Sep 13 20:56:51.632321: | prf+N: key-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632322: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.632324: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.632325: |     target: SHA_1_HMAC
Sep 13 20:56:51.632327: |     flags: SIGN
Sep 13 20:56:51.632329: |     key_size: 20-bytes
Sep 13 20:56:51.632331: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632332: |     operation: FLAGS_ONLY
Sep 13 20:56:51.632334: |     params: 8-bytes@0x7f291fab5318
Sep 13 20:56:51.632339: |     result: newref clone-key@0x55b124e5cf30 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.632343: | prf+N prf: created sha context 0x7f2910000aa0 from key-key@0x55b124e5cf30
Sep 13 20:56:51.632346: | prf+N prf: begin sha with context 0x7f2910000aa0 from key-key@0x55b124e5cf30
Sep 13 20:56:51.632348: | prf+N: delref clone-key@0x55b124e5cf30
Sep 13 20:56:51.632350: | prf+N PRF sha crypt-prf@0x7f2910000a78
Sep 13 20:56:51.632352: | prf+N PRF sha update old_t-key@0x55b124e61c30 (size 20)
Sep 13 20:56:51.632354: | prf+N: old_t-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632355: | nss hmac digest hack extracting all 20 bytes of key@0x55b124e61c30
Sep 13 20:56:51.632358: | nss hmac digest hack: symkey-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632360: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632365: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632367: | sizeof bytes 32
Sep 13 20:56:51.632375: | wrapper: (SECItemType)602024138: 45 b6 08 63  18 ef cd 49  d7 49 3d 73  59 05 e0 c6  85 7d b0 d1  db e3 f9 84  e7 cc ac 77  90 90 1c 7c
Sep 13 20:56:51.632378: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.632381: | nss hmac digest hack extracted len 32 bytes at 0x7f2910000be8
Sep 13 20:56:51.632383: | unwrapped:
Sep 13 20:56:51.632385: |   62 2a 3a 5f  5c 71 17 30  41 82 6c f3  74 a2 64 7c
Sep 13 20:56:51.632387: |   85 10 15 8e  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:51.632389: | prf+N PRF sha update seed-key@0x55b124e39e10 (size 80)
Sep 13 20:56:51.632392: | prf+N: seed-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632394: | nss hmac digest hack extracting all 80 bytes of key@0x55b124e39e10
Sep 13 20:56:51.632396: | nss hmac digest hack: symkey-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632398: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632403: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632408: | sizeof bytes 80
Sep 13 20:56:51.632419: | wrapper: (SECItemType)602024138: 38 ac 9b 22  1b bc 7d f8  72 dd d5 9a  0c 96 6c 88  a9 cc 92 7d  07 9f 60 7e  c4 61 7f 57  63 50 2b 53  20 27 2f e7  9d d5 19 b0  19 a9 22 30  8b fc e2 2e  c8 68 a1 24  b1 21 7a 21  a0 99 94 a4  02 23 5f 3d  73 57 06 41  18 e9 11 7e  3f 98 a5 f2  61 e0 72 8f
Sep 13 20:56:51.632423: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.632427: | nss hmac digest hack extracted len 80 bytes at 0x7f2910005bd8
Sep 13 20:56:51.632429: | unwrapped:
Sep 13 20:56:51.632431: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.632433: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.632434: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.632436: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.632438: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.632440: | prf+N PRF sha update N++-byte@0x7 (7)
Sep 13 20:56:51.632442: |   07
Sep 13 20:56:51.632447: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632449: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.632451: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632453: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632455: |     params: 16-bytes@0x7f291fab5300
Sep 13 20:56:51.632465: |     result: newref final-key@0x7f2910001400 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.632468: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.632470: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.632471: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632473: |     key_size: 20-bytes
Sep 13 20:56:51.632475: |     base: base-key@0x7f2910001400 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632477: |     operation: FLAGS_ONLY
Sep 13 20:56:51.632479: |     params: 8-bytes@0x7f291fab52e8
Sep 13 20:56:51.632484: |     result: newref final-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.632486: | final: delref tmp-key@0x7f2910001400
Sep 13 20:56:51.632489: | prf+N PRF sha final-key@0x55b124e5cf30 (size 20)
Sep 13 20:56:51.632491: | prf+N: key-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632493: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:51.632495: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632497: |     base: base-key@0x55b124e3cfa0 (120-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632499: |     params: 8-bytes@0x7f291fab53b8
Sep 13 20:56:51.632505: |     result: newref result-key@0x7f2910001400 (140-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:51.632508: | append_symkey_symkey: delref lhs-key@0x55b124e3cfa0
Sep 13 20:56:51.632510: | prfplus: delref old_t[N]-key@0x55b124e61c30
Sep 13 20:56:51.632514: | prf+N PRF sha init key-key@0x55b124e3b690 (size 20)
Sep 13 20:56:51.632516: | prf+N: key-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632518: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.632520: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.632522: |     target: SHA_1_HMAC
Sep 13 20:56:51.632523: |     flags: SIGN
Sep 13 20:56:51.632525: |     key_size: 20-bytes
Sep 13 20:56:51.632527: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632529: |     operation: FLAGS_ONLY
Sep 13 20:56:51.632531: |     params: 8-bytes@0x7f291fab5318
Sep 13 20:56:51.632536: |     result: newref clone-key@0x55b124e61c30 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.632541: | prf+N prf: created sha context 0x7f2910000aa0 from key-key@0x55b124e61c30
Sep 13 20:56:51.632543: | prf+N prf: begin sha with context 0x7f2910000aa0 from key-key@0x55b124e61c30
Sep 13 20:56:51.632545: | prf+N: delref clone-key@0x55b124e61c30
Sep 13 20:56:51.632547: | prf+N PRF sha crypt-prf@0x7f2910000b38
Sep 13 20:56:51.632549: | prf+N PRF sha update old_t-key@0x55b124e5cf30 (size 20)
Sep 13 20:56:51.632554: | prf+N: old_t-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632557: | nss hmac digest hack extracting all 20 bytes of key@0x55b124e5cf30
Sep 13 20:56:51.632559: | nss hmac digest hack: symkey-key@0x55b124e5cf30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632561: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632567: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632569: | sizeof bytes 32
Sep 13 20:56:51.632577: | wrapper: (SECItemType)602024138: 41 c8 c6 ec  20 ed 02 14  e4 05 da f3  6d e1 a2 d0  d7 e4 37 c3  e1 1c 17 c8  47 7a 27 a5  86 f1 13 ce
Sep 13 20:56:51.632581: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.632584: | nss hmac digest hack extracted len 32 bytes at 0x7f2910000be8
Sep 13 20:56:51.632586: | unwrapped:
Sep 13 20:56:51.632588: |   97 5a 07 ae  9a d7 b2 da  3c 68 8e d0  be 3f 3d 94
Sep 13 20:56:51.632590: |   cd 91 36 aa  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:51.632592: | prf+N PRF sha update seed-key@0x55b124e39e10 (size 80)
Sep 13 20:56:51.632594: | prf+N: seed-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632596: | nss hmac digest hack extracting all 80 bytes of key@0x55b124e39e10
Sep 13 20:56:51.632598: | nss hmac digest hack: symkey-key@0x55b124e39e10 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632600: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632605: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632607: | sizeof bytes 80
Sep 13 20:56:51.632619: | wrapper: (SECItemType)602024138: 38 ac 9b 22  1b bc 7d f8  72 dd d5 9a  0c 96 6c 88  a9 cc 92 7d  07 9f 60 7e  c4 61 7f 57  63 50 2b 53  20 27 2f e7  9d d5 19 b0  19 a9 22 30  8b fc e2 2e  c8 68 a1 24  b1 21 7a 21  a0 99 94 a4  02 23 5f 3d  73 57 06 41  18 e9 11 7e  3f 98 a5 f2  61 e0 72 8f
Sep 13 20:56:51.632624: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.632627: | nss hmac digest hack extracted len 80 bytes at 0x7f2910005a08
Sep 13 20:56:51.632629: | unwrapped:
Sep 13 20:56:51.632631: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.632632: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.632634: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.632636: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.632638: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.632640: | prf+N PRF sha update N++-byte@0x8 (8)
Sep 13 20:56:51.632642: |   08
Sep 13 20:56:51.632648: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632650: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.632652: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632653: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.632655: |     params: 16-bytes@0x7f291fab5300
Sep 13 20:56:51.632771: |     result: newref final-key@0x55b124e3cfa0 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.632793: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.632796: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.632798: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632799: |     key_size: 20-bytes
Sep 13 20:56:51.632801: |     base: base-key@0x55b124e3cfa0 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632803: |     operation: FLAGS_ONLY
Sep 13 20:56:51.632805: |     params: 8-bytes@0x7f291fab52e8
Sep 13 20:56:51.632812: |     result: newref final-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.632814: | final: delref tmp-key@0x55b124e3cfa0
Sep 13 20:56:51.632819: | prf+N PRF sha final-key@0x55b124e61c30 (size 20)
Sep 13 20:56:51.632821: | prf+N: key-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632823: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:51.632825: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632832: |     base: base-key@0x7f2910001400 (140-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632834: |     params: 8-bytes@0x7f291fab53b8
Sep 13 20:56:51.632842: |     result: newref result-key@0x55b124e3cfa0 (160-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:51.632844: | append_symkey_symkey: delref lhs-key@0x7f2910001400
Sep 13 20:56:51.632848: | prfplus: delref old_t[N]-key@0x55b124e5cf30
Sep 13 20:56:51.632851: | prfplus: delref old_t[final]-key@0x55b124e61c30
Sep 13 20:56:51.632854: | ike_sa_keymat: delref data-key@0x55b124e39e10
Sep 13 20:56:51.632858: | calc_skeyseed_v2: delref skeyseed_k-key@0x55b124e3b690
Sep 13 20:56:51.632861: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.632863: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.632865: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632866: |     key_size: 20-bytes
Sep 13 20:56:51.632868: |     base: base-key@0x55b124e3cfa0 (160-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632870: |     operation: FLAGS_ONLY
Sep 13 20:56:51.632872: |     params: 8-bytes@0x7f291fab5568
Sep 13 20:56:51.632877: |     result: newref result-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)(in calc_skeyseed_v2() at crypt_dh_v2.c:252)
Sep 13 20:56:51.632879: |     key-offset: 20, key-size: 20
Sep 13 20:56:51.632881: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.632883: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632884: |     key_size: 20-bytes
Sep 13 20:56:51.632886: |     base: base-key@0x55b124e3cfa0 (160-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632888: |     operation: FLAGS_ONLY
Sep 13 20:56:51.632889: |     params: 8-bytes@0x7f291fab5568
Sep 13 20:56:51.632895: |     result: newref result-key@0x55b124e39e10 (20-bytes, EXTRACT_KEY_FROM_KEY)(in calc_skeyseed_v2() at crypt_dh_v2.c:255)
Sep 13 20:56:51.632897: |     key-offset: 40, key-size: 20
Sep 13 20:56:51.632898: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.632900: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632902: |     key_size: 20-bytes
Sep 13 20:56:51.632904: |     base: base-key@0x55b124e3cfa0 (160-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632905: |     operation: FLAGS_ONLY
Sep 13 20:56:51.632907: |     params: 8-bytes@0x7f291fab5568
Sep 13 20:56:51.632912: |     result: newref result-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)(in calc_skeyseed_v2() at crypt_dh_v2.c:258)
Sep 13 20:56:51.632914: |     key-offset: 60, key-size: 24
Sep 13 20:56:51.632916: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.632918: |     target: DES3_CBC
Sep 13 20:56:51.632919: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:51.632921: |     key_size: 24-bytes
Sep 13 20:56:51.632923: |     base: base-key@0x55b124e3cfa0 (160-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632925: |     operation: FLAGS_ONLY
Sep 13 20:56:51.632926: |     params: 8-bytes@0x7f291fab5568
Sep 13 20:56:51.632932: |     result: newref SK_ei_k-key@0x55b124e5cf30 (24-bytes, DES3_CBC)(in calc_skeyseed_v2() at crypt_dh_v2.c:267)
Sep 13 20:56:51.632934: | initiator salt NULL key has no bytes
Sep 13 20:56:51.632936: | calc_skeyseed_v2: delref initiator-salt-key-key@NULL
Sep 13 20:56:51.632938: |     key-offset: 84, key-size: 24
Sep 13 20:56:51.632939: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.632941: |     target: DES3_CBC
Sep 13 20:56:51.632942: |     flags: ENCRYPT+DECRYPT
Sep 13 20:56:51.632944: |     key_size: 24-bytes
Sep 13 20:56:51.632946: |     base: base-key@0x55b124e3cfa0 (160-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632948: |     operation: FLAGS_ONLY
Sep 13 20:56:51.632949: |     params: 8-bytes@0x7f291fab5568
Sep 13 20:56:51.632954: |     result: newref SK_er_k-key@0x7f2910001400 (24-bytes, DES3_CBC)(in calc_skeyseed_v2() at crypt_dh_v2.c:285)
Sep 13 20:56:51.632956: | responder salt NULL key has no bytes
Sep 13 20:56:51.632958: | calc_skeyseed_v2: delref responder-salt-key-key@NULL
Sep 13 20:56:51.632960: |     key-offset: 108, key-size: 20
Sep 13 20:56:51.632962: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.632963: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.632965: |     key_size: 20-bytes
Sep 13 20:56:51.632969: |     base: base-key@0x55b124e3cfa0 (160-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632971: |     operation: FLAGS_ONLY
Sep 13 20:56:51.632972: |     params: 8-bytes@0x7f291fab5568
Sep 13 20:56:51.632980: |     result: newref result-key@0x7f2910001330 (20-bytes, EXTRACT_KEY_FROM_KEY)(in calc_skeyseed_v2() at crypt_dh_v2.c:297)
Sep 13 20:56:51.632983: | chunk_SK_pi extracting all 20 bytes of key@0x7f2910001330
Sep 13 20:56:51.632985: | chunk_SK_pi: symkey-key@0x7f2910001330 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.632987: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.633000: | chunk_SK_pi: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.633003: | sizeof bytes 32
Sep 13 20:56:51.633015: | wrapper: (SECItemType)268459584: 82 27 bb c0  ff 5d 0e 10  81 ed b5 80  d1 db 82 33  a0 32 77 14  4f ef 55 68  81 a1 f7 e5  be 97 e1 2c
Sep 13 20:56:51.633019: | chunk_SK_pi: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.633022: | chunk_SK_pi extracted len 32 bytes at 0x7f2910002d08
Sep 13 20:56:51.633024: | unwrapped:
Sep 13 20:56:51.633026: |   41 82 6c f3  74 a2 64 7c  85 10 15 8e  97 5a 07 ae
Sep 13 20:56:51.633027: |   9a d7 b2 da  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:51.633029: |     key-offset: 128, key-size: 20
Sep 13 20:56:51.633031: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.633032: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.633034: |     key_size: 20-bytes
Sep 13 20:56:51.633036: |     base: base-key@0x55b124e3cfa0 (160-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.633038: |     operation: FLAGS_ONLY
Sep 13 20:56:51.633039: |     params: 8-bytes@0x7f291fab5568
Sep 13 20:56:51.633045: |     result: newref result-key@0x7f2910008390 (20-bytes, EXTRACT_KEY_FROM_KEY)(in calc_skeyseed_v2() at crypt_dh_v2.c:302)
Sep 13 20:56:51.633047: | chunk_SK_pr extracting all 20 bytes of key@0x7f2910008390
Sep 13 20:56:51.633049: | chunk_SK_pr: symkey-key@0x7f2910008390 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.633051: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.633058: | chunk_SK_pr: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.633061: | sizeof bytes 32
Sep 13 20:56:51.633070: | wrapper: (SECItemType)268459584: b5 a0 d7 f4  24 ca 0f 0a  2a 6a eb 07  07 1e 30 2a  35 b7 85 fd  35 a9 cb d0  45 64 f8 34  ca 32 41 60
Sep 13 20:56:51.633074: | chunk_SK_pr: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.633077: | chunk_SK_pr extracted len 32 bytes at 0x7f2910000d78
Sep 13 20:56:51.633079: | unwrapped:
Sep 13 20:56:51.633081: |   3c 68 8e d0  be 3f 3d 94  cd 91 36 aa  fc 3c 3c 3e
Sep 13 20:56:51.633082: |   dd 57 54 29  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:51.633084: | NSS ikev2: finished computing individual keys for IKEv2 SA
Sep 13 20:56:51.633086: | calc_skeyseed_v2: delref finalkey-key@0x55b124e3cfa0
Sep 13 20:56:51.633089: | calc_skeyseed_v2 pointers: shared-key@0x55b124e60020, SK_d-key@0x55b124e3b690, SK_ai-key@0x55b124e39e10, SK_ar-key@0x55b124e61c30, SK_ei-key@0x55b124e5cf30, SK_er-key@0x7f2910001400, SK_pi-key@0x7f2910001330, SK_pr-key@0x7f2910008390
Sep 13 20:56:51.633092: | calc_skeyseed_v2 initiator salt
Sep 13 20:56:51.633093: | 
Sep 13 20:56:51.633095: | calc_skeyseed_v2 responder salt
Sep 13 20:56:51.633097: | 
Sep 13 20:56:51.633099: | calc_skeyseed_v2 SK_pi
Sep 13 20:56:51.633100: |   41 82 6c f3  74 a2 64 7c  85 10 15 8e  97 5a 07 ae
Sep 13 20:56:51.633102: |   9a d7 b2 da
Sep 13 20:56:51.633104: | calc_skeyseed_v2 SK_pr
Sep 13 20:56:51.633105: |   3c 68 8e d0  be 3f 3d 94  cd 91 36 aa  fc 3c 3c 3e
Sep 13 20:56:51.633107: |   dd 57 54 29
Sep 13 20:56:51.633111: | crypto helper 1 finished compute dh (V2) (ikev2_inI2outR2 KE); request ID 2 time elapsed 0.00251 seconds
Sep 13 20:56:51.633117: | (#1) spent 2.51 milliseconds in crypto helper computing work-order 2: ikev2_inI2outR2 KE (pcr)
Sep 13 20:56:51.633120: | crypto helper 1 sending results from work-order 2 for state #1 to event queue
Sep 13 20:56:51.633122: | scheduling resume sending helper answer for #1
Sep 13 20:56:51.633128: | libevent_malloc: newref ptr-libevent@0x7f2910009c38 size 136
Sep 13 20:56:51.633157: | crypto helper 1 waiting (nothing to do)
Sep 13 20:56:51.633177: | processing resume sending helper answer for #1
Sep 13 20:56:51.633192: | start processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:500 (in resume_handler() at server.c:817)
Sep 13 20:56:51.633196: | unsuspending #1 MD 0x55b124e6b188
Sep 13 20:56:51.633198: | crypto helper 1 replies to request ID 2
Sep 13 20:56:51.633200: | calling continuation function 0x55b123d8ab90
Sep 13 20:56:51.633203: | ikev2_ike_sa_process_auth_request_no_skeyid_continue() for #1 STATE_PARENT_R1: calculating g^{xy}, sending R2
Sep 13 20:56:51.633207: | DH secret MODP1024@0x7f2918002188: transferring ownership from helper IKEv2 DH to state #1
Sep 13 20:56:51.633209: | finish_dh_v2: delref st_shared_nss-key@NULL
Sep 13 20:56:51.633211: | #1 in state PARENT_R1: received v2I1, sent v2R1
Sep 13 20:56:51.633215: | auth PRF sha init authkey-key@0x55b124e39e10 (size 20)
Sep 13 20:56:51.633217: | auth: authkey-key@0x55b124e39e10 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.633220: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.633221: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.633223: |     target: SHA_1_HMAC
Sep 13 20:56:51.633225: |     flags: SIGN
Sep 13 20:56:51.633226: |     key_size: 20-bytes
Sep 13 20:56:51.633228: |     base: base-key@0x55b124e39e10 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.633230: |     operation: FLAGS_ONLY
Sep 13 20:56:51.633232: |     params: 8-bytes@0x7ffee51a3e08
Sep 13 20:56:51.633243: |     result: newref clone-key@0x55b124e3cfa0 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.633252: | auth prf: created sha context 0x55b124e6f1e0 from authkey-key@0x55b124e3cfa0
Sep 13 20:56:51.633254: | auth prf: begin sha with context 0x55b124e6f1e0 from authkey-key@0x55b124e3cfa0
Sep 13 20:56:51.633257: | auth: delref clone-key@0x55b124e3cfa0
Sep 13 20:56:51.633259: | auth PRF sha crypt-prf@0x55b124e6ea18
Sep 13 20:56:51.633261: | auth PRF sha update message-bytes@0x55b124e6e2e8 (length 792)
Sep 13 20:56:51.633263: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.633265: |   2e 20 23 08  00 00 00 01  00 00 03 24  23 00 03 08
Sep 13 20:56:51.633266: |   f2 5a 71 50  d6 72 05 bb  b3 c5 53 91  26 23 8c 92
Sep 13 20:56:51.633268: |   03 0f f0 66  3e fa c2 79  7e 8f 72 32  c9 6e ff 55
Sep 13 20:56:51.633270: |   d1 a5 a4 af  7f f2 6f f9  41 77 5a a2  1d d9 d5 83
Sep 13 20:56:51.633271: |   79 91 ad 15  6e 62 6e b7  8e 11 43 9b  8e 6d 95 7a
Sep 13 20:56:51.633273: |   70 31 08 65  3f a8 76 7a  b5 8b cb ad  4f 64 7c 4f
Sep 13 20:56:51.633275: |   0f 65 3a 0c  1a 3c 1a dc  43 ab 8d f6  fc 5c bd 34
Sep 13 20:56:51.633276: |   b3 d9 d7 91  7e 57 da 8a  7d 80 2f b0  e8 dc 20 64
Sep 13 20:56:51.633278: |   7b 13 01 47  c8 9e a4 ad  ff 36 38 c7  80 f0 d4 68
Sep 13 20:56:51.633280: |   92 20 75 61  6e 9f b6 a0  49 f3 73 ac  41 95 12 04
Sep 13 20:56:51.633281: |   ad 81 2a a8  a8 28 33 4a  d0 c6 d0 d4  fa 6a 40 6d
Sep 13 20:56:51.633283: |   53 eb 6f e7  44 d6 31 56  a8 c1 10 96  9b 11 09 16
Sep 13 20:56:51.633284: |   a8 63 b8 e5  04 73 16 b9  92 cc cd cd  28 7c c4 0e
Sep 13 20:56:51.633286: |   3e ec d2 d3  5a 5d a7 c3  5d cc 92 e7  9e 13 8b c6
Sep 13 20:56:51.633288: |   2e 8c b3 a1  e4 4e f5 9c  b1 66 0f a1  3b ab 24 3c
Sep 13 20:56:51.633289: |   80 5b 2c 29  92 ab e4 ba  22 05 49 4c  82 99 1a b3
Sep 13 20:56:51.633291: |   08 c3 01 04  99 f5 db f8  2d 9c 02 8f  9a 89 37 db
Sep 13 20:56:51.633293: |   7b 00 95 67  10 17 2b dd  c3 48 f9 14  60 d8 2d 12
Sep 13 20:56:51.633294: |   26 d4 50 b5  5c 65 71 d7  d4 bd dd 6f  96 08 70 fb
Sep 13 20:56:51.633296: |   95 7a 85 0d  bf c0 ac 1a  08 29 cb 2c  b9 77 76 c9
Sep 13 20:56:51.633297: |   af ec 3f 44  b2 d6 e0 5c  9f cd 73 b8  f3 2c 86 7e
Sep 13 20:56:51.633299: |   0d d7 8d 2c  18 8a 3d 23  ab 78 ec a0  49 8f e0 ba
Sep 13 20:56:51.633301: |   f3 6f d9 a9  3a ca 4a f2  8a 4b 34 46  72 57 69 44
Sep 13 20:56:51.633307: |   44 05 ba 96  45 69 56 58  97 69 8e d7  fa b0 81 1b
Sep 13 20:56:51.633309: |   16 47 4d 28  61 48 73 79  fc ac 90 b2  75 1d ad 52
Sep 13 20:56:51.633311: |   f5 ba 39 37  ef 95 0c 76  4d e3 64 34  97 e4 a9 f1
Sep 13 20:56:51.633312: |   c8 96 4b b1  f2 61 b4 8c  28 ee 69 a7  25 84 b8 6e
Sep 13 20:56:51.633314: |   8a f7 2a 1c  54 c3 70 63  74 9e 73 c2  93 e2 68 9a
Sep 13 20:56:51.633316: |   fa a6 1e 91  57 61 6f 79  c0 6b d6 42  9f bf d1 90
Sep 13 20:56:51.633317: |   a5 91 d2 42  57 e3 09 90  4e 61 e8 7c  e4 3b 1a ee
Sep 13 20:56:51.633319: |   ea 8d d1 99  dd e5 02 28  4e db f5 2a  53 06 49 f1
Sep 13 20:56:51.633320: |   40 ef 81 14  d0 ac 8c 0b  9d 12 e9 a3  d4 48 b8 d1
Sep 13 20:56:51.633322: |   a3 cd da 87  db 08 62 3e  10 91 f4 97  b3 7c 71 1a
Sep 13 20:56:51.633324: |   19 ab 8a 8e  4d 4e 5f 5b  98 6f ac e6  28 ab f4 5d
Sep 13 20:56:51.633325: |   0f 89 1f 5d  80 b1 76 ed  c7 49 e1 6f  90 3a 83 fe
Sep 13 20:56:51.633327: |   c8 13 a2 d8  b1 8d 42 94  5b 59 9a 97  1a 66 89 25
Sep 13 20:56:51.633328: |   03 bc c8 8a  0c c1 48 e6  34 02 5e 95  93 59 74 90
Sep 13 20:56:51.633330: |   f8 77 a8 db  76 ce eb 83  50 91 18 3e  39 49 95 29
Sep 13 20:56:51.633332: |   04 4d 51 60  b5 eb 6d 08  8b 72 aa 90  ca 8a 72 20
Sep 13 20:56:51.633333: |   41 27 4c 6e  6a 58 4a f9  18 70 c2 44  92 ef a1 47
Sep 13 20:56:51.633335: |   2b c8 9a 49  d4 25 f8 46  2f c0 df 0a  bf bf 2d 28
Sep 13 20:56:51.633337: |   40 85 5b 46  8d 36 ad 67  9e dd 56 a7  20 9f 3e 36
Sep 13 20:56:51.633338: |   0a ee 9c 53  c6 33 fd 12  1e e8 0d 5a  5f 6f 7d c9
Sep 13 20:56:51.633340: |   4d 3c 43 77  49 19 7d c9  a2 a4 35 f7  3e f5 c7 1b
Sep 13 20:56:51.633342: |   e0 3f ba 4e  ef a7 94 2c  7a 04 51 4f  3e e7 d8 d0
Sep 13 20:56:51.633343: |   18 cd 0d d9  82 2f 2c 89  5b 04 65 5e  eb b9 87 6e
Sep 13 20:56:51.633345: |   7e 51 a0 e5  ad e5 05 d4  7e 7d 13 5a  55 27 9f 34
Sep 13 20:56:51.633346: |   9c 65 45 d2  47 bb 29 6e  a6 0c 17 cf  4a c1 3d a0
Sep 13 20:56:51.633348: |   96 a5 88 ea  84 ae cf 71
Sep 13 20:56:51.633356: | auth PRF sha final length 12
Sep 13 20:56:51.633358: |   3d c9 1c ee  6b bc 4f 29  f5 4b 83 c3
Sep 13 20:56:51.633361: | authenticator matched
Sep 13 20:56:51.633363: | construct_enc_iv: decryption IV/starting-variable: salt-size=0 wire-IV-size=8 block-size 8
Sep 13 20:56:51.633365: | construct_enc_iv: decryption IV/starting-variable: computed counter-size=0
Sep 13 20:56:51.633367: | decryption IV/starting-variable
Sep 13 20:56:51.633368: |   f2 5a 71 50  d6 72 05 bb
Sep 13 20:56:51.633370: | payload before decryption:
Sep 13 20:56:51.633372: |   b3 c5 53 91  26 23 8c 92  03 0f f0 66  3e fa c2 79
Sep 13 20:56:51.633374: |   7e 8f 72 32  c9 6e ff 55  d1 a5 a4 af  7f f2 6f f9
Sep 13 20:56:51.633375: |   41 77 5a a2  1d d9 d5 83  79 91 ad 15  6e 62 6e b7
Sep 13 20:56:51.633377: |   8e 11 43 9b  8e 6d 95 7a  70 31 08 65  3f a8 76 7a
Sep 13 20:56:51.633378: |   b5 8b cb ad  4f 64 7c 4f  0f 65 3a 0c  1a 3c 1a dc
Sep 13 20:56:51.633380: |   43 ab 8d f6  fc 5c bd 34  b3 d9 d7 91  7e 57 da 8a
Sep 13 20:56:51.633382: |   7d 80 2f b0  e8 dc 20 64  7b 13 01 47  c8 9e a4 ad
Sep 13 20:56:51.633383: |   ff 36 38 c7  80 f0 d4 68  92 20 75 61  6e 9f b6 a0
Sep 13 20:56:51.633385: |   49 f3 73 ac  41 95 12 04  ad 81 2a a8  a8 28 33 4a
Sep 13 20:56:51.633387: |   d0 c6 d0 d4  fa 6a 40 6d  53 eb 6f e7  44 d6 31 56
Sep 13 20:56:51.633388: |   a8 c1 10 96  9b 11 09 16  a8 63 b8 e5  04 73 16 b9
Sep 13 20:56:51.633390: |   92 cc cd cd  28 7c c4 0e  3e ec d2 d3  5a 5d a7 c3
Sep 13 20:56:51.633392: |   5d cc 92 e7  9e 13 8b c6  2e 8c b3 a1  e4 4e f5 9c
Sep 13 20:56:51.633393: |   b1 66 0f a1  3b ab 24 3c  80 5b 2c 29  92 ab e4 ba
Sep 13 20:56:51.633395: |   22 05 49 4c  82 99 1a b3  08 c3 01 04  99 f5 db f8
Sep 13 20:56:51.633397: |   2d 9c 02 8f  9a 89 37 db  7b 00 95 67  10 17 2b dd
Sep 13 20:56:51.633398: |   c3 48 f9 14  60 d8 2d 12  26 d4 50 b5  5c 65 71 d7
Sep 13 20:56:51.633400: |   d4 bd dd 6f  96 08 70 fb  95 7a 85 0d  bf c0 ac 1a
Sep 13 20:56:51.633402: |   08 29 cb 2c  b9 77 76 c9  af ec 3f 44  b2 d6 e0 5c
Sep 13 20:56:51.633403: |   9f cd 73 b8  f3 2c 86 7e  0d d7 8d 2c  18 8a 3d 23
Sep 13 20:56:51.633407: |   ab 78 ec a0  49 8f e0 ba  f3 6f d9 a9  3a ca 4a f2
Sep 13 20:56:51.633409: |   8a 4b 34 46  72 57 69 44  44 05 ba 96  45 69 56 58
Sep 13 20:56:51.633410: |   97 69 8e d7  fa b0 81 1b  16 47 4d 28  61 48 73 79
Sep 13 20:56:51.633412: |   fc ac 90 b2  75 1d ad 52  f5 ba 39 37  ef 95 0c 76
Sep 13 20:56:51.633414: |   4d e3 64 34  97 e4 a9 f1  c8 96 4b b1  f2 61 b4 8c
Sep 13 20:56:51.633415: |   28 ee 69 a7  25 84 b8 6e  8a f7 2a 1c  54 c3 70 63
Sep 13 20:56:51.633417: |   74 9e 73 c2  93 e2 68 9a  fa a6 1e 91  57 61 6f 79
Sep 13 20:56:51.633419: |   c0 6b d6 42  9f bf d1 90  a5 91 d2 42  57 e3 09 90
Sep 13 20:56:51.633420: |   4e 61 e8 7c  e4 3b 1a ee  ea 8d d1 99  dd e5 02 28
Sep 13 20:56:51.633422: |   4e db f5 2a  53 06 49 f1  40 ef 81 14  d0 ac 8c 0b
Sep 13 20:56:51.633424: |   9d 12 e9 a3  d4 48 b8 d1  a3 cd da 87  db 08 62 3e
Sep 13 20:56:51.633425: |   10 91 f4 97  b3 7c 71 1a  19 ab 8a 8e  4d 4e 5f 5b
Sep 13 20:56:51.633427: |   98 6f ac e6  28 ab f4 5d  0f 89 1f 5d  80 b1 76 ed
Sep 13 20:56:51.633429: |   c7 49 e1 6f  90 3a 83 fe  c8 13 a2 d8  b1 8d 42 94
Sep 13 20:56:51.633430: |   5b 59 9a 97  1a 66 89 25  03 bc c8 8a  0c c1 48 e6
Sep 13 20:56:51.633432: |   34 02 5e 95  93 59 74 90  f8 77 a8 db  76 ce eb 83
Sep 13 20:56:51.633433: |   50 91 18 3e  39 49 95 29  04 4d 51 60  b5 eb 6d 08
Sep 13 20:56:51.633435: |   8b 72 aa 90  ca 8a 72 20  41 27 4c 6e  6a 58 4a f9
Sep 13 20:56:51.633437: |   18 70 c2 44  92 ef a1 47  2b c8 9a 49  d4 25 f8 46
Sep 13 20:56:51.633438: |   2f c0 df 0a  bf bf 2d 28  40 85 5b 46  8d 36 ad 67
Sep 13 20:56:51.633440: |   9e dd 56 a7  20 9f 3e 36  0a ee 9c 53  c6 33 fd 12
Sep 13 20:56:51.633442: |   1e e8 0d 5a  5f 6f 7d c9  4d 3c 43 77  49 19 7d c9
Sep 13 20:56:51.633443: |   a2 a4 35 f7  3e f5 c7 1b  e0 3f ba 4e  ef a7 94 2c
Sep 13 20:56:51.633445: |   7a 04 51 4f  3e e7 d8 d0  18 cd 0d d9  82 2f 2c 89
Sep 13 20:56:51.633447: |   5b 04 65 5e  eb b9 87 6e  7e 51 a0 e5  ad e5 05 d4
Sep 13 20:56:51.633448: |   7e 7d 13 5a  55 27 9f 34  9c 65 45 d2  47 bb 29 6e
Sep 13 20:56:51.633450: |   a6 0c 17 cf  4a c1 3d a0  96 a5 88 ea  84 ae cf 71
Sep 13 20:56:51.633452: | NSS ike_alg_nss_cbc: 3des_cbc - enter
Sep 13 20:56:51.633485: | NSS ike_alg_nss_cbc: 3des_cbc - exit
Sep 13 20:56:51.633487: | payload after decryption:
Sep 13 20:56:51.633489: |   25 00 00 0d  02 00 00 00  2a 2e 6f 72  67 27 00 01
Sep 13 20:56:51.633491: |   fe 04 30 82  01 f5 30 82  01 5e a0 03  02 01 02 02
Sep 13 20:56:51.633493: |   05 00 b5 e3  80 c0 30 0d  06 09 2a 86  48 86 f7 0d
Sep 13 20:56:51.633494: |   01 01 0b 05  00 30 2b 31  15 30 13 06  03 55 04 03
Sep 13 20:56:51.633496: |   13 0c 49 4b  45 76 32 20  56 50 4e 20  43 41 31 12
Sep 13 20:56:51.633498: |   30 10 06 03  55 04 0a 13  09 49 4b 45  76 32 20 56
Sep 13 20:56:51.633499: |   50 4e 30 1e  17 0d 32 30  30 39 31 32  31 31 32 32
Sep 13 20:56:51.633501: |   35 38 5a 17  0d 33 30 30  39 31 32 31  31 32 32 35
Sep 13 20:56:51.633503: |   38 5a 30 10  31 0e 30 0c  06 03 55 04  03 13 05 61
Sep 13 20:56:51.633504: |   62 63 64 65  30 81 9f 30  0d 06 09 2a  86 48 86 f7
Sep 13 20:56:51.633506: |   0d 01 01 01  05 00 03 81  8d 00 30 81  89 02 81 81
Sep 13 20:56:51.633508: |   00 9d 92 a1  48 cb cc 37  99 5c ac 62  21 17 b1 14
Sep 13 20:56:51.633510: |   49 2c f4 ab  76 69 74 65  f8 03 e6 cc  10 9d 0c e6
Sep 13 20:56:51.633511: |   ea cf de 58  8c be ae 43  ec c6 b1 c6  17 1a 78 e1
Sep 13 20:56:51.633513: |   a1 94 97 2b  7f ef 81 4d  7c 62 54 a8  24 dc 72 3f
Sep 13 20:56:51.633515: |   dd 67 93 bc  70 8b 16 be  3d 2a 5d 15  16 d2 20 9d
Sep 13 20:56:51.633516: |   cb 3c ff 41  3d f2 53 f7  9f 95 5c 2c  93 8c 5d 7c
Sep 13 20:56:51.633518: |   73 ba 4a 62  ee d9 cb e1  e3 3b c6 6a  a1 71 a0 e7
Sep 13 20:56:51.633520: |   e0 85 09 ed  62 f3 49 d5  e4 83 a4 ce  86 87 46 6c
Sep 13 20:56:51.633522: |   79 02 03 01  00 01 a3 40  30 3e 30 10  06 03 55 1d
Sep 13 20:56:51.633523: |   11 04 09 30  07 82 05 2a  2e 6f 72 67  30 1d 06 03
Sep 13 20:56:51.633525: |   55 1d 25 04  16 30 14 06  08 2b 06 01  05 05 07 03
Sep 13 20:56:51.633529: |   01 06 08 2b  06 01 05 05  07 03 02 30  0b 06 03 55
Sep 13 20:56:51.633531: |   1d 0f 04 04  03 02 05 a0  30 0d 06 09  2a 86 48 86
Sep 13 20:56:51.633533: |   f7 0d 01 01  0b 05 00 03  81 81 00 02  3f ba 40 34
Sep 13 20:56:51.633535: |   d6 f2 e0 ef  55 57 2b 6a  2e 5f 55 6b  b4 41 b2 fb
Sep 13 20:56:51.633537: |   2f 2d a1 da  cb 58 16 6d  0b 80 9f 7c  fb 10 4f a4
Sep 13 20:56:51.633538: |   43 63 3f 0e  da da be 98  a5 2c 1b 92  75 c4 66 0a
Sep 13 20:56:51.633540: |   9a 7d c7 0a  2b 5c 14 06  94 33 58 5c  c9 75 bc 83
Sep 13 20:56:51.633542: |   e9 63 46 59  39 c2 3e a4  14 70 d3 07  70 24 dc cd
Sep 13 20:56:51.633544: |   58 d4 8a 35  56 54 9b 58  be 8e fe 7b  df 6e ad 97
Sep 13 20:56:51.633545: |   e4 2c 61 7f  3b 0c 1c 54  eb 49 e3 52  cc 76 04 70
Sep 13 20:56:51.633547: |   4f 8b 11 38  22 1b b2 65  25 3f 5f 21  00 00 88 01
Sep 13 20:56:51.633549: |   00 00 00 48  d2 a4 60 95  2e c0 ac c0  b5 48 57 c1
Sep 13 20:56:51.633550: |   76 2e 2d c5  40 c3 4b 04  7d dd eb 22  d4 c7 3f be
Sep 13 20:56:51.633552: |   65 de 6f 8f  f5 5a 93 33  7f 04 12 7d  4b d7 8c 26
Sep 13 20:56:51.633554: |   27 94 6a 62  4c 95 aa c4  0a 9e ea e0  cb 44 4f f0
Sep 13 20:56:51.633555: |   2f 91 0b 64  67 b1 b1 35  b2 89 7e 90  6a d5 7c b7
Sep 13 20:56:51.633557: |   3b e0 a8 b4  f0 7a 2f a2  fe fb 42 76  8d 50 56 3f
Sep 13 20:56:51.633559: |   fb e6 ae 95  88 4a 8d 2e  4e a6 67 cf  ae 22 64 52
Sep 13 20:56:51.633560: |   47 b3 0b 20  f4 e6 d1 42  5d 7a a5 ac  3f 1a 7f b6
Sep 13 20:56:51.633562: |   21 33 0a 2c  00 00 28 00  00 00 24 01  03 04 03 0a
Sep 13 20:56:51.633564: |   d2 d1 db 03  00 00 08 01  00 00 03 03  00 00 08 03
Sep 13 20:56:51.633565: |   00 00 02 00  00 00 08 05  00 00 00 2d  00 00 18 01
Sep 13 20:56:51.633567: |   00 00 00 07  00 00 10 00  00 ff ff c0  a8 00 01 c0
Sep 13 20:56:51.633569: |   a8 00 ff 00  00 00 18 01  00 00 00 07  00 00 10 00
Sep 13 20:56:51.633571: |   00 ff ff c0  a8 00 01 c0  a8 00 ff 00  00 00 00 04
Sep 13 20:56:51.633573: | stripping 5 octets as pad
Sep 13 20:56:51.633576: | #1 ikev2 ISAKMP_v2_IKE_AUTH decrypt success
Sep 13 20:56:51.633578: | Now let's proceed with payload (ISAKMP_NEXT_v2IDi)
Sep 13 20:56:51.633582: | **parse IKEv2 Identification - Initiator - Payload:
Sep 13 20:56:51.633584: |    next payload type: ISAKMP_NEXT_v2CERT (0x25)
Sep 13 20:56:51.633586: |    flags: none (0x0)
Sep 13 20:56:51.633589: |    length: 13 (00 0d)
Sep 13 20:56:51.633592: |    ID type: ID_FQDN (0x2)
Sep 13 20:56:51.633593: | processing payload: ISAKMP_NEXT_v2IDi (len=5)
Sep 13 20:56:51.633595: | Now let's proceed with payload (ISAKMP_NEXT_v2CERT)
Sep 13 20:56:51.633598: | **parse IKEv2 Certificate Payload:
Sep 13 20:56:51.633600: |    next payload type: ISAKMP_NEXT_v2AUTH (0x27)
Sep 13 20:56:51.633602: |    flags: none (0x0)
Sep 13 20:56:51.633604: |    length: 510 (01 fe)
Sep 13 20:56:51.633606: |    ikev2 cert encoding: CERT_X509_SIGNATURE (0x4)
Sep 13 20:56:51.633608: | processing payload: ISAKMP_NEXT_v2CERT (len=505)
Sep 13 20:56:51.633610: | Now let's proceed with payload (ISAKMP_NEXT_v2AUTH)
Sep 13 20:56:51.633612: | **parse IKEv2 Authentication Payload:
Sep 13 20:56:51.633614: |    next payload type: ISAKMP_NEXT_v2SA (0x21)
Sep 13 20:56:51.633616: |    flags: none (0x0)
Sep 13 20:56:51.633618: |    length: 136 (00 88)
Sep 13 20:56:51.633620: |    auth method: IKEv2_AUTH_RSA (0x1)
Sep 13 20:56:51.633622: | processing payload: ISAKMP_NEXT_v2AUTH (len=128)
Sep 13 20:56:51.633623: | Now let's proceed with payload (ISAKMP_NEXT_v2SA)
Sep 13 20:56:51.633625: | **parse IKEv2 Security Association Payload:
Sep 13 20:56:51.633627: |    next payload type: ISAKMP_NEXT_v2TSi (0x2c)
Sep 13 20:56:51.633629: |    flags: none (0x0)
Sep 13 20:56:51.633631: |    length: 40 (00 28)
Sep 13 20:56:51.633633: | processing payload: ISAKMP_NEXT_v2SA (len=36)
Sep 13 20:56:51.633635: | Now let's proceed with payload (ISAKMP_NEXT_v2TSi)
Sep 13 20:56:51.633637: | **parse IKEv2 Traffic Selector - Initiator - Payload:
Sep 13 20:56:51.633639: |    next payload type: ISAKMP_NEXT_v2TSr (0x2d)
Sep 13 20:56:51.633641: |    flags: none (0x0)
Sep 13 20:56:51.633645: |    length: 24 (00 18)
Sep 13 20:56:51.633647: |    number of TS: 1 (01)
Sep 13 20:56:51.633649: | processing payload: ISAKMP_NEXT_v2TSi (len=16)
Sep 13 20:56:51.633651: | Now let's proceed with payload (ISAKMP_NEXT_v2TSr)
Sep 13 20:56:51.633653: | **parse IKEv2 Traffic Selector - Responder - Payload:
Sep 13 20:56:51.633655: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.633657: |    flags: none (0x0)
Sep 13 20:56:51.633659: |    length: 24 (00 18)
Sep 13 20:56:51.633678: |    number of TS: 1 (01)
Sep 13 20:56:51.633774: | processing payload: ISAKMP_NEXT_v2TSr (len=16)
Sep 13 20:56:51.633781: | selected state microcode Responder: process IKE_AUTH request
Sep 13 20:56:51.633786: | Message ID: IKE #1 responder starting message request 1: ike.initiator.sent=-1 ike.initiator.recv=-1 ike.responder.sent=0 ike.responder.recv=0 ike.wip.initiator=-1 ike.wip.responder=-1->1
Sep 13 20:56:51.633788: | calling processor Responder: process IKE_AUTH request
Sep 13 20:56:51.633798: "ikev2-cert"[1] 192.168.0.1 #1: processing decrypted IKE_AUTH request: SK{IDi,CERT,AUTH,SA,TSi,TSr}
Sep 13 20:56:51.633804: | #1 updating local interface from 192.168.0.136:500 to 192.168.0.136:4500 using md->iface (in update_ike_endpoints() at state.c:2627)
Sep 13 20:56:51.633808: | global one-shot timer EVENT_FREE_ROOT_CERTS scheduled in 300 seconds
Sep 13 20:56:51.633813: loading root certificate cache
Sep 13 20:56:51.633817: | newref root_certs@0x55b124e6a908(0->1) (in decode_certs() at x509.c:713)
Sep 13 20:56:51.633819: | addref root_certs@0x55b124e6a908(1->2) (in decode_certs() at x509.c:713)
Sep 13 20:56:51.637016: | spent 3.18 milliseconds in root_certs_addref() calling PK11_ListCertsInSlot()
Sep 13 20:56:51.637037: | discarding non-CA cert O=IKEv2 VPN,CN=192.168.0.136
Sep 13 20:56:51.637041: | adding the CA+root cert O=IKEv2 VPN,CN=IKEv2 VPN CA
Sep 13 20:56:51.637044: | discarding non-CA cert CN=abcde
Sep 13 20:56:51.637063: | spent 0.0254 milliseconds in root_certs_addref() filtering CAs
Sep 13 20:56:51.637067: |       #1 spent 3.26 milliseconds
Sep 13 20:56:51.637069: | checking for known CERT payloads
Sep 13 20:56:51.637072: | saving certificate of type 'X509_SIGNATURE'
Sep 13 20:56:51.638534: | decoded cert: CN=abcde
Sep 13 20:56:51.638547: |       #1 spent 1.48 milliseconds in find_and_verify_certs() calling decode_cert_payloads()
Sep 13 20:56:51.638551: | cert_issuer_has_current_crl: looking for a CRL issued by O=IKEv2 VPN,CN=IKEv2 VPN CA
Sep 13 20:56:51.638807: |       #1 spent 0.254 milliseconds in find_and_verify_certs() calling crl_update_check()
Sep 13 20:56:51.638813: | missing or expired CRL
Sep 13 20:56:51.638816: | crl_strict: 0, ocsp: 0, ocsp_strict: 0, ocsp_post: 0
Sep 13 20:56:51.638818: | verify_end_cert verifying CN=abcde using:
Sep 13 20:56:51.638820: |   trusted CA: O=IKEv2 VPN,CN=IKEv2 VPN CA
Sep 13 20:56:51.638822: | verify_end_cert trying profile TLS Client
Sep 13 20:56:51.639574: | certificate is valid (profile TLS Client)
Sep 13 20:56:51.639584: |       #1 spent 0.767 milliseconds in find_and_verify_certs() calling verify_end_cert()
Sep 13 20:56:51.639587: | delref root_certs@0x55b124e6a908(2->1) (in decode_certs() at x509.c:717)
Sep 13 20:56:51.639592: "ikev2-cert"[1] 192.168.0.1 #1: certificate verified OK: CN=abcde
Sep 13 20:56:51.639887: | get_pluto_gn_from_nss_cert: allocated pluto_gn 0x55b124e6ecf8
Sep 13 20:56:51.639895: | get_pluto_gn_from_nss_cert: allocated pluto_gn 0x55b124e7d0f8
Sep 13 20:56:51.639975: | unreference key: 0x55b124e73448 CN=abcde cnt 1--
Sep 13 20:56:51.640023: |       #1 spent 0.426 milliseconds in decode_certs() calling add_pubkey_from_nss_cert()
Sep 13 20:56:51.640028: |     #1 spent 6.22 milliseconds in decode_certs()
Sep 13 20:56:51.640034: | subjectAltname 'user1.org' matched '*.org' in certificate
Sep 13 20:56:51.640037: | X509: CERT and ID matches current connection
Sep 13 20:56:51.640041: | refine_host_connection for IKEv2: starting with "ikev2-cert"[1] 192.168.0.1
Sep 13 20:56:51.640043: |    match_id a=@*.org
Sep 13 20:56:51.640051: |             b=@user1.org
Sep 13 20:56:51.640053: |    results  fail
Sep 13 20:56:51.640057: | trusted_ca_nss: trustee A = 'CN=IKEv2 VPN CA, O=IKEv2 VPN'
Sep 13 20:56:51.640059: | trusted_ca_nss: trustor B = 'CN=IKEv2 VPN CA, O=IKEv2 VPN'
Sep 13 20:56:51.640064: | refine_host_connection: checking "ikev2-cert"[1] 192.168.0.1 against "ikev2-cert"[1] 192.168.0.1, best=(none) with match=0(id=0(0)/ca=1(0)/reqca=1(0))
Sep 13 20:56:51.640065: | Warning: not switching back to template of current instance
Sep 13 20:56:51.640067: | No IDr payload received from peer
Sep 13 20:56:51.640069: | skipping because peer_id does not match
Sep 13 20:56:51.640071: |    match_id a=@*.org
Sep 13 20:56:51.640072: |             b=@user1.org
Sep 13 20:56:51.640074: |    results  fail
Sep 13 20:56:51.640077: | trusted_ca_nss: trustee A = 'CN=IKEv2 VPN CA, O=IKEv2 VPN'
Sep 13 20:56:51.640079: | trusted_ca_nss: trustor B = 'CN=IKEv2 VPN CA, O=IKEv2 VPN'
Sep 13 20:56:51.640082: | refine_host_connection: checking "ikev2-cert"[1] 192.168.0.1 against "ikev2-cert", best=(none) with match=0(id=0(0)/ca=1(0)/reqca=1(0))
Sep 13 20:56:51.640084: | Warning: not switching back to template of current instance
Sep 13 20:56:51.640085: | No IDr payload received from peer
Sep 13 20:56:51.640087: | skipping because peer_id does not match
Sep 13 20:56:51.640089: | refine going into 2nd loop allowing instantiated conns as well
Sep 13 20:56:51.640091: | returning since no better match than original best_found
Sep 13 20:56:51.640093: | no suitable connection for peer '@*.org'
Sep 13 20:56:51.640095: | Peer ID matches and no better connection found - continuing with existing connection
Sep 13 20:56:51.640097: | offered CA: 'CN=IKEv2 VPN CA, O=IKEv2 VPN'
Sep 13 20:56:51.640101: "ikev2-cert"[1] 192.168.0.1 #1: IKEv2 mode peer ID is ID_FQDN: '@*.org'
Sep 13 20:56:51.640104: | IDi verify hash PRF sha init skey_pi-key@0x7f2910001330 (size 20)
Sep 13 20:56:51.640107: | IDi verify hash: skey_pi-key@0x7f2910001330 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.640109: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.640111: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.640113: |     target: SHA_1_HMAC
Sep 13 20:56:51.640114: |     flags: SIGN
Sep 13 20:56:51.640116: |     key_size: 20-bytes
Sep 13 20:56:51.640118: |     base: base-key@0x7f2910001330 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.640120: |     operation: FLAGS_ONLY
Sep 13 20:56:51.640122: |     params: 8-bytes@0x7ffee51a37c8
Sep 13 20:56:51.640130: |     result: newref clone-key@0x55b124e3cfa0 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.640136: | IDi verify hash prf: created sha context 0x55b124e78b80 from skey_pi-key@0x55b124e3cfa0
Sep 13 20:56:51.640138: | IDi verify hash prf: begin sha with context 0x55b124e78b80 from skey_pi-key@0x55b124e3cfa0
Sep 13 20:56:51.640141: | IDi verify hash: delref clone-key@0x55b124e3cfa0
Sep 13 20:56:51.640143: | IDi verify hash PRF sha crypt-prf@0x55b124e75f08
Sep 13 20:56:51.640145: | IDi verify hash PRF sha update IDi-bytes@0x55b124e6e314 (length 9)
Sep 13 20:56:51.640147: |   02 00 00 00  2a 2e 6f 72  67
Sep 13 20:56:51.640152: | IDi verify hash PRF sha final length 20
Sep 13 20:56:51.640154: |   47 40 91 b3  af 52 11 e0  8c 68 3b 43  61 88 11 e1
Sep 13 20:56:51.640156: |   54 78 1c 36
Sep 13 20:56:51.640158: | verifying AUTH payload
Sep 13 20:56:51.640160: | inputs to hash1 (first packet)
Sep 13 20:56:51.640162: |   dc 3a 94 c4  30 44 5b 90  00 00 00 00  00 00 00 00
Sep 13 20:56:51.640164: |   21 20 22 08  00 00 00 00  00 00 00 f4  22 00 00 2c
Sep 13 20:56:51.640165: |   00 00 00 28  01 01 00 04  03 00 00 08  01 00 00 03
Sep 13 20:56:51.640167: |   03 00 00 08  03 00 00 02  03 00 00 08  02 00 00 02
Sep 13 20:56:51.640169: |   00 00 00 08  04 00 00 02  28 00 00 88  00 02 00 00
Sep 13 20:56:51.640170: |   2d b7 9c 94  08 5e c6 b5  d7 67 08 3d  fb 43 9b bb
Sep 13 20:56:51.640172: |   2c 9a a3 1e  8f 40 a8 80  8a 72 eb 55  33 71 24 fa
Sep 13 20:56:51.640173: |   d5 43 82 11  fb a9 8a 74  d9 c2 07 b6  54 82 79 b5
Sep 13 20:56:51.640177: |   22 cc 13 0a  a3 ae 5e 6d  98 f0 00 fe  46 85 44 1c
Sep 13 20:56:51.640179: |   0d a1 41 5e  56 f6 89 b3  96 3c 4b 4d  17 bf cd e6
Sep 13 20:56:51.640181: |   de d6 71 d6  58 9f 4c 4e  2e 8d f4 41  29 0c 55 b8
Sep 13 20:56:51.640182: |   24 c4 20 74  a9 39 e3 8e  ab 5b bd 7e  02 05 89 2f
Sep 13 20:56:51.640184: |   6a c2 ce 93  f8 96 dc e1  34 08 f5 f8  e1 49 35 49
Sep 13 20:56:51.640186: |   00 00 00 24  cf b0 a3 2e  27 3c 52 27  bc 03 16 78
Sep 13 20:56:51.640187: |   44 e1 bf 3e  1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68
Sep 13 20:56:51.640189: |   b0 76 76 a2
Sep 13 20:56:51.640191: | inputs to hash2 (responder nonce)
Sep 13 20:56:51.640193: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.640194: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.640196: | idhash
Sep 13 20:56:51.640197: |   47 40 91 b3  af 52 11 e0  8c 68 3b 43  61 88 11 e1
Sep 13 20:56:51.640199: |   54 78 1c 36
Sep 13 20:56:51.640201: | sighash hash sha init
Sep 13 20:56:51.640205: | sighash hash sha digest first packet-bytes@0x55b124e6f048 (length 244)
Sep 13 20:56:51.640207: |   dc 3a 94 c4  30 44 5b 90  00 00 00 00  00 00 00 00
Sep 13 20:56:51.640209: |   21 20 22 08  00 00 00 00  00 00 00 f4  22 00 00 2c
Sep 13 20:56:51.640210: |   00 00 00 28  01 01 00 04  03 00 00 08  01 00 00 03
Sep 13 20:56:51.640212: |   03 00 00 08  03 00 00 02  03 00 00 08  02 00 00 02
Sep 13 20:56:51.640214: |   00 00 00 08  04 00 00 02  28 00 00 88  00 02 00 00
Sep 13 20:56:51.640215: |   2d b7 9c 94  08 5e c6 b5  d7 67 08 3d  fb 43 9b bb
Sep 13 20:56:51.640217: |   2c 9a a3 1e  8f 40 a8 80  8a 72 eb 55  33 71 24 fa
Sep 13 20:56:51.640218: |   d5 43 82 11  fb a9 8a 74  d9 c2 07 b6  54 82 79 b5
Sep 13 20:56:51.640220: |   22 cc 13 0a  a3 ae 5e 6d  98 f0 00 fe  46 85 44 1c
Sep 13 20:56:51.640222: |   0d a1 41 5e  56 f6 89 b3  96 3c 4b 4d  17 bf cd e6
Sep 13 20:56:51.640223: |   de d6 71 d6  58 9f 4c 4e  2e 8d f4 41  29 0c 55 b8
Sep 13 20:56:51.640225: |   24 c4 20 74  a9 39 e3 8e  ab 5b bd 7e  02 05 89 2f
Sep 13 20:56:51.640227: |   6a c2 ce 93  f8 96 dc e1  34 08 f5 f8  e1 49 35 49
Sep 13 20:56:51.640228: |   00 00 00 24  cf b0 a3 2e  27 3c 52 27  bc 03 16 78
Sep 13 20:56:51.640230: |   44 e1 bf 3e  1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68
Sep 13 20:56:51.640231: |   b0 76 76 a2
Sep 13 20:56:51.640234: | sighash hash sha digest nonce-bytes@0x7f29180021d8 (length 32)
Sep 13 20:56:51.640236: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.640238: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.640240: | sighash hash sha digest IDHASH-bytes@0x7ffee51a36b8 (length 20)
Sep 13 20:56:51.640242: |   47 40 91 b3  af 52 11 e0  8c 68 3b 43  61 88 11 e1
Sep 13 20:56:51.640243: |   54 78 1c 36
Sep 13 20:56:51.640246: | sighash hash sha final length 20
Sep 13 20:56:51.640248: |   5b 50 92 5f  ef 66 6f 9e  97 4f 00 67  48 64 bd 39
Sep 13 20:56:51.640250: |   bd d0 15 2d
Sep 13 20:56:51.640253: | required RSA CA is 'CN=IKEv2 VPN CA, O=IKEv2 VPN'
Sep 13 20:56:51.640255: | trying all remote certificates public keys for RSA key that matches ID: @user1.org
Sep 13 20:56:51.640258: | trusted_ca_nss: trustee A = 'CN=IKEv2 VPN CA, O=IKEv2 VPN'
Sep 13 20:56:51.640261: | trusted_ca_nss: trustor B = 'CN=IKEv2 VPN CA, O=IKEv2 VPN'
Sep 13 20:56:51.640263: |   trying '@user1.org' issued by CA 'CN=IKEv2 VPN CA, O=IKEv2 VPN'
Sep 13 20:56:51.640266: | NSS RSA: verifying that decrypted signature matches hash: 
Sep 13 20:56:51.640267: |   5b 50 92 5f  ef 66 6f 9e  97 4f 00 67  48 64 bd 39
Sep 13 20:56:51.640269: |   bd d0 15 2d
Sep 13 20:56:51.640296: | NSS RSA verify: decrypted sig: siBuffer: 30 21 30 09  06 05 2b 0e  03 02 1a 05  00 04 14 5b  50 92 5f ef  66 6f 9e 97  4f 00 67 48  64 bd 39 bd  d0 15 2d
Sep 13 20:56:51.640301: | an RSA Sig check passed with *AwEAAZ2So [remote certificates]
Sep 13 20:56:51.640305: |       #1 spent 0.0386 milliseconds in try_all_keys() trying a pubkey
Sep 13 20:56:51.640308: "ikev2-cert"[1] 192.168.0.1 #1: Authenticated using RSA with IKEv2_AUTH_HASH_SHA1
Sep 13 20:56:51.640314: |     #1 spent 0.154 milliseconds in ikev2_verify_rsa_hash()
Sep 13 20:56:51.640318: | parent state #1: PARENT_R1(half-open IKE SA) => PARENT_R2(established IKE SA)
Sep 13 20:56:51.640321: | #1 will expire in 3600 seconds (policy doesn't allow re-key)
Sep 13 20:56:51.640323: | state #1 requesting EVENT_CRYPTO_TIMEOUT to be deleted
Sep 13 20:56:51.640328: | libevent_free: delref ptr-libevent@0x55b124e6ef88
Sep 13 20:56:51.640330: | free_event_entry: delref EVENT_CRYPTO_TIMEOUT-pe@0x55b124e6ef18
Sep 13 20:56:51.640332: | event_schedule: newref EVENT_SA_EXPIRE-pe@0x55b124e6ef18
Sep 13 20:56:51.640335: | inserting event EVENT_SA_EXPIRE, timeout in 3600 seconds for #1
Sep 13 20:56:51.640337: | libevent_malloc: newref ptr-libevent@0x55b124e6ef88 size 136
Sep 13 20:56:51.640340: | pstats #1 ikev2.ike established
Sep 13 20:56:51.640346: | **emit ISAKMP Message:
Sep 13 20:56:51.640349: |    initiator cookie: dc 3a 94 c4  30 44 5b 90
Sep 13 20:56:51.640352: |    responder cookie: cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.640354: |    next payload type: ISAKMP_NEXT_NONE (0x0)
Sep 13 20:56:51.640356: |    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996) (0x20)
Sep 13 20:56:51.640358: |    exchange type: ISAKMP_v2_IKE_AUTH (0x23)
Sep 13 20:56:51.640360: |    flags: ISAKMP_FLAG_v2_MSG_RESPONSE (0x20)
Sep 13 20:56:51.640363: |    Message ID: 1 (00 00 00 01)
Sep 13 20:56:51.640365: | next payload chain: saving message location 'ISAKMP Message'.'next payload type'
Sep 13 20:56:51.640367: | IKEv2 CERT: send a certificate?
Sep 13 20:56:51.640369: | IKEv2 CERT: OK to send a certificate (always)
Sep 13 20:56:51.640371: | ***emit IKEv2 Encryption Payload:
Sep 13 20:56:51.640373: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.640375: |    flags: none (0x0)
Sep 13 20:56:51.640377: | next payload chain: setting previous 'ISAKMP Message'.'next payload type' to current IKEv2 Encryption Payload (46:ISAKMP_NEXT_v2SK)
Sep 13 20:56:51.640379: | next payload chain: saving location 'IKEv2 Encryption Payload'.'next payload type' in 'reply packet'
Sep 13 20:56:51.640382: | emitting 8 zero bytes of IV into IKEv2 Encryption Payload
Sep 13 20:56:51.640385: | Initiator child policy is compress=no, NOT sending v2N_IPCOMP_SUPPORTED
Sep 13 20:56:51.640387: | ****emit IKEv2 Identification - Responder - Payload:
Sep 13 20:56:51.640389: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.640391: |    flags: none (0x0)
Sep 13 20:56:51.640393: |    ID type: ID_FQDN (0x2)
Sep 13 20:56:51.640395: | next payload chain: setting previous 'IKEv2 Encryption Payload'.'next payload type' to current IKEv2 Identification - Responder - Payload (36:ISAKMP_NEXT_v2IDr)
Sep 13 20:56:51.640397: | next payload chain: saving location 'IKEv2 Identification - Responder - Payload'.'next payload type' in 'reply packet'
Sep 13 20:56:51.640399: | emitting 13 raw bytes of my identity into IKEv2 Identification - Responder - Payload
Sep 13 20:56:51.640402: | my identity: 31 39 32 2e  31 36 38 2e  30 2e 31 33  36
Sep 13 20:56:51.640404: | emitting length of IKEv2 Identification - Responder - Payload: 21
Sep 13 20:56:51.640407: | IDi verify hash PRF sha init skey pr-key@0x7f2910008390 (size 20)
Sep 13 20:56:51.640409: | IDi verify hash: skey pr-key@0x7f2910008390 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.640411: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.640412: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.640414: |     target: SHA_1_HMAC
Sep 13 20:56:51.640416: |     flags: SIGN
Sep 13 20:56:51.640417: |     key_size: 20-bytes
Sep 13 20:56:51.640419: |     base: base-key@0x7f2910008390 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.640421: |     operation: FLAGS_ONLY
Sep 13 20:56:51.640423: |     params: 8-bytes@0x7ffee51a3098
Sep 13 20:56:51.640429: |     result: newref clone-key@0x55b124e3cfa0 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.640434: | IDi verify hash prf: created sha context 0x55b124e78b80 from skey pr-key@0x55b124e3cfa0
Sep 13 20:56:51.640436: | IDi verify hash prf: begin sha with context 0x55b124e78b80 from skey pr-key@0x55b124e3cfa0
Sep 13 20:56:51.640440: | IDi verify hash: delref clone-key@0x55b124e3cfa0
Sep 13 20:56:51.640443: | IDi verify hash PRF sha crypt-prf@0x55b124e7b2a8
Sep 13 20:56:51.640445: | IDi verify hash PRF sha update IDr-bytes@0x55b124082dac (length 17)
Sep 13 20:56:51.640447: |   02 00 00 00  31 39 32 2e  31 36 38 2e  30 2e 31 33
Sep 13 20:56:51.640448: |   36
Sep 13 20:56:51.640453: | IDi verify hash PRF sha final length 20
Sep 13 20:56:51.640455: |   aa f8 0e b2  4c 5e 16 b3  de fb 08 5d  bd 12 eb ba
Sep 13 20:56:51.640456: |   17 4e 6c cd
Sep 13 20:56:51.640458: | assembled IDr payload
Sep 13 20:56:51.640460: | Sending [CERT] of certificate: O=IKEv2 VPN,CN=192.168.0.136
Sep 13 20:56:51.640462: | ****emit IKEv2 Certificate Payload:
Sep 13 20:56:51.640464: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.640466: |    flags: none (0x0)
Sep 13 20:56:51.640468: |    ikev2 cert encoding: CERT_X509_SIGNATURE (0x4)
Sep 13 20:56:51.640470: | next payload chain: setting previous 'IKEv2 Identification - Responder - Payload'.'next payload type' to current IKEv2 Certificate Payload (37:ISAKMP_NEXT_v2CERT)
Sep 13 20:56:51.640472: | next payload chain: saving location 'IKEv2 Certificate Payload'.'next payload type' in 'reply packet'
Sep 13 20:56:51.640474: | emitting 522 raw bytes of CERT into IKEv2 Certificate Payload
Sep 13 20:56:51.640476: | CERT:
Sep 13 20:56:51.640477: |   30 82 02 06  30 82 01 6f  a0 03 02 01  02 02 05 00
Sep 13 20:56:51.640479: |   b5 e3 7f 8e  30 0d 06 09  2a 86 48 86  f7 0d 01 01
Sep 13 20:56:51.640481: |   0b 05 00 30  2b 31 15 30  13 06 03 55  04 03 13 0c
Sep 13 20:56:51.640482: |   49 4b 45 76  32 20 56 50  4e 20 43 41  31 12 30 10
Sep 13 20:56:51.640484: |   06 03 55 04  0a 13 09 49  4b 45 76 32  20 56 50 4e
Sep 13 20:56:51.640485: |   30 1e 17 0d  32 30 30 39  31 32 31 31  32 30 31 38
Sep 13 20:56:51.640487: |   5a 17 0d 33  30 30 39 31  32 31 31 32  30 31 38 5a
Sep 13 20:56:51.640489: |   30 2c 31 16  30 14 06 03  55 04 03 13  0d 31 39 32
Sep 13 20:56:51.640490: |   2e 31 36 38  2e 30 2e 31  33 36 31 12  30 10 06 03
Sep 13 20:56:51.640492: |   55 04 0a 13  09 49 4b 45  76 32 20 56  50 4e 30 81
Sep 13 20:56:51.640494: |   9f 30 0d 06  09 2a 86 48  86 f7 0d 01  01 01 05 00
Sep 13 20:56:51.640495: |   03 81 8d 00  30 81 89 02  81 81 00 bb  39 97 53 fb
Sep 13 20:56:51.640497: |   e7 c6 f9 88  44 e6 6f d1  91 39 56 d7  67 3b c9 a9
Sep 13 20:56:51.640498: |   63 ed fa c1  36 79 30 e8  fc 22 da d3  28 55 32 5d
Sep 13 20:56:51.640500: |   1b a6 62 f4  53 9f 04 0e  e4 86 d4 ea  bd 47 28 77
Sep 13 20:56:51.640502: |   b9 6f eb a6  38 8d 04 3b  20 77 e8 ff  30 0f b9 c8
Sep 13 20:56:51.640503: |   e7 29 e9 ed  6b 47 8c 0f  f3 f6 d8 8c  52 ee 86 cb
Sep 13 20:56:51.640505: |   f1 fc a1 fc  8b 41 6d ca  30 81 c3 ca  bc b1 86 6d
Sep 13 20:56:51.640507: |   67 35 a6 e8  20 50 0b b6  cd 04 c3 36  9b 67 e2 bb
Sep 13 20:56:51.640508: |   19 27 18 63  27 84 c5 20  4d a0 0d 02  03 01 00 01
Sep 13 20:56:51.640510: |   a3 35 30 33  30 0f 06 03  55 1d 11 04  08 30 06 87
Sep 13 20:56:51.640511: |   04 c0 a8 00  88 30 13 06  03 55 1d 25  04 0c 30 0a
Sep 13 20:56:51.640513: |   06 08 2b 06  01 05 05 07  03 01 30 0b  06 03 55 1d
Sep 13 20:56:51.640515: |   0f 04 04 03  02 05 a0 30  0d 06 09 2a  86 48 86 f7
Sep 13 20:56:51.640516: |   0d 01 01 0b  05 00 03 81  81 00 b2 75  0d 16 a9 8f
Sep 13 20:56:51.640518: |   3e 14 89 b8  8f 4d da 9f  5f 2e 9d 40  b1 70 31 7f
Sep 13 20:56:51.640520: |   b1 42 0b c1  d9 c7 e1 8a  0d 49 ac 72  9c 6c ac 17
Sep 13 20:56:51.640521: |   94 a7 7a 5f  98 22 7a 03  12 7a 70 8e  86 69 60 1e
Sep 13 20:56:51.640523: |   20 e8 88 d8  6e df 4f 02  e7 20 ca 07  e2 57 54 f2
Sep 13 20:56:51.640524: |   cf 3e b5 c6  cf cc 18 f2  71 92 1b b8  fd f8 27 e9
Sep 13 20:56:51.640526: |   f9 5e 0d 5a  cf e1 4d 5d  ee 7e 3d ac  8b 92 ab 6e
Sep 13 20:56:51.640528: |   3e c7 df 80  25 40 a3 3c  89 a5 95 58  62 9b bb ce
Sep 13 20:56:51.640529: |   ca 0a ad ac  cf 07 b6 86  59 5e
Sep 13 20:56:51.640531: | emitting length of IKEv2 Certificate Payload: 527
Sep 13 20:56:51.640539: | CHILD SA proposals received
Sep 13 20:56:51.640541: | going to assemble AUTH payload
Sep 13 20:56:51.640543: | ****emit IKEv2 Authentication Payload:
Sep 13 20:56:51.640545: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.640547: |    flags: none (0x0)
Sep 13 20:56:51.640549: |    auth method: IKEv2_AUTH_RSA (0x1)
Sep 13 20:56:51.640551: | next payload chain: setting previous 'IKEv2 Certificate Payload'.'next payload type' to current IKEv2 Authentication Payload (39:ISAKMP_NEXT_v2AUTH)
Sep 13 20:56:51.640553: | next payload chain: saving location 'IKEv2 Authentication Payload'.'next payload type' in 'reply packet'
Sep 13 20:56:51.640556: | lsw_get_secret() using certificate for @192.168.0.136->@user1.org of kind PKK_RSA
Sep 13 20:56:51.640606: | finding secret using public key
Sep 13 20:56:51.640611: | searching for certificate PKK_PSK:N/A vs PKK_RSA:unknown public key algorithm
Sep 13 20:56:51.640613: | private key for cert 192.168.0.136 not found in local cache; loading from NSS DB
Sep 13 20:56:51.640686: | adding RSA secret for certificate: 192.168.0.136
Sep 13 20:56:51.640693: | extracting the RSA private key for 192.168.0.136
Sep 13 20:56:51.641093: | certs and keys locked by 'lsw_add_rsa_secret'
Sep 13 20:56:51.641101: | certs and keys unlocked by 'lsw_add_rsa_secret'
Sep 13 20:56:51.641105: | spent 0.489 milliseconds in load_nss_cert_secret() loading private key 192.168.0.136
Sep 13 20:56:51.641108: | searching for certificate PKK_RSA:AwEAAbs5l vs PKK_RSA:AwEAAbs5l
Sep 13 20:56:51.641110: | k did match
Sep 13 20:56:51.641111: | n did match
Sep 13 20:56:51.641113: | e did match
Sep 13 20:56:51.641116: | RSA private key found
Sep 13 20:56:51.641118: | inputs to hash1 (first packet)
Sep 13 20:56:51.641120: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.641122: |   21 20 22 20  00 00 00 00  00 00 01 39  22 00 00 2c
Sep 13 20:56:51.641123: |   00 00 00 28  01 01 00 04  03 00 00 08  01 00 00 03
Sep 13 20:56:51.641125: |   03 00 00 08  02 00 00 02  03 00 00 08  03 00 00 02
Sep 13 20:56:51.641126: |   00 00 00 08  04 00 00 02  28 00 00 88  00 02 00 00
Sep 13 20:56:51.641128: |   4e 1f be 49  2b 18 07 98  d6 6e f9 ed  0c bb 8d c9
Sep 13 20:56:51.641130: |   68 cc 44 d3  c9 f0 d6 f6  c6 68 89 79  44 22 a5 69
Sep 13 20:56:51.641131: |   dd 42 a2 14  19 98 cb 14  73 50 2a fb  87 36 e7 c4
Sep 13 20:56:51.641133: |   09 12 46 51  ae 06 39 52  a6 7d f6 ff  68 1b 05 a8
Sep 13 20:56:51.641135: |   2a 82 37 57  44 52 aa ff  3b ce 9d 00  51 53 30 3d
Sep 13 20:56:51.641136: |   f6 df 0a 17  77 aa 5f 5e  bf c4 89 64  91 e8 88 20
Sep 13 20:56:51.641138: |   53 c8 81 95  7a 5e 1a d8  38 17 6b ac  51 80 fd d5
Sep 13 20:56:51.641139: |   05 ea 00 93  58 ea 9a f2  51 21 5a 1c  29 a4 ce f2
Sep 13 20:56:51.641141: |   29 00 00 24  ab ce b2 a9  cc ef 82 6d  4f 32 ca 04
Sep 13 20:56:51.641143: |   34 3f e7 80  35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05
Sep 13 20:56:51.641144: |   d1 f2 53 ad  29 00 00 08  00 00 40 2e  29 00 00 1c
Sep 13 20:56:51.641146: |   00 00 40 04  ec 2c 55 6a  81 11 d1 af  53 a6 cd e5
Sep 13 20:56:51.641148: |   b8 c1 f2 0d  f9 7e 92 38  26 00 00 1c  00 00 40 05
Sep 13 20:56:51.641149: |   b9 9d ba c8  22 02 38 52  bb e3 68 b9  d4 20 c7 34
Sep 13 20:56:51.641151: |   2f 3d 75 aa  00 00 00 05  04
Sep 13 20:56:51.641153: | inputs to hash2 (initiator nonce)
Sep 13 20:56:51.641154: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.641156: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.641158: | idhash
Sep 13 20:56:51.641159: |   aa f8 0e b2  4c 5e 16 b3  de fb 08 5d  bd 12 eb ba
Sep 13 20:56:51.641161: |   17 4e 6c cd
Sep 13 20:56:51.641163: | sighash hash sha init
Sep 13 20:56:51.641168: | sighash hash sha digest first packet-bytes@0x55b124e6f3f8 (length 313)
Sep 13 20:56:51.641170: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.641172: |   21 20 22 20  00 00 00 00  00 00 01 39  22 00 00 2c
Sep 13 20:56:51.641173: |   00 00 00 28  01 01 00 04  03 00 00 08  01 00 00 03
Sep 13 20:56:51.641175: |   03 00 00 08  02 00 00 02  03 00 00 08  03 00 00 02
Sep 13 20:56:51.641180: |   00 00 00 08  04 00 00 02  28 00 00 88  00 02 00 00
Sep 13 20:56:51.641182: |   4e 1f be 49  2b 18 07 98  d6 6e f9 ed  0c bb 8d c9
Sep 13 20:56:51.641183: |   68 cc 44 d3  c9 f0 d6 f6  c6 68 89 79  44 22 a5 69
Sep 13 20:56:51.641185: |   dd 42 a2 14  19 98 cb 14  73 50 2a fb  87 36 e7 c4
Sep 13 20:56:51.641187: |   09 12 46 51  ae 06 39 52  a6 7d f6 ff  68 1b 05 a8
Sep 13 20:56:51.641188: |   2a 82 37 57  44 52 aa ff  3b ce 9d 00  51 53 30 3d
Sep 13 20:56:51.641190: |   f6 df 0a 17  77 aa 5f 5e  bf c4 89 64  91 e8 88 20
Sep 13 20:56:51.641192: |   53 c8 81 95  7a 5e 1a d8  38 17 6b ac  51 80 fd d5
Sep 13 20:56:51.641193: |   05 ea 00 93  58 ea 9a f2  51 21 5a 1c  29 a4 ce f2
Sep 13 20:56:51.641195: |   29 00 00 24  ab ce b2 a9  cc ef 82 6d  4f 32 ca 04
Sep 13 20:56:51.641196: |   34 3f e7 80  35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05
Sep 13 20:56:51.641198: |   d1 f2 53 ad  29 00 00 08  00 00 40 2e  29 00 00 1c
Sep 13 20:56:51.641200: |   00 00 40 04  ec 2c 55 6a  81 11 d1 af  53 a6 cd e5
Sep 13 20:56:51.641201: |   b8 c1 f2 0d  f9 7e 92 38  26 00 00 1c  00 00 40 05
Sep 13 20:56:51.641203: |   b9 9d ba c8  22 02 38 52  bb e3 68 b9  d4 20 c7 34
Sep 13 20:56:51.641204: |   2f 3d 75 aa  00 00 00 05  04
Sep 13 20:56:51.641208: | sighash hash sha digest nonce-bytes@0x55b124e6f178 (length 32)
Sep 13 20:56:51.641210: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.641211: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.641213: | sighash hash sha digest IDHASH-bytes@0x7ffee51a2ac8 (length 20)
Sep 13 20:56:51.641215: |   aa f8 0e b2  4c 5e 16 b3  de fb 08 5d  bd 12 eb ba
Sep 13 20:56:51.641217: |   17 4e 6c cd
Sep 13 20:56:51.641220: | sighash hash sha final length 20
Sep 13 20:56:51.641222: |   42 4c a5 4a  a6 3f cf 7c  b7 e8 68 20  ca 88 3a b8
Sep 13 20:56:51.641224: |   6f 9a 54 41
Sep 13 20:56:51.641225: | v2rsa octets
Sep 13 20:56:51.641227: |   30 21 30 09  06 05 2b 0e  03 02 1a 05  00 04 14 42
Sep 13 20:56:51.641229: |   4c a5 4a a6  3f cf 7c b7  e8 68 20 ca  88 3a b8 6f
Sep 13 20:56:51.641230: |   9a 54 41
Sep 13 20:56:51.641233: | RSA_sign_hash: Started using NSS
Sep 13 20:56:51.641234: | NSS: Authentication to NSS successful
Sep 13 20:56:51.643071: | RSA_sign_hash: Ended using NSS
Sep 13 20:56:51.643085: |       #1 spent 1.85 milliseconds in ikev2_calculate_rsa_hash() calling sign_hash_RSA()
Sep 13 20:56:51.643089: | emitting 128 raw bytes of rsa signature into IKEv2 Authentication Payload
Sep 13 20:56:51.643091: | rsa signature:
Sep 13 20:56:51.643093: |   a2 eb 8f e8  6e 1f 68 b8  2e 5b 60 f8  2a 67 1d a9
Sep 13 20:56:51.643095: |   af 6a 94 92  d9 71 15 b9  b7 58 2a 06  d1 e0 f4 08
Sep 13 20:56:51.643096: |   0c 1c 0c 17  50 63 12 27  a0 05 d1 45  40 9e 89 41
Sep 13 20:56:51.643098: |   1c d3 3a c5  bc 06 a6 b1  e1 9f eb de  9a 14 b5 2d
Sep 13 20:56:51.643100: |   81 32 ef fe  67 d6 d3 c4  8c a7 ee eb  e8 cd 56 26
Sep 13 20:56:51.643101: |   70 71 d5 e4  34 88 fa 82  3a 4b 00 b4  b5 ba ab 68
Sep 13 20:56:51.643103: |   db 88 49 bf  97 c1 3c 50  e3 69 4d 50  98 a4 99 33
Sep 13 20:56:51.643104: |   32 02 e9 80  1d b1 9c cf  f7 03 06 c2  72 70 61 c1
Sep 13 20:56:51.643107: |     #1 spent 2.55 milliseconds in ikev2_calculate_rsa_hash()
Sep 13 20:56:51.643109: | emitting length of IKEv2 Authentication Payload: 136
Sep 13 20:56:51.643113: | addref fd@NULL (in new_state() at state.c:555)
Sep 13 20:56:51.643115: | creating state object #2 at 0x55b124e7a1d8
Sep 13 20:56:51.643118: | State DB: adding IKEv2 state #2 in UNDEFINED
Sep 13 20:56:51.643125: | pstats #2 ikev2.child started
Sep 13 20:56:51.643128: | duplicating state object #1 "ikev2-cert"[1] 192.168.0.1 as #2 for IPSEC SA
Sep 13 20:56:51.643132: | #2 setting local endpoint to 192.168.0.136:4500 from #1.st_localport (in duplicate_state() at state.c:1548)
Sep 13 20:56:51.643134: | duplicate_state: addref st_skeyid_nss-key@NULL
Sep 13 20:56:51.643136: | duplicate_state: addref st_skey_d_nss-key@0x55b124e3b690
Sep 13 20:56:51.643138: | duplicate_state: addref st_skey_ai_nss-key@0x55b124e39e10
Sep 13 20:56:51.643144: | duplicate_state: addref st_skey_ar_nss-key@0x55b124e61c30
Sep 13 20:56:51.643146: | duplicate_state: addref st_skey_ei_nss-key@0x55b124e5cf30
Sep 13 20:56:51.643148: | duplicate_state: addref st_skey_er_nss-key@0x7f2910001400
Sep 13 20:56:51.643150: | duplicate_state: addref st_skey_pi_nss-key@0x7f2910001330
Sep 13 20:56:51.643152: | duplicate_state: addref st_skey_pr_nss-key@0x7f2910008390
Sep 13 20:56:51.643153: | duplicate_state: addref st_enc_key_nss-key@NULL
Sep 13 20:56:51.643155: | duplicate_state: addref st_sk_d_no_ppk-key@NULL
Sep 13 20:56:51.643157: | duplicate_state: addref st_sk_pi_no_ppk-key@NULL
Sep 13 20:56:51.643159: | duplicate_state: addref st_sk_pr_no_ppk-key@NULL
Sep 13 20:56:51.643163: | Message ID: CHILD #1.#2 initializing (CHILD SA): ike.initiator.sent=-1 ike.initiator.recv=-1 ike.responder.sent=0 ike.responder.recv=0 child.wip.initiator=0->-1 child.wip.responder=0->-1
Sep 13 20:56:51.643167: | Message ID: IKE #1 switching from IKE SA responder message request 1: ike.initiator.sent=-1 ike.initiator.recv=-1 ike.responder.sent=0 ike.responder.recv=0 ike.wip.initiator=-1 ike.wip.responder=1->-1
Sep 13 20:56:51.643170: | Message ID: CHILD #1.#2 switching to CHILD SA responder message request 1: ike.initiator.sent=-1 ike.initiator.recv=-1 ike.responder.sent=0 ike.responder.recv=0 child.wip.initiator=-1 child.wip.responder=-1->1
Sep 13 20:56:51.643172: | Child SA TS Request has ike->sa == md->st; so using parent connection
Sep 13 20:56:51.643175: | TSi: parsing 1 traffic selectors
Sep 13 20:56:51.643177: | ***parse IKEv2 Traffic Selector:
Sep 13 20:56:51.643180: |    TS type: IKEv2_TS_IPV4_ADDR_RANGE (0x7)
Sep 13 20:56:51.643182: |    IP Protocol ID: 0 (00)
Sep 13 20:56:51.643184: |    length: 16 (00 10)
Sep 13 20:56:51.643186: |    start port: 0 (00 00)
Sep 13 20:56:51.643188: |    end port: 65535 (ff ff)
Sep 13 20:56:51.643191: | parsing 4 raw bytes of IKEv2 Traffic Selector into TS low
Sep 13 20:56:51.643192: | TS low
Sep 13 20:56:51.643194: |   c0 a8 00 01
Sep 13 20:56:51.643196: | parsing 4 raw bytes of IKEv2 Traffic Selector into TS high
Sep 13 20:56:51.643198: | TS high
Sep 13 20:56:51.643200: |   c0 a8 00 ff
Sep 13 20:56:51.643201: | TSi: parsed 1 traffic selectors
Sep 13 20:56:51.643203: | TSr: parsing 1 traffic selectors
Sep 13 20:56:51.643205: | ***parse IKEv2 Traffic Selector:
Sep 13 20:56:51.643207: |    TS type: IKEv2_TS_IPV4_ADDR_RANGE (0x7)
Sep 13 20:56:51.643209: |    IP Protocol ID: 0 (00)
Sep 13 20:56:51.643211: |    length: 16 (00 10)
Sep 13 20:56:51.643213: |    start port: 0 (00 00)
Sep 13 20:56:51.643215: |    end port: 65535 (ff ff)
Sep 13 20:56:51.643217: | parsing 4 raw bytes of IKEv2 Traffic Selector into TS low
Sep 13 20:56:51.643218: | TS low
Sep 13 20:56:51.643220: |   c0 a8 00 01
Sep 13 20:56:51.643222: | parsing 4 raw bytes of IKEv2 Traffic Selector into TS high
Sep 13 20:56:51.643223: | TS high
Sep 13 20:56:51.643225: |   c0 a8 00 ff
Sep 13 20:56:51.643227: | TSr: parsed 1 traffic selectors
Sep 13 20:56:51.643229: | looking for best SPD in current connection
Sep 13 20:56:51.643234: | evaluating our conn="ikev2-cert"[1] 192.168.0.1 I=192.168.0.1/32:0:0/0 R=192.168.0.136/32:0:0/0 to their:
Sep 13 20:56:51.643237: |     TSi[0] .net=192.168.0.1-192.168.0.255 .iporotoid=0 .{start,end}port=0..65535
Sep 13 20:56:51.643242: |         match address end->client=192.168.0.1/32 <= TSi[0]net=192.168.0.1-192.168.0.255: YES fitness 40
Sep 13 20:56:51.643244: |         narrow port end=0..65535 <= TSi[0]=0..65535: 0
Sep 13 20:56:51.643246: |           TSi[0] port match: YES fitness 65536
Sep 13 20:56:51.643248: |         narrow protocol end=*0 <= TSi[0]=*0: 0
Sep 13 20:56:51.643250: |         match end->protocol=*0 <= TSi[0].ipprotoid=*0: YES fitness 255
Sep 13 20:56:51.643253: |     TSr[0] .net=192.168.0.1-192.168.0.255 .iporotoid=0 .{start,end}port=0..65535
Sep 13 20:56:51.643257: |         match address end->client=192.168.0.136/32 <= TSr[0]net=192.168.0.1-192.168.0.255: YES fitness 40
Sep 13 20:56:51.643259: |         narrow port end=0..65535 <= TSr[0]=0..65535: 0
Sep 13 20:56:51.643263: |           TSr[0] port match: YES fitness 65536
Sep 13 20:56:51.643265: |         narrow protocol end=*0 <= TSr[0]=*0: 0
Sep 13 20:56:51.643267: |         match end->protocol=*0 <= TSr[0].ipprotoid=*0: YES fitness 255
Sep 13 20:56:51.643269: | best fit so far: TSi[0] TSr[0]
Sep 13 20:56:51.643271: |     found better spd route for TSi[0],TSr[0]
Sep 13 20:56:51.643272: | looking for better host pair
Sep 13 20:56:51.643276: | find_host_pair: comparing 192.168.0.136:500 to 192.168.0.1:500 but ignoring ports
Sep 13 20:56:51.643279: |   checking hostpair 192.168.0.136/32:0 -> 192.168.0.1/32:0 is found
Sep 13 20:56:51.643281: |   investigating connection "ikev2-cert" as a better match
Sep 13 20:56:51.643283: |    match_id a=@user1.org
Sep 13 20:56:51.643285: |             b=@user1.org
Sep 13 20:56:51.643286: |    results  matched
Sep 13 20:56:51.643290: | trusted_ca_nss: trustee A = 'CN=IKEv2 VPN CA, O=IKEv2 VPN'
Sep 13 20:56:51.643293: | trusted_ca_nss: trustor B = 'CN=IKEv2 VPN CA, O=IKEv2 VPN'
Sep 13 20:56:51.643297: | evaluating our conn="ikev2-cert"[1] 192.168.0.1 I=192.168.0.1/32:0:0/0 R=192.168.0.136/32:0:0/0 to their:
Sep 13 20:56:51.643300: |     TSi[0] .net=192.168.0.1-192.168.0.255 .iporotoid=0 .{start,end}port=0..65535
Sep 13 20:56:51.643304: |         match address end->client=192.168.0.1/32 <= TSi[0]net=192.168.0.1-192.168.0.255: YES fitness 40
Sep 13 20:56:51.643306: |         narrow port end=0..65535 <= TSi[0]=0..65535: 0
Sep 13 20:56:51.643307: |           TSi[0] port match: YES fitness 65536
Sep 13 20:56:51.643309: |         narrow protocol end=*0 <= TSi[0]=*0: 0
Sep 13 20:56:51.643311: |         match end->protocol=*0 <= TSi[0].ipprotoid=*0: YES fitness 255
Sep 13 20:56:51.643314: |     TSr[0] .net=192.168.0.1-192.168.0.255 .iporotoid=0 .{start,end}port=0..65535
Sep 13 20:56:51.643318: |         match address end->client=192.168.0.136/32 <= TSr[0]net=192.168.0.1-192.168.0.255: YES fitness 40
Sep 13 20:56:51.643320: |         narrow port end=0..65535 <= TSr[0]=0..65535: 0
Sep 13 20:56:51.643321: |           TSr[0] port match: YES fitness 65536
Sep 13 20:56:51.643323: |         narrow protocol end=*0 <= TSr[0]=*0: 0
Sep 13 20:56:51.643325: |         match end->protocol=*0 <= TSr[0].ipprotoid=*0: YES fitness 255
Sep 13 20:56:51.643327: | best fit so far: TSi[0] TSr[0]
Sep 13 20:56:51.643329: |   investigating connection "ikev2-cert" as a better match
Sep 13 20:56:51.643331: |    match_id a=@user1.org
Sep 13 20:56:51.643333: |             b=@user1.org
Sep 13 20:56:51.643334: |    results  matched
Sep 13 20:56:51.643337: | trusted_ca_nss: trustee A = 'CN=IKEv2 VPN CA, O=IKEv2 VPN'
Sep 13 20:56:51.643339: | trusted_ca_nss: trustor B = 'CN=IKEv2 VPN CA, O=IKEv2 VPN'
Sep 13 20:56:51.643343: | evaluating our conn="ikev2-cert" I=192.168.0.1/32:0:0/0 R=192.168.0.136/32:0:0/0 to their:
Sep 13 20:56:51.643346: |     TSi[0] .net=192.168.0.1-192.168.0.255 .iporotoid=0 .{start,end}port=0..65535
Sep 13 20:56:51.643349: |         match address end->client=192.168.0.1/32 <= TSi[0]net=192.168.0.1-192.168.0.255: YES fitness 40
Sep 13 20:56:51.643351: |         narrow port end=0..65535 <= TSi[0]=0..65535: 0
Sep 13 20:56:51.643353: |           TSi[0] port match: YES fitness 65536
Sep 13 20:56:51.643355: |         narrow protocol end=*0 <= TSi[0]=*0: 0
Sep 13 20:56:51.643357: |         match end->protocol=*0 <= TSi[0].ipprotoid=*0: YES fitness 255
Sep 13 20:56:51.643359: |     TSr[0] .net=192.168.0.1-192.168.0.255 .iporotoid=0 .{start,end}port=0..65535
Sep 13 20:56:51.643363: |         match address end->client=192.168.0.136/32 <= TSr[0]net=192.168.0.1-192.168.0.255: YES fitness 40
Sep 13 20:56:51.643365: |         narrow port end=0..65535 <= TSr[0]=0..65535: 0
Sep 13 20:56:51.643367: |           TSr[0] port match: YES fitness 65536
Sep 13 20:56:51.643368: |         narrow protocol end=*0 <= TSr[0]=*0: 0
Sep 13 20:56:51.643370: |         match end->protocol=*0 <= TSr[0].ipprotoid=*0: YES fitness 255
Sep 13 20:56:51.643372: | best fit so far: TSi[0] TSr[0]
Sep 13 20:56:51.643374: |   did not find a better connection using host pair
Sep 13 20:56:51.643378: | printing contents struct traffic_selector
Sep 13 20:56:51.643379: |   ts_type: IKEv2_TS_IPV4_ADDR_RANGE
Sep 13 20:56:51.643381: |   ipprotoid: 0
Sep 13 20:56:51.643383: |   port range: 0-65535
Sep 13 20:56:51.643386: |   ip range: 192.168.0.136-192.168.0.136
Sep 13 20:56:51.643387: | printing contents struct traffic_selector
Sep 13 20:56:51.643389: |   ts_type: IKEv2_TS_IPV4_ADDR_RANGE
Sep 13 20:56:51.643391: |   ipprotoid: 0
Sep 13 20:56:51.643392: |   port range: 0-65535
Sep 13 20:56:51.643395: |   ip range: 192.168.0.1-192.168.0.1
Sep 13 20:56:51.643397: | switching MD.ST from #1 to CHILD #2; ulgh
Sep 13 20:56:51.643400: | constructing ESP/AH proposals with all DH removed  for ikev2-cert (IKE_AUTH responder matching remote ESP/AH proposals)
Sep 13 20:56:51.643404: | converting proposal AES_GCM_16-NONE to ikev2 ...
Sep 13 20:56:51.643406: | forcing IKEv2 PROTO_v2_ESP aes_gcm_16 ENCRYPT transform low-to-high key lengths: 128 256
Sep 13 20:56:51.643411: | ...  ikev2_proposal: 1:ESP=AES_GCM_C_128+AES_GCM_C_256-NONE-NONE-DISABLED
Sep 13 20:56:51.643413: | converting proposal AES_CBC_128-HMAC_SHA1_96 to ikev2 ...
Sep 13 20:56:51.643416: | ...  ikev2_proposal: 2:ESP=AES_CBC_128-HMAC_SHA1_96-NONE-DISABLED
Sep 13 20:56:51.643417: | converting proposal AES_CBC_256-HMAC_SHA1_96 to ikev2 ...
Sep 13 20:56:51.643420: | ...  ikev2_proposal: 3:ESP=AES_CBC_256-HMAC_SHA1_96-NONE-DISABLED
Sep 13 20:56:51.643422: | converting proposal AES_CBC_128-HMAC_SHA2_256_128 to ikev2 ...
Sep 13 20:56:51.643424: | ...  ikev2_proposal: 4:ESP=AES_CBC_128-HMAC_SHA2_256_128-NONE-DISABLED
Sep 13 20:56:51.643426: | converting proposal AES_CBC_256-HMAC_SHA2_256_128 to ikev2 ...
Sep 13 20:56:51.643428: | ...  ikev2_proposal: 5:ESP=AES_CBC_256-HMAC_SHA2_256_128-NONE-DISABLED
Sep 13 20:56:51.643430: | converting proposal 3DES_CBC-HMAC_SHA1_96 to ikev2 ...
Sep 13 20:56:51.643432: | omitting IKEv2 PROTO_v2_ESP 3des_cbc ENCRYPT transform key-length
Sep 13 20:56:51.643434: | ...  ikev2_proposal: 6:ESP=3DES-HMAC_SHA1_96-NONE-DISABLED
Sep 13 20:56:51.643437: "ikev2-cert"[1] 192.168.0.1: local ESP/AH proposals (IKE_AUTH responder matching remote ESP/AH proposals): 
Sep 13 20:56:51.643441: "ikev2-cert"[1] 192.168.0.1:   1:ESP=AES_GCM_C_128+AES_GCM_C_256-NONE-NONE-DISABLED
Sep 13 20:56:51.643443: "ikev2-cert"[1] 192.168.0.1:   2:ESP=AES_CBC_128-HMAC_SHA1_96-NONE-DISABLED
Sep 13 20:56:51.643446: "ikev2-cert"[1] 192.168.0.1:   3:ESP=AES_CBC_256-HMAC_SHA1_96-NONE-DISABLED
Sep 13 20:56:51.643449: "ikev2-cert"[1] 192.168.0.1:   4:ESP=AES_CBC_128-HMAC_SHA2_256_128-NONE-DISABLED
Sep 13 20:56:51.643452: "ikev2-cert"[1] 192.168.0.1:   5:ESP=AES_CBC_256-HMAC_SHA2_256_128-NONE-DISABLED
Sep 13 20:56:51.643455: "ikev2-cert"[1] 192.168.0.1:   6:ESP=3DES-HMAC_SHA1_96-NONE-DISABLED
Sep 13 20:56:51.643457: | Comparing remote proposals against IKE_AUTH responder matching remote ESP/AH proposals 6 local proposals
Sep 13 20:56:51.643459: | local proposal 1 type ENCR has 2 transforms
Sep 13 20:56:51.643461: | local proposal 1 type PRF has 0 transforms
Sep 13 20:56:51.643463: | local proposal 1 type INTEG has 1 transforms
Sep 13 20:56:51.643465: | local proposal 1 type DH has 1 transforms
Sep 13 20:56:51.643467: | local proposal 1 type ESN has 1 transforms
Sep 13 20:56:51.643469: | local proposal 1 transforms: required: ENCR+ESN; optional: INTEG+DH
Sep 13 20:56:51.643471: | local proposal 2 type ENCR has 1 transforms
Sep 13 20:56:51.643472: | local proposal 2 type PRF has 0 transforms
Sep 13 20:56:51.643474: | local proposal 2 type INTEG has 1 transforms
Sep 13 20:56:51.643476: | local proposal 2 type DH has 1 transforms
Sep 13 20:56:51.643478: | local proposal 2 type ESN has 1 transforms
Sep 13 20:56:51.643480: | local proposal 2 transforms: required: ENCR+INTEG+ESN; optional: DH
Sep 13 20:56:51.643481: | local proposal 3 type ENCR has 1 transforms
Sep 13 20:56:51.643483: | local proposal 3 type PRF has 0 transforms
Sep 13 20:56:51.643485: | local proposal 3 type INTEG has 1 transforms
Sep 13 20:56:51.643487: | local proposal 3 type DH has 1 transforms
Sep 13 20:56:51.643490: | local proposal 3 type ESN has 1 transforms
Sep 13 20:56:51.643492: | local proposal 3 transforms: required: ENCR+INTEG+ESN; optional: DH
Sep 13 20:56:51.643494: | local proposal 4 type ENCR has 1 transforms
Sep 13 20:56:51.643496: | local proposal 4 type PRF has 0 transforms
Sep 13 20:56:51.643497: | local proposal 4 type INTEG has 1 transforms
Sep 13 20:56:51.643499: | local proposal 4 type DH has 1 transforms
Sep 13 20:56:51.643501: | local proposal 4 type ESN has 1 transforms
Sep 13 20:56:51.643503: | local proposal 4 transforms: required: ENCR+INTEG+ESN; optional: DH
Sep 13 20:56:51.643505: | local proposal 5 type ENCR has 1 transforms
Sep 13 20:56:51.643506: | local proposal 5 type PRF has 0 transforms
Sep 13 20:56:51.643508: | local proposal 5 type INTEG has 1 transforms
Sep 13 20:56:51.643510: | local proposal 5 type DH has 1 transforms
Sep 13 20:56:51.643511: | local proposal 5 type ESN has 1 transforms
Sep 13 20:56:51.643513: | local proposal 5 transforms: required: ENCR+INTEG+ESN; optional: DH
Sep 13 20:56:51.643515: | local proposal 6 type ENCR has 1 transforms
Sep 13 20:56:51.643517: | local proposal 6 type PRF has 0 transforms
Sep 13 20:56:51.643519: | local proposal 6 type INTEG has 1 transforms
Sep 13 20:56:51.643520: | local proposal 6 type DH has 1 transforms
Sep 13 20:56:51.643522: | local proposal 6 type ESN has 1 transforms
Sep 13 20:56:51.643524: | local proposal 6 transforms: required: ENCR+INTEG+ESN; optional: DH
Sep 13 20:56:51.643526: | ***parse IKEv2 Proposal Substructure Payload:
Sep 13 20:56:51.643528: |    last proposal: v2_PROPOSAL_LAST (0x0)
Sep 13 20:56:51.643530: |    length: 36 (00 24)
Sep 13 20:56:51.643532: |    prop #: 1 (01)
Sep 13 20:56:51.643534: |    proto ID: IKEv2_SEC_PROTO_ESP (0x3)
Sep 13 20:56:51.643536: |    spi size: 4 (04)
Sep 13 20:56:51.643538: |    # transforms: 3 (03)
Sep 13 20:56:51.643540: | parsing 4 raw bytes of IKEv2 Proposal Substructure Payload into remote SPI
Sep 13 20:56:51.643542: | remote SPI
Sep 13 20:56:51.643544: |   0a d2 d1 db
Sep 13 20:56:51.643546: | Comparing remote proposal 1 containing 3 transforms against local proposal [1..6] of 6 local proposals
Sep 13 20:56:51.643548: | ****parse IKEv2 Transform Substructure Payload:
Sep 13 20:56:51.643550: |    last transform: v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.643552: |    length: 8 (00 08)
Sep 13 20:56:51.643554: |    IKEv2 transform type: TRANS_TYPE_ENCR (0x1)
Sep 13 20:56:51.643556: |    IKEv2 transform ID: 3DES (0x3)
Sep 13 20:56:51.643559: | remote proposal 1 transform 0 (ENCR=3DES) matches local proposal 6 type 1 (ENCR) transform 0
Sep 13 20:56:51.643561: | ****parse IKEv2 Transform Substructure Payload:
Sep 13 20:56:51.643562: |    last transform: v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.643564: |    length: 8 (00 08)
Sep 13 20:56:51.643566: |    IKEv2 transform type: TRANS_TYPE_INTEG (0x3)
Sep 13 20:56:51.643568: |    IKEv2 transform ID: AUTH_HMAC_SHA1_96 (0x2)
Sep 13 20:56:51.643570: | remote proposal 1 transform 1 (INTEG=HMAC_SHA1_96) matches local proposal 2 type 3 (INTEG) transform 0
Sep 13 20:56:51.643572: | remote proposal 1 transform 1 (INTEG=HMAC_SHA1_96) matches local proposal 3 type 3 (INTEG) transform 0
Sep 13 20:56:51.643574: | remote proposal 1 transform 1 (INTEG=HMAC_SHA1_96) matches local proposal 6 type 3 (INTEG) transform 0
Sep 13 20:56:51.643576: | ****parse IKEv2 Transform Substructure Payload:
Sep 13 20:56:51.643578: |    last transform: v2_TRANSFORM_LAST (0x0)
Sep 13 20:56:51.643580: |    length: 8 (00 08)
Sep 13 20:56:51.643582: |    IKEv2 transform type: TRANS_TYPE_ESN (0x5)
Sep 13 20:56:51.643583: |    IKEv2 transform ID: ESN_DISABLED (0x0)
Sep 13 20:56:51.643585: | remote proposal 1 transform 2 (ESN=DISABLED) matches local proposal 1 type 5 (ESN) transform 0
Sep 13 20:56:51.643588: | remote proposal 1 transform 2 (ESN=DISABLED) matches local proposal 2 type 5 (ESN) transform 0
Sep 13 20:56:51.643590: | remote proposal 1 transform 2 (ESN=DISABLED) matches local proposal 3 type 5 (ESN) transform 0
Sep 13 20:56:51.643593: | remote proposal 1 transform 2 (ESN=DISABLED) matches local proposal 4 type 5 (ESN) transform 0
Sep 13 20:56:51.643595: | remote proposal 1 transform 2 (ESN=DISABLED) matches local proposal 5 type 5 (ESN) transform 0
Sep 13 20:56:51.643597: | remote proposal 1 transform 2 (ESN=DISABLED) matches local proposal 6 type 5 (ESN) transform 0
Sep 13 20:56:51.643600: | remote proposal 1 proposed transforms: ENCR+INTEG+ESN; matched: ENCR+INTEG+ESN; unmatched: none
Sep 13 20:56:51.643620: | comparing remote proposal 1 containing ENCR+INTEG+ESN transforms to local proposal 1; required: ENCR+ESN; optional: INTEG+DH; matched: ESN
Sep 13 20:56:51.643623: | remote proposal 1 does not match local proposal 1; unmatched transforms: ENCR+INTEG; missing transforms: ENCR
Sep 13 20:56:51.643626: | comparing remote proposal 1 containing ENCR+INTEG+ESN transforms to local proposal 2; required: ENCR+INTEG+ESN; optional: DH; matched: INTEG+ESN
Sep 13 20:56:51.643628: | remote proposal 1 does not match local proposal 2; unmatched transforms: ENCR; missing transforms: ENCR
Sep 13 20:56:51.643630: | comparing remote proposal 1 containing ENCR+INTEG+ESN transforms to local proposal 3; required: ENCR+INTEG+ESN; optional: DH; matched: INTEG+ESN
Sep 13 20:56:51.643632: | remote proposal 1 does not match local proposal 3; unmatched transforms: ENCR; missing transforms: ENCR
Sep 13 20:56:51.643635: | comparing remote proposal 1 containing ENCR+INTEG+ESN transforms to local proposal 4; required: ENCR+INTEG+ESN; optional: DH; matched: ESN
Sep 13 20:56:51.643637: | remote proposal 1 does not match local proposal 4; unmatched transforms: ENCR+INTEG; missing transforms: ENCR+INTEG
Sep 13 20:56:51.643639: | comparing remote proposal 1 containing ENCR+INTEG+ESN transforms to local proposal 5; required: ENCR+INTEG+ESN; optional: DH; matched: ESN
Sep 13 20:56:51.643641: | remote proposal 1 does not match local proposal 5; unmatched transforms: ENCR+INTEG; missing transforms: ENCR+INTEG
Sep 13 20:56:51.643644: | comparing remote proposal 1 containing ENCR+INTEG+ESN transforms to local proposal 6; required: ENCR+INTEG+ESN; optional: DH; matched: ENCR+INTEG+ESN
Sep 13 20:56:51.643646: | remote proposal 1 matches local proposal 6
Sep 13 20:56:51.643651: "ikev2-cert"[1] 192.168.0.1 #1: proposal 1:ESP=3DES-HMAC_SHA1_96-DISABLED SPI=0ad2d1db chosen from remote proposals 1:ESP:ENCR=3DES;INTEG=HMAC_SHA1_96;ESN=DISABLED[first-match]
Sep 13 20:56:51.643654: | IKE_AUTH responder matching remote ESP/AH proposals ikev2_proposal: 1:ESP=3DES-HMAC_SHA1_96-DISABLED SPI=0ad2d1db
Sep 13 20:56:51.643656: | converting proposal to internal trans attrs
Sep 13 20:56:51.643659: | encryption ike_alg_lookup_by_id id: 3DES=3, found 3DES_CBC

Sep 13 20:56:51.643662: | integrity ike_alg_lookup_by_id id: HMAC_SHA1_96=2, found HMAC_SHA1_96

Sep 13 20:56:51.643665: | DH ike_alg_lookup_by_id id: NONE=0, found NONE

Sep 13 20:56:51.643692: | netlink_get_spi: allocated 0x7df75183 for esp.0@192.168.0.136
Sep 13 20:56:51.643696: | Emitting ikev2_proposal ...
Sep 13 20:56:51.643698: | ****emit IKEv2 Security Association Payload:
Sep 13 20:56:51.643700: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.643702: |    flags: none (0x0)
Sep 13 20:56:51.643704: | next payload chain: setting previous 'IKEv2 Authentication Payload'.'next payload type' to current IKEv2 Security Association Payload (33:ISAKMP_NEXT_v2SA)
Sep 13 20:56:51.643707: | next payload chain: saving location 'IKEv2 Security Association Payload'.'next payload type' in 'reply packet'
Sep 13 20:56:51.643709: | *****emit IKEv2 Proposal Substructure Payload:
Sep 13 20:56:51.643711: |    last proposal: v2_PROPOSAL_LAST (0x0)
Sep 13 20:56:51.643713: |    prop #: 1 (01)
Sep 13 20:56:51.643715: |    proto ID: IKEv2_SEC_PROTO_ESP (0x3)
Sep 13 20:56:51.643717: |    spi size: 4 (04)
Sep 13 20:56:51.643718: |    # transforms: 3 (03)
Sep 13 20:56:51.643720: | last substructure: saving location 'IKEv2 Security Association Payload'.'IKEv2 Proposal Substructure Payload'.'last proposal'
Sep 13 20:56:51.643723: | emitting 4 raw bytes of our spi into IKEv2 Proposal Substructure Payload
Sep 13 20:56:51.643728: | our spi: 7d f7 51 83
Sep 13 20:56:51.643730: | ******emit IKEv2 Transform Substructure Payload:
Sep 13 20:56:51.643731: |    last transform: v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.643733: |    IKEv2 transform type: TRANS_TYPE_ENCR (0x1)
Sep 13 20:56:51.643735: |    IKEv2 transform ID: 3DES (0x3)
Sep 13 20:56:51.643737: | last substructure: saving location 'IKEv2 Proposal Substructure Payload'.'IKEv2 Transform Substructure Payload'.'last transform'
Sep 13 20:56:51.643739: | emitting length of IKEv2 Transform Substructure Payload: 8
Sep 13 20:56:51.643741: | ******emit IKEv2 Transform Substructure Payload:
Sep 13 20:56:51.643743: |    last transform: v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.643744: |    IKEv2 transform type: TRANS_TYPE_INTEG (0x3)
Sep 13 20:56:51.643746: |    IKEv2 transform ID: AUTH_HMAC_SHA1_96 (0x2)
Sep 13 20:56:51.643748: | last substructure: checking 'IKEv2 Proposal Substructure Payload'.'IKEv2 Transform Substructure Payload'.'last transform' is v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.643750: | last substructure: saving location 'IKEv2 Proposal Substructure Payload'.'IKEv2 Transform Substructure Payload'.'last transform'
Sep 13 20:56:51.643752: | emitting length of IKEv2 Transform Substructure Payload: 8
Sep 13 20:56:51.643754: | ******emit IKEv2 Transform Substructure Payload:
Sep 13 20:56:51.643756: |    last transform: v2_TRANSFORM_LAST (0x0)
Sep 13 20:56:51.643757: |    IKEv2 transform type: TRANS_TYPE_ESN (0x5)
Sep 13 20:56:51.643759: |    IKEv2 transform ID: ESN_DISABLED (0x0)
Sep 13 20:56:51.643761: | last substructure: checking 'IKEv2 Proposal Substructure Payload'.'IKEv2 Transform Substructure Payload'.'last transform' is v2_TRANSFORM_NON_LAST (0x3)
Sep 13 20:56:51.643763: | last substructure: saving location 'IKEv2 Proposal Substructure Payload'.'IKEv2 Transform Substructure Payload'.'last transform'
Sep 13 20:56:51.643765: | emitting length of IKEv2 Transform Substructure Payload: 8
Sep 13 20:56:51.643767: | emitting length of IKEv2 Proposal Substructure Payload: 36
Sep 13 20:56:51.643768: | last substructure: checking 'IKEv2 Proposal Substructure Payload'.'IKEv2 Transform Substructure Payload'.'last transform' is 0
Sep 13 20:56:51.643770: | emitting length of IKEv2 Security Association Payload: 40
Sep 13 20:56:51.643772: | last substructure: checking 'IKEv2 Security Association Payload'.'IKEv2 Proposal Substructure Payload'.'last proposal' is 0
Sep 13 20:56:51.643774: | ****emit IKEv2 Traffic Selector - Initiator - Payload:
Sep 13 20:56:51.643776: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.643778: |    flags: none (0x0)
Sep 13 20:56:51.643780: |    number of TS: 1 (01)
Sep 13 20:56:51.643782: | next payload chain: setting previous 'IKEv2 Security Association Payload'.'next payload type' to current IKEv2 Traffic Selector - Initiator - Payload (44:ISAKMP_NEXT_v2TSi)
Sep 13 20:56:51.643784: | next payload chain: saving location 'IKEv2 Traffic Selector - Initiator - Payload'.'next payload type' in 'reply packet'
Sep 13 20:56:51.643786: | *****emit IKEv2 Traffic Selector:
Sep 13 20:56:51.643788: |    TS type: IKEv2_TS_IPV4_ADDR_RANGE (0x7)
Sep 13 20:56:51.643789: |    IP Protocol ID: 0 (00)
Sep 13 20:56:51.643792: |    start port: 0 (00 00)
Sep 13 20:56:51.643794: |    end port: 65535 (ff ff)
Sep 13 20:56:51.643796: | emitting 4 raw bytes of IP start into IKEv2 Traffic Selector
Sep 13 20:56:51.643798: | IP start: c0 a8 00 01
Sep 13 20:56:51.643800: | emitting 4 raw bytes of IP end into IKEv2 Traffic Selector
Sep 13 20:56:51.643802: | IP end: c0 a8 00 01
Sep 13 20:56:51.643804: | emitting length of IKEv2 Traffic Selector: 16
Sep 13 20:56:51.643806: | emitting length of IKEv2 Traffic Selector - Initiator - Payload: 24
Sep 13 20:56:51.643807: | ****emit IKEv2 Traffic Selector - Responder - Payload:
Sep 13 20:56:51.643809: |    next payload type: ISAKMP_NEXT_v2NONE (0x0)
Sep 13 20:56:51.643811: |    flags: none (0x0)
Sep 13 20:56:51.643813: |    number of TS: 1 (01)
Sep 13 20:56:51.643816: | next payload chain: setting previous 'IKEv2 Traffic Selector - Initiator - Payload'.'next payload type' to current IKEv2 Traffic Selector - Responder - Payload (45:ISAKMP_NEXT_v2TSr)
Sep 13 20:56:51.643818: | next payload chain: saving location 'IKEv2 Traffic Selector - Responder - Payload'.'next payload type' in 'reply packet'
Sep 13 20:56:51.643820: | *****emit IKEv2 Traffic Selector:
Sep 13 20:56:51.643822: |    TS type: IKEv2_TS_IPV4_ADDR_RANGE (0x7)
Sep 13 20:56:51.643824: |    IP Protocol ID: 0 (00)
Sep 13 20:56:51.643826: |    start port: 0 (00 00)
Sep 13 20:56:51.643828: |    end port: 65535 (ff ff)
Sep 13 20:56:51.643830: | emitting 4 raw bytes of IP start into IKEv2 Traffic Selector
Sep 13 20:56:51.643832: | IP start: c0 a8 00 88
Sep 13 20:56:51.643834: | emitting 4 raw bytes of IP end into IKEv2 Traffic Selector
Sep 13 20:56:51.643836: | IP end: c0 a8 00 88
Sep 13 20:56:51.643838: | emitting length of IKEv2 Traffic Selector: 16
Sep 13 20:56:51.643839: | emitting length of IKEv2 Traffic Selector - Responder - Payload: 24
Sep 13 20:56:51.643841: | Initiator child policy is compress=no, NOT sending v2N_IPCOMP_SUPPORTED
Sep 13 20:56:51.643844: | integ=sha: .key_size=20 encrypt=3des_cbc: .key_size=24 .salt_size=0 keymat_len=44
Sep 13 20:56:51.643847: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.643848: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.643850: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.643852: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.643854: |     params: 16-bytes@0x7ffee51a2f10
Sep 13 20:56:51.643870: |     result: newref data=Ni-key@0x55b124e73350 (48-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.643873: |     key-offset: 0, key-size: 32
Sep 13 20:56:51.643875: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.643876: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.643878: |     key_size: 32-bytes
Sep 13 20:56:51.643880: |     base: base-key@0x55b124e73350 (48-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.643882: |     operation: FLAGS_ONLY
Sep 13 20:56:51.643883: |     params: 8-bytes@0x7ffee51a2ef8
Sep 13 20:56:51.643889: |     result: newref data=Ni-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.643891: | data=Ni: delref tmp-key@0x55b124e73350
Sep 13 20:56:51.643893: | CONCATENATE_BASE_AND_DATA:
Sep 13 20:56:51.643895: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.643897: |     base: base-key@0x55b124e3cfa0 (32-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.643899: |     params: 16-bytes@0x7ffee51a2f40
Sep 13 20:56:51.643905: |     result: newref data+=Nr-key@0x55b124e73350 (64-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.643907: | append_symkey_bytes: delref lhs-key@0x55b124e3cfa0
Sep 13 20:56:51.643910: | prf+0 PRF sha init key-key@0x55b124e3b690 (size 20)
Sep 13 20:56:51.643912: | prf+0: key-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.643914: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.643916: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.643917: |     target: SHA_1_HMAC
Sep 13 20:56:51.643919: |     flags: SIGN
Sep 13 20:56:51.643921: |     key_size: 20-bytes
Sep 13 20:56:51.643922: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.643924: |     operation: FLAGS_ONLY
Sep 13 20:56:51.643926: |     params: 8-bytes@0x7ffee51a2e48
Sep 13 20:56:51.643932: |     result: newref clone-key@0x55b124e3cfa0 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.643936: | prf+0 prf: created sha context 0x55b124e73230 from key-key@0x55b124e3cfa0
Sep 13 20:56:51.643939: | prf+0 prf: begin sha with context 0x55b124e73230 from key-key@0x55b124e3cfa0
Sep 13 20:56:51.643941: | prf+0: delref clone-key@0x55b124e3cfa0
Sep 13 20:56:51.643943: | prf+0 PRF sha crypt-prf@0x55b124e7aca8
Sep 13 20:56:51.643945: | prf+0 PRF sha update seed-key@0x55b124e73350 (size 64)
Sep 13 20:56:51.643949: | prf+0: seed-key@0x55b124e73350 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.643951: | nss hmac digest hack extracting all 64 bytes of key@0x55b124e73350
Sep 13 20:56:51.643953: | nss hmac digest hack: symkey-key@0x55b124e73350 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.643956: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.643961: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.643964: | sizeof bytes 64
Sep 13 20:56:51.643976: | wrapper: (SECItemType)602024119: 38 ac 9b 22  1b bc 7d f8  72 dd d5 9a  0c 96 6c 88  a9 cc 92 7d  07 9f 60 7e  c4 61 7f 57  63 50 2b 53  20 27 2f e7  9d d5 19 b0  19 a9 22 30  8b fc e2 2e  c8 68 a1 24  b1 21 7a 21  a0 99 94 a4  02 23 5f 3d
Sep 13 20:56:51.643980: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.643983: | nss hmac digest hack extracted len 64 bytes at 0x55b124e7cdc8
Sep 13 20:56:51.643985: | unwrapped:
Sep 13 20:56:51.643987: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.643989: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.643991: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.643992: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.643995: | prf+0 PRF sha update 1++-byte@0x1 (1)
Sep 13 20:56:51.643997: |   01
Sep 13 20:56:51.644001: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644003: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.644005: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644007: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644009: |     params: 16-bytes@0x7ffee51a2e30
Sep 13 20:56:51.644019: |     result: newref final-key@0x55b124e75f10 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.644022: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.644023: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.644025: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644027: |     key_size: 20-bytes
Sep 13 20:56:51.644028: |     base: base-key@0x55b124e75f10 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644030: |     operation: FLAGS_ONLY
Sep 13 20:56:51.644032: |     params: 8-bytes@0x7ffee51a2e18
Sep 13 20:56:51.644037: |     result: newref final-key@0x55b124e3cfa0 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.644039: | final: delref tmp-key@0x55b124e75f10
Sep 13 20:56:51.644042: | prf+0 PRF sha final-key@0x55b124e3cfa0 (size 20)
Sep 13 20:56:51.644044: | prf+0: key-key@0x55b124e3cfa0 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644046: | prfplus: addref old_t[1]-key@0x55b124e3cfa0
Sep 13 20:56:51.644048: | prf+N PRF sha init key-key@0x55b124e3b690 (size 20)
Sep 13 20:56:51.644050: | prf+N: key-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644052: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.644053: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.644055: |     target: SHA_1_HMAC
Sep 13 20:56:51.644056: |     flags: SIGN
Sep 13 20:56:51.644058: |     key_size: 20-bytes
Sep 13 20:56:51.644060: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644061: |     operation: FLAGS_ONLY
Sep 13 20:56:51.644063: |     params: 8-bytes@0x7ffee51a2e48
Sep 13 20:56:51.644068: |     result: newref clone-key@0x55b124e75f10 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.644072: | prf+N prf: created sha context 0x55b124e73230 from key-key@0x55b124e75f10
Sep 13 20:56:51.644074: | prf+N prf: begin sha with context 0x55b124e73230 from key-key@0x55b124e75f10
Sep 13 20:56:51.644076: | prf+N: delref clone-key@0x55b124e75f10
Sep 13 20:56:51.644078: | prf+N PRF sha crypt-prf@0x55b124e75578
Sep 13 20:56:51.644080: | prf+N PRF sha update old_t-key@0x55b124e3cfa0 (size 20)
Sep 13 20:56:51.644082: | prf+N: old_t-key@0x55b124e3cfa0 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644084: | nss hmac digest hack extracting all 20 bytes of key@0x55b124e3cfa0
Sep 13 20:56:51.644088: | nss hmac digest hack: symkey-key@0x55b124e3cfa0 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644090: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644096: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644098: | sizeof bytes 32
Sep 13 20:56:51.644106: | wrapper: (SECItemType)602024138: 48 12 bc 84  55 32 79 a3  36 4a b0 0d  96 5a c5 50  c5 6f d2 c1  24 48 95 50  07 c9 c8 7d  fd d6 da c4
Sep 13 20:56:51.644109: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.644112: | nss hmac digest hack extracted len 32 bytes at 0x55b124e720f8
Sep 13 20:56:51.644114: | unwrapped:
Sep 13 20:56:51.644116: |   21 78 e4 8d  70 a9 1c f8  0b 6f 04 7a  ae 56 08 69
Sep 13 20:56:51.644117: |   36 fe 35 84  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:51.644120: | prf+N PRF sha update seed-key@0x55b124e73350 (size 64)
Sep 13 20:56:51.644122: | prf+N: seed-key@0x55b124e73350 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644124: | nss hmac digest hack extracting all 64 bytes of key@0x55b124e73350
Sep 13 20:56:51.644126: | nss hmac digest hack: symkey-key@0x55b124e73350 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644128: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644132: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644134: | sizeof bytes 64
Sep 13 20:56:51.644144: | wrapper: (SECItemType)602024138: 38 ac 9b 22  1b bc 7d f8  72 dd d5 9a  0c 96 6c 88  a9 cc 92 7d  07 9f 60 7e  c4 61 7f 57  63 50 2b 53  20 27 2f e7  9d d5 19 b0  19 a9 22 30  8b fc e2 2e  c8 68 a1 24  b1 21 7a 21  a0 99 94 a4  02 23 5f 3d
Sep 13 20:56:51.644148: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.644150: | nss hmac digest hack extracted len 64 bytes at 0x55b124e7af68
Sep 13 20:56:51.644152: | unwrapped:
Sep 13 20:56:51.644154: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.644156: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.644157: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.644159: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.644161: | prf+N PRF sha update N++-byte@0x2 (2)
Sep 13 20:56:51.644163: |   02
Sep 13 20:56:51.644167: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644169: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.644171: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644173: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644174: |     params: 16-bytes@0x7ffee51a2e30
Sep 13 20:56:51.644184: |     result: newref final-key@0x55b124e7ad20 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.644187: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.644188: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.644190: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644191: |     key_size: 20-bytes
Sep 13 20:56:51.644193: |     base: base-key@0x55b124e7ad20 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644195: |     operation: FLAGS_ONLY
Sep 13 20:56:51.644197: |     params: 8-bytes@0x7ffee51a2e18
Sep 13 20:56:51.644201: |     result: newref final-key@0x55b124e75f10 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.644204: | final: delref tmp-key@0x55b124e7ad20
Sep 13 20:56:51.644206: | prf+N PRF sha final-key@0x55b124e75f10 (size 20)
Sep 13 20:56:51.644208: | prf+N: key-key@0x55b124e75f10 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644210: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:51.644212: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644214: |     base: base-key@0x55b124e3cfa0 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644216: |     params: 8-bytes@0x7ffee51a2ee8
Sep 13 20:56:51.644222: |     result: newref result-key@0x55b124e7ad20 (40-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:51.644226: | append_symkey_symkey: delref lhs-key@0x55b124e3cfa0
Sep 13 20:56:51.644228: | prfplus: delref old_t[N]-key@0x55b124e3cfa0
Sep 13 20:56:51.644230: | prf+N PRF sha init key-key@0x55b124e3b690 (size 20)
Sep 13 20:56:51.644232: | prf+N: key-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644234: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.644236: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.644237: |     target: SHA_1_HMAC
Sep 13 20:56:51.644239: |     flags: SIGN
Sep 13 20:56:51.644240: |     key_size: 20-bytes
Sep 13 20:56:51.644242: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644244: |     operation: FLAGS_ONLY
Sep 13 20:56:51.644246: |     params: 8-bytes@0x7ffee51a2e48
Sep 13 20:56:51.644251: |     result: newref clone-key@0x55b124e3cfa0 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.644254: | prf+N prf: created sha context 0x55b124e73230 from key-key@0x55b124e3cfa0
Sep 13 20:56:51.644257: | prf+N prf: begin sha with context 0x55b124e73230 from key-key@0x55b124e3cfa0
Sep 13 20:56:51.644258: | prf+N: delref clone-key@0x55b124e3cfa0
Sep 13 20:56:51.644260: | prf+N PRF sha crypt-prf@0x55b124e7aca8
Sep 13 20:56:51.644262: | prf+N PRF sha update old_t-key@0x55b124e75f10 (size 20)
Sep 13 20:56:51.644264: | prf+N: old_t-key@0x55b124e75f10 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644266: | nss hmac digest hack extracting all 20 bytes of key@0x55b124e75f10
Sep 13 20:56:51.644268: | nss hmac digest hack: symkey-key@0x55b124e75f10 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644270: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644276: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644278: | sizeof bytes 32
Sep 13 20:56:51.644285: | wrapper: (SECItemType)602024138: 43 ce 63 c8  3e b9 29 ec  19 23 db 50  cb f5 51 c4  ef c3 27 2c  11 f8 3a 0d  b4 30 0e 14  52 03 a1 22
Sep 13 20:56:51.644289: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.644291: | nss hmac digest hack extracted len 32 bytes at 0x55b124e720f8
Sep 13 20:56:51.644293: | unwrapped:
Sep 13 20:56:51.644295: |   4b f1 df 13  14 03 f6 29  81 05 e6 31  48 7d 16 49
Sep 13 20:56:51.644296: |   51 ec f2 3b  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:51.644299: | prf+N PRF sha update seed-key@0x55b124e73350 (size 64)
Sep 13 20:56:51.644301: | prf+N: seed-key@0x55b124e73350 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644303: | nss hmac digest hack extracting all 64 bytes of key@0x55b124e73350
Sep 13 20:56:51.644305: | nss hmac digest hack: symkey-key@0x55b124e73350 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644307: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644311: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644313: | sizeof bytes 64
Sep 13 20:56:51.644323: | wrapper: (SECItemType)602024138: 38 ac 9b 22  1b bc 7d f8  72 dd d5 9a  0c 96 6c 88  a9 cc 92 7d  07 9f 60 7e  c4 61 7f 57  63 50 2b 53  20 27 2f e7  9d d5 19 b0  19 a9 22 30  8b fc e2 2e  c8 68 a1 24  b1 21 7a 21  a0 99 94 a4  02 23 5f 3d
Sep 13 20:56:51.644328: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.644330: | nss hmac digest hack extracted len 64 bytes at 0x55b124e796d8
Sep 13 20:56:51.644332: | unwrapped:
Sep 13 20:56:51.644334: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.644336: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.644337: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.644339: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.644341: | prf+N PRF sha update N++-byte@0x3 (3)
Sep 13 20:56:51.644343: |   03
Sep 13 20:56:51.644347: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644349: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.644351: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644353: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644356: |     params: 16-bytes@0x7ffee51a2e30
Sep 13 20:56:51.644366: |     result: newref final-key@0x55b124e795b0 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.644369: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.644370: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.644372: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644374: |     key_size: 20-bytes
Sep 13 20:56:51.644375: |     base: base-key@0x55b124e795b0 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644377: |     operation: FLAGS_ONLY
Sep 13 20:56:51.644379: |     params: 8-bytes@0x7ffee51a2e18
Sep 13 20:56:51.644383: |     result: newref final-key@0x55b124e3cfa0 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.644386: | final: delref tmp-key@0x55b124e795b0
Sep 13 20:56:51.644388: | prf+N PRF sha final-key@0x55b124e3cfa0 (size 20)
Sep 13 20:56:51.644390: | prf+N: key-key@0x55b124e3cfa0 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644392: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:51.644394: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644396: |     base: base-key@0x55b124e7ad20 (40-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644397: |     params: 8-bytes@0x7ffee51a2ee8
Sep 13 20:56:51.644403: |     result: newref result-key@0x55b124e795b0 (60-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:51.644405: | append_symkey_symkey: delref lhs-key@0x55b124e7ad20
Sep 13 20:56:51.644408: | prfplus: delref old_t[N]-key@0x55b124e75f10
Sep 13 20:56:51.644410: | prf+N PRF sha init key-key@0x55b124e3b690 (size 20)
Sep 13 20:56:51.644413: | prf+N: key-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644414: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.644416: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.644417: |     target: SHA_1_HMAC
Sep 13 20:56:51.644419: |     flags: SIGN
Sep 13 20:56:51.644421: |     key_size: 20-bytes
Sep 13 20:56:51.644422: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644424: |     operation: FLAGS_ONLY
Sep 13 20:56:51.644426: |     params: 8-bytes@0x7ffee51a2e48
Sep 13 20:56:51.644431: |     result: newref clone-key@0x55b124e75f10 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.644434: | prf+N prf: created sha context 0x55b124e73230 from key-key@0x55b124e75f10
Sep 13 20:56:51.644437: | prf+N prf: begin sha with context 0x55b124e73230 from key-key@0x55b124e75f10
Sep 13 20:56:51.644439: | prf+N: delref clone-key@0x55b124e75f10
Sep 13 20:56:51.644440: | prf+N PRF sha crypt-prf@0x55b124e7cdb8
Sep 13 20:56:51.644442: | prf+N PRF sha update old_t-key@0x55b124e3cfa0 (size 20)
Sep 13 20:56:51.644444: | prf+N: old_t-key@0x55b124e3cfa0 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644446: | nss hmac digest hack extracting all 20 bytes of key@0x55b124e3cfa0
Sep 13 20:56:51.644448: | nss hmac digest hack: symkey-key@0x55b124e3cfa0 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644450: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644455: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644457: | sizeof bytes 32
Sep 13 20:56:51.644464: | wrapper: (SECItemType)602024138: 56 55 9b 6e  35 03 09 81  3c 63 52 f3  bb 5f af 50  6e b7 db e0  ab 42 1f 2c  7d 45 67 21  d9 ce 16 28
Sep 13 20:56:51.644468: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.644470: | nss hmac digest hack extracted len 32 bytes at 0x55b124e79668
Sep 13 20:56:51.644472: | unwrapped:
Sep 13 20:56:51.644474: |   85 dd 92 09  e9 24 57 de  44 b9 d0 78  74 bc bf c9
Sep 13 20:56:51.644476: |   1a e1 3b 89  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:51.644478: | prf+N PRF sha update seed-key@0x55b124e73350 (size 64)
Sep 13 20:56:51.644480: | prf+N: seed-key@0x55b124e73350 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644482: | nss hmac digest hack extracting all 64 bytes of key@0x55b124e73350
Sep 13 20:56:51.644486: | nss hmac digest hack: symkey-key@0x55b124e73350 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644488: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644493: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644495: | sizeof bytes 64
Sep 13 20:56:51.644505: | wrapper: (SECItemType)602024138: 38 ac 9b 22  1b bc 7d f8  72 dd d5 9a  0c 96 6c 88  a9 cc 92 7d  07 9f 60 7e  c4 61 7f 57  63 50 2b 53  20 27 2f e7  9d d5 19 b0  19 a9 22 30  8b fc e2 2e  c8 68 a1 24  b1 21 7a 21  a0 99 94 a4  02 23 5f 3d
Sep 13 20:56:51.644508: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.644511: | nss hmac digest hack extracted len 64 bytes at 0x55b124e7ced8
Sep 13 20:56:51.644513: | unwrapped:
Sep 13 20:56:51.644515: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.644516: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.644518: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.644520: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.644522: | prf+N PRF sha update N++-byte@0x4 (4)
Sep 13 20:56:51.644524: |   04
Sep 13 20:56:51.644528: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644530: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.644531: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644533: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644535: |     params: 16-bytes@0x7ffee51a2e30
Sep 13 20:56:51.644544: |     result: newref final-key@0x55b124e7ad20 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.644547: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.644548: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.644550: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644552: |     key_size: 20-bytes
Sep 13 20:56:51.644553: |     base: base-key@0x55b124e7ad20 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644555: |     operation: FLAGS_ONLY
Sep 13 20:56:51.644557: |     params: 8-bytes@0x7ffee51a2e18
Sep 13 20:56:51.644562: |     result: newref final-key@0x55b124e75f10 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.644564: | final: delref tmp-key@0x55b124e7ad20
Sep 13 20:56:51.644566: | prf+N PRF sha final-key@0x55b124e75f10 (size 20)
Sep 13 20:56:51.644568: | prf+N: key-key@0x55b124e75f10 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644570: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:51.644572: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644574: |     base: base-key@0x55b124e795b0 (60-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644575: |     params: 8-bytes@0x7ffee51a2ee8
Sep 13 20:56:51.644581: |     result: newref result-key@0x55b124e7ad20 (80-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:51.644583: | append_symkey_symkey: delref lhs-key@0x55b124e795b0
Sep 13 20:56:51.644586: | prfplus: delref old_t[N]-key@0x55b124e3cfa0
Sep 13 20:56:51.644588: | prf+N PRF sha init key-key@0x55b124e3b690 (size 20)
Sep 13 20:56:51.644591: | prf+N: key-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644592: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.644594: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.644596: |     target: SHA_1_HMAC
Sep 13 20:56:51.644597: |     flags: SIGN
Sep 13 20:56:51.644630: |     key_size: 20-bytes
Sep 13 20:56:51.644633: |     base: base-key@0x55b124e3b690 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644635: |     operation: FLAGS_ONLY
Sep 13 20:56:51.644636: |     params: 8-bytes@0x7ffee51a2e48
Sep 13 20:56:51.644643: |     result: newref clone-key@0x55b124e3cfa0 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.644648: | prf+N prf: created sha context 0x55b124e73230 from key-key@0x55b124e3cfa0
Sep 13 20:56:51.644650: | prf+N prf: begin sha with context 0x55b124e73230 from key-key@0x55b124e3cfa0
Sep 13 20:56:51.644655: | prf+N: delref clone-key@0x55b124e3cfa0
Sep 13 20:56:51.644657: | prf+N PRF sha crypt-prf@0x55b124e75578
Sep 13 20:56:51.644659: | prf+N PRF sha update old_t-key@0x55b124e75f10 (size 20)
Sep 13 20:56:51.644661: | prf+N: old_t-key@0x55b124e75f10 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644663: | nss hmac digest hack extracting all 20 bytes of key@0x55b124e75f10
Sep 13 20:56:51.644665: | nss hmac digest hack: symkey-key@0x55b124e75f10 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644667: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644672: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644675: | sizeof bytes 32
Sep 13 20:56:51.644682: | wrapper: (SECItemType)602024138: 2d 97 aa ae  be 29 ca 3f  99 77 88 f2  5d 0c b9 75  35 b5 cb e8  6f 13 7d 3d  36 31 e7 e6  f5 22 dd 72
Sep 13 20:56:51.644686: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.644689: | nss hmac digest hack extracted len 32 bytes at 0x55b124e7acf8
Sep 13 20:56:51.644691: | unwrapped:
Sep 13 20:56:51.644693: |   a7 b6 37 4f  49 31 1a 09  b4 10 6d 87  1c f5 44 87
Sep 13 20:56:51.644694: |   55 9c d3 d5  00 00 00 00  00 00 00 00  00 00 00 00
Sep 13 20:56:51.644697: | prf+N PRF sha update seed-key@0x55b124e73350 (size 64)
Sep 13 20:56:51.644699: | prf+N: seed-key@0x55b124e73350 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644701: | nss hmac digest hack extracting all 64 bytes of key@0x55b124e73350
Sep 13 20:56:51.644702: | nss hmac digest hack: symkey-key@0x55b124e73350 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644704: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644709: | nss hmac digest hack: newref slot-key@0x55b124e3d030 (64-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644711: | sizeof bytes 64
Sep 13 20:56:51.644720: | wrapper: (SECItemType)602024138: 38 ac 9b 22  1b bc 7d f8  72 dd d5 9a  0c 96 6c 88  a9 cc 92 7d  07 9f 60 7e  c4 61 7f 57  63 50 2b 53  20 27 2f e7  9d d5 19 b0  19 a9 22 30  8b fc e2 2e  c8 68 a1 24  b1 21 7a 21  a0 99 94 a4  02 23 5f 3d
Sep 13 20:56:51.644724: | nss hmac digest hack: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.644727: | nss hmac digest hack extracted len 64 bytes at 0x55b124e796d8
Sep 13 20:56:51.644729: | unwrapped:
Sep 13 20:56:51.644730: |   cf b0 a3 2e  27 3c 52 27  bc 03 16 78  44 e1 bf 3e
Sep 13 20:56:51.644732: |   1d 4b d4 d1  1e 34 f3 5b  12 9e 5d 68  b0 76 76 a2
Sep 13 20:56:51.644734: |   ab ce b2 a9  cc ef 82 6d  4f 32 ca 04  34 3f e7 80
Sep 13 20:56:51.644735: |   35 d9 de 5a  7e 78 6e f9  f3 a9 d8 05  d1 f2 53 ad
Sep 13 20:56:51.644738: | prf+N PRF sha update N++-byte@0x5 (5)
Sep 13 20:56:51.644740: |   05
Sep 13 20:56:51.644744: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644746: | CONCATENATE_DATA_AND_BASE:
Sep 13 20:56:51.644747: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644749: |     base: base-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644751: |     params: 16-bytes@0x7ffee51a2e30
Sep 13 20:56:51.644761: |     result: newref final-key@0x55b124e795b0 (36-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_bytes() at crypt_symkey.c:224)
Sep 13 20:56:51.644763: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.644765: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.644766: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644768: |     key_size: 20-bytes
Sep 13 20:56:51.644770: |     base: base-key@0x55b124e795b0 (36-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644771: |     operation: FLAGS_ONLY
Sep 13 20:56:51.644773: |     params: 8-bytes@0x7ffee51a2e18
Sep 13 20:56:51.644778: |     result: newref final-key@0x55b124e3cfa0 (20-bytes, EXTRACT_KEY_FROM_KEY)(in symkey_from_bytes() at crypt_symkey.c:410)
Sep 13 20:56:51.644780: | final: delref tmp-key@0x55b124e795b0
Sep 13 20:56:51.644783: | prf+N PRF sha final-key@0x55b124e3cfa0 (size 20)
Sep 13 20:56:51.644785: | prf+N: key-key@0x55b124e3cfa0 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644787: | CONCATENATE_BASE_AND_KEY:
Sep 13 20:56:51.644790: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644792: |     base: base-key@0x55b124e7ad20 (80-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644794: |     params: 8-bytes@0x7ffee51a2ee8
Sep 13 20:56:51.644800: |     result: newref result-key@0x55b124e795b0 (100-bytes, EXTRACT_KEY_FROM_KEY)(in merge_symkey_symkey() at crypt_symkey.c:249)
Sep 13 20:56:51.644803: | append_symkey_symkey: delref lhs-key@0x55b124e7ad20
Sep 13 20:56:51.644805: | prfplus: delref old_t[N]-key@0x55b124e75f10
Sep 13 20:56:51.644808: | prfplus: delref old_t[final]-key@0x55b124e3cfa0
Sep 13 20:56:51.644810: | child_sa_keymat: delref data-key@0x55b124e73350
Sep 13 20:56:51.644813: |     key-offset: 0, key-size: 44
Sep 13 20:56:51.644815: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.644816: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644818: |     key_size: 44-bytes
Sep 13 20:56:51.644820: |     base: base-key@0x55b124e795b0 (100-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644822: |     operation: FLAGS_ONLY
Sep 13 20:56:51.644823: |     params: 8-bytes@0x7ffee51a2fd8
Sep 13 20:56:51.644828: |     result: newref result-key@0x55b124e73350 (44-bytes, EXTRACT_KEY_FROM_KEY)(in ikev2_derive_child_keys() at ikev2_crypto.c:128)
Sep 13 20:56:51.644831: | initiator to responder keys extracting all 44 bytes of key@0x55b124e73350
Sep 13 20:56:51.644833: | initiator to responder keys: symkey-key@0x55b124e73350 (44-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644835: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644839: | initiator to responder keys: newref slot-key@0x55b124e3d030 (44-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644842: | sizeof bytes 48
Sep 13 20:56:51.644850: | wrapper: siBuffer: 48 12 bc 84  55 32 79 a3  36 4a b0 0d  96 5a c5 50  55 eb 66 d1  5f b0 bb 05  8a 44 d5 be  4e f2 4d d4  d8 8f 63 42  b7 63 87 d7  08 df 29 51  95 24 95 68
Sep 13 20:56:51.644854: | initiator to responder keys: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.644857: | initiator to responder keys extracted len 48 bytes at 0x55b124e720f8
Sep 13 20:56:51.644859: | unwrapped:
Sep 13 20:56:51.644860: |   21 78 e4 8d  70 a9 1c f8  0b 6f 04 7a  ae 56 08 69
Sep 13 20:56:51.644862: |   36 fe 35 84  4b f1 df 13  14 03 f6 29  81 05 e6 31
Sep 13 20:56:51.644864: |   48 7d 16 49  51 ec f2 3b  85 dd 92 09  00 00 00 00
Sep 13 20:56:51.644866: | ikev2_derive_child_keys: delref ikey-key@0x55b124e73350
Sep 13 20:56:51.644868: |     key-offset: 44, key-size: 44
Sep 13 20:56:51.644870: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.644871: |     target: EXTRACT_KEY_FROM_KEY
Sep 13 20:56:51.644873: |     key_size: 44-bytes
Sep 13 20:56:51.644875: |     base: base-key@0x55b124e795b0 (100-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644876: |     operation: FLAGS_ONLY
Sep 13 20:56:51.644878: |     params: 8-bytes@0x7ffee51a2fd8
Sep 13 20:56:51.644883: |     result: newref result-key@0x55b124e73350 (44-bytes, EXTRACT_KEY_FROM_KEY)(in ikev2_derive_child_keys() at ikev2_crypto.c:133)
Sep 13 20:56:51.644885: | responder to initiator keys: extracting all 44 bytes of key@0x55b124e73350
Sep 13 20:56:51.644887: | responder to initiator keys:: symkey-key@0x55b124e73350 (44-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644889: |     : ephemeral-key@0x55b124e38590 (16-bytes, AES_KEY_GEN)
Sep 13 20:56:51.644894: | responder to initiator keys:: newref slot-key@0x55b124e3d030 (44-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.644896: | sizeof bytes 48
Sep 13 20:56:51.644905: | wrapper: siBuffer: 61 33 fc 65  db bd 22 a6  63 50 56 28  a9 b1 03 d4  2d 97 aa ae  be 29 ca 3f  99 77 88 f2  5d 0c b9 75  b9 cb 74 f1  3e 96 13 94  78 05 85 c5  24 14 f5 62
Sep 13 20:56:51.644908: | responder to initiator keys:: delref slot-key-key@0x55b124e3d030
Sep 13 20:56:51.644911: | responder to initiator keys: extracted len 48 bytes at 0x55b124e75348
Sep 13 20:56:51.644913: | unwrapped:
Sep 13 20:56:51.644915: |   e9 24 57 de  44 b9 d0 78  74 bc bf c9  1a e1 3b 89
Sep 13 20:56:51.644916: |   a7 b6 37 4f  49 31 1a 09  b4 10 6d 87  1c f5 44 87
Sep 13 20:56:51.644918: |   55 9c d3 d5  14 fb 72 a2  da 0b 63 18  00 00 00 00
Sep 13 20:56:51.644921: | ikev2_derive_child_keys: delref rkey-key@0x55b124e73350
Sep 13 20:56:51.644924: | ikev2_derive_child_keys: delref keymat-key@0x55b124e795b0
Sep 13 20:56:51.644927: | uniqueIDs disabled, not contemplating releasing older self
Sep 13 20:56:51.644931: |     #1 spent 1.82 milliseconds
Sep 13 20:56:51.644933: | install_ipsec_sa() for #2: inbound and outbound
Sep 13 20:56:51.644935: | could_route called for ikev2-cert (kind=CK_INSTANCE)
Sep 13 20:56:51.644937: | FOR_EACH_CONNECTION_... in route_owner
Sep 13 20:56:51.644940: |  conn ikev2-cert mark 0/00000000, 0/00000000 vs
Sep 13 20:56:51.644942: |  conn ikev2-cert mark 0/00000000, 0/00000000
Sep 13 20:56:51.644944: |  conn ikev2-cert mark 0/00000000, 0/00000000 vs
Sep 13 20:56:51.644946: |  conn ikev2-cert mark 0/00000000, 0/00000000
Sep 13 20:56:51.644950: | route owner of "ikev2-cert"[1] 192.168.0.1 unrouted: NULL; eroute owner: NULL
Sep 13 20:56:51.644952: | looking for alg with encrypt: 3DES_CBC keylen: 192 integ: HMAC_SHA1_96
Sep 13 20:56:51.644955: | encrypt 3DES_CBC keylen=192 transid=3, key_size=24, encryptalg=3
Sep 13 20:56:51.644957: | st->st_esp.keymat_len=44 is encrypt_keymat_size=24 + integ_keymat_size=20
Sep 13 20:56:51.644960: | setting IPsec SA replay-window to 32
Sep 13 20:56:51.644962: | NIC esp-hw-offload not for connection 'ikev2-cert' not available on interface ens33
Sep 13 20:56:51.644964: | netlink: enabling tunnel mode
Sep 13 20:56:51.644966: | XFRM: adding IPsec SA with reqid 16393
Sep 13 20:56:51.644968: | netlink: setting IPsec SA replay-window to 32 using old-style req
Sep 13 20:56:51.644971: | netlink: esp-hw-offload not set for IPsec SA
Sep 13 20:56:51.645050: | netlink response for Add SA esp.ad2d1db@192.168.0.1 included non-error error
Sep 13 20:56:51.645056: | set up outgoing SA, ref=0/0
Sep 13 20:56:51.645058: | looking for alg with encrypt: 3DES_CBC keylen: 192 integ: HMAC_SHA1_96
Sep 13 20:56:51.645061: | encrypt 3DES_CBC keylen=192 transid=3, key_size=24, encryptalg=3
Sep 13 20:56:51.645063: | st->st_esp.keymat_len=44 is encrypt_keymat_size=24 + integ_keymat_size=20
Sep 13 20:56:51.645065: | setting IPsec SA replay-window to 32
Sep 13 20:56:51.645067: | NIC esp-hw-offload not for connection 'ikev2-cert' not available on interface ens33
Sep 13 20:56:51.645069: | netlink: enabling tunnel mode
Sep 13 20:56:51.645071: | XFRM: adding IPsec SA with reqid 16393
Sep 13 20:56:51.645073: | netlink: setting IPsec SA replay-window to 32 using old-style req
Sep 13 20:56:51.645075: | netlink: esp-hw-offload not set for IPsec SA
Sep 13 20:56:51.645102: | netlink response for Add SA esp.7df75183@192.168.0.136 included non-error error
Sep 13 20:56:51.645106: | priority calculation of connection "ikev2-cert" is 0x1fbfbf
Sep 13 20:56:51.645111: | add inbound eroute 192.168.0.1/32:0 --0-> 192.168.0.136/32:0 => tun.10000@192.168.0.136 using reqid 16393 (raw_eroute)
Sep 13 20:56:51.645113: | IPsec Sa SPD priority set to 2080703
Sep 13 20:56:51.645122: | raw_eroute result=success
Sep 13 20:56:51.645125: | set up incoming SA, ref=0/0
Sep 13 20:56:51.645127: | sr for #2: unrouted
Sep 13 20:56:51.645129: | route_and_eroute() for proto 0, and source port 0 dest port 0
Sep 13 20:56:51.645131: | FOR_EACH_CONNECTION_... in route_owner
Sep 13 20:56:51.645133: |  conn ikev2-cert mark 0/00000000, 0/00000000 vs
Sep 13 20:56:51.645135: |  conn ikev2-cert mark 0/00000000, 0/00000000
Sep 13 20:56:51.645137: |  conn ikev2-cert mark 0/00000000, 0/00000000 vs
Sep 13 20:56:51.645138: |  conn ikev2-cert mark 0/00000000, 0/00000000
Sep 13 20:56:51.645142: | route owner of "ikev2-cert"[1] 192.168.0.1 unrouted: NULL; eroute owner: NULL
Sep 13 20:56:51.645144: | route_and_eroute with c: ikev2-cert (next: none) ero:null esr:{(nil)} ro:null rosr:{(nil)} and state: #2
Sep 13 20:56:51.645147: | priority calculation of connection "ikev2-cert" is 0x1fbfbf
Sep 13 20:56:51.645151: | eroute_connection add eroute 192.168.0.136/32:0 --0-> 192.168.0.1/32:0 => tun.0@192.168.0.1 using reqid 16393 (raw_eroute)
Sep 13 20:56:51.645156: | IPsec Sa SPD priority set to 2080703
Sep 13 20:56:51.645161: | raw_eroute result=success
Sep 13 20:56:51.645163: | running updown command "ipsec _updown" for verb up 
Sep 13 20:56:51.645165: | command executing up-host
Sep 13 20:56:51.645182: | executing up-host: PLUTO_VERB='up-host' PLUTO_VERSION='2.0' PLUTO_CONNECTION='ikev2-cert' PLUTO_VIRT_INTERFACE='ens33' PLUTO_INTERFACE='ens33' PLUTO_XFRMI_ROUTE='' PLUTO_NEXT_HOP='192.168.0.2' PLUTO_ME='192.168.0.136' PLUTO_MY_ID='@192.168.0.136' PLUTO_MY_CLIENT='192.168.0.136/32' PLUTO_MY_CLIENT_NET='192.168.0.136' PLUTO_MY_CLIENT_MASK='255.255.255.255' PLUTO_MY_PORT='0' PLUTO_MY_PROTOCOL='0' PLUTO_SA_REQID='16392' PLUTO_SA_TYPE='ESP' PLUTO_PEER='192.168.0.1' PLUTO_PEER_ID='@user1.org' PLUTO_PEER_CLIENT='192.168.0.1/32' PLUTO_PEER_CLIENT_NET='192.168.0.1' PLUTO_PEER_CLIENT_MASK='255.255.255.255' PLUTO_PEER_PORT='0' PLUTO_PEER_PROTOCOL='0' PLUTO_PEER_CA='' PLUTO_STACK='netkey' PLUTO_ADDTIME='0' PLUTO_CONN_POLICY='RSASIG+ECDSA+ENCRYPT+TUNNEL+DONT_REKEY+IKEV2_ALLOW+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG_ALLOW+ESN_NO+RSASIG_v1_5' PLUTO_CONN_KIND='CK_INSTANCE' PLUTO_CONN_ADDRFAMILY='ipv4' XAUTH_FAILED=0 PLUTO_IS_PEER_CISCO='0' PLUTO_PEER_DNS_INFO='' PLUTO_PEER_DOMAIN_INFO='' PLUTO_PEER_BANNER='' PLUTO_CF...
Sep 13 20:56:51.645185: | popen cmd is 1158 chars long
Sep 13 20:56:51.645187: | cmd(   0):PLUTO_VERB='up-host' PLUTO_VERSION='2.0' PLUTO_CONNECTION='ikev2-cert' PLUTO_VIR:
Sep 13 20:56:51.645189: | cmd(  80):T_INTERFACE='ens33' PLUTO_INTERFACE='ens33' PLUTO_XFRMI_ROUTE='' PLUTO_NEXT_HOP=:
Sep 13 20:56:51.645191: | cmd( 160):'192.168.0.2' PLUTO_ME='192.168.0.136' PLUTO_MY_ID='@192.168.0.136' PLUTO_MY_CLI:
Sep 13 20:56:51.645193: | cmd( 240):ENT='192.168.0.136/32' PLUTO_MY_CLIENT_NET='192.168.0.136' PLUTO_MY_CLIENT_MASK=:
Sep 13 20:56:51.645195: | cmd( 320):'255.255.255.255' PLUTO_MY_PORT='0' PLUTO_MY_PROTOCOL='0' PLUTO_SA_REQID='16392':
Sep 13 20:56:51.645196: | cmd( 400): PLUTO_SA_TYPE='ESP' PLUTO_PEER='192.168.0.1' PLUTO_PEER_ID='@user1.org' PLUTO_P:
Sep 13 20:56:51.645198: | cmd( 480):EER_CLIENT='192.168.0.1/32' PLUTO_PEER_CLIENT_NET='192.168.0.1' PLUTO_PEER_CLIEN:
Sep 13 20:56:51.645200: | cmd( 560):T_MASK='255.255.255.255' PLUTO_PEER_PORT='0' PLUTO_PEER_PROTOCOL='0' PLUTO_PEER_:
Sep 13 20:56:51.645202: | cmd( 640):CA='' PLUTO_STACK='netkey' PLUTO_ADDTIME='0' PLUTO_CONN_POLICY='RSASIG+ECDSA+ENC:
Sep 13 20:56:51.645203: | cmd( 720):RYPT+TUNNEL+DONT_REKEY+IKEV2_ALLOW+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG_AL:
Sep 13 20:56:51.645205: | cmd( 800):LOW+ESN_NO+RSASIG_v1_5' PLUTO_CONN_KIND='CK_INSTANCE' PLUTO_CONN_ADDRFAMILY='ipv:
Sep 13 20:56:51.645207: | cmd( 880):4' XAUTH_FAILED=0 PLUTO_IS_PEER_CISCO='0' PLUTO_PEER_DNS_INFO='' PLUTO_PEER_DOMA:
Sep 13 20:56:51.645209: | cmd( 960):IN_INFO='' PLUTO_PEER_BANNER='' PLUTO_CFG_SERVER='0' PLUTO_CFG_CLIENT='0' PLUTO_:
Sep 13 20:56:51.645210: | cmd(1040):NM_CONFIGURED='0' VTI_IFACE='' VTI_ROUTING='no' VTI_SHARED='no' SPI_IN=0xad2d1db:
Sep 13 20:56:51.645212: | cmd(1120): SPI_OUT=0x7df75183 ipsec _updown 2>&1:
Sep 13 20:56:51.648880: | route_and_eroute: firewall_notified: true
Sep 13 20:56:51.648893: | running updown command "ipsec _updown" for verb prepare 
Sep 13 20:56:51.648897: | command executing prepare-host
Sep 13 20:56:51.648916: | executing prepare-host: PLUTO_VERB='prepare-host' PLUTO_VERSION='2.0' PLUTO_CONNECTION='ikev2-cert' PLUTO_VIRT_INTERFACE='ens33' PLUTO_INTERFACE='ens33' PLUTO_XFRMI_ROUTE='' PLUTO_NEXT_HOP='192.168.0.2' PLUTO_ME='192.168.0.136' PLUTO_MY_ID='@192.168.0.136' PLUTO_MY_CLIENT='192.168.0.136/32' PLUTO_MY_CLIENT_NET='192.168.0.136' PLUTO_MY_CLIENT_MASK='255.255.255.255' PLUTO_MY_PORT='0' PLUTO_MY_PROTOCOL='0' PLUTO_SA_REQID='16392' PLUTO_SA_TYPE='ESP' PLUTO_PEER='192.168.0.1' PLUTO_PEER_ID='@user1.org' PLUTO_PEER_CLIENT='192.168.0.1/32' PLUTO_PEER_CLIENT_NET='192.168.0.1' PLUTO_PEER_CLIENT_MASK='255.255.255.255' PLUTO_PEER_PORT='0' PLUTO_PEER_PROTOCOL='0' PLUTO_PEER_CA='' PLUTO_STACK='netkey' PLUTO_ADDTIME='0' PLUTO_CONN_POLICY='RSASIG+ECDSA+ENCRYPT+TUNNEL+DONT_REKEY+IKEV2_ALLOW+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG_ALLOW+ESN_NO+RSASIG_v1_5' PLUTO_CONN_KIND='CK_INSTANCE' PLUTO_CONN_ADDRFAMILY='ipv4' XAUTH_FAILED=0 PLUTO_IS_PEER_CISCO='0' PLUTO_PEER_DNS_INFO='' PLUTO_PEER_DOMAIN_INFO='' PLUTO_PEER_BANNER='...
Sep 13 20:56:51.648924: | popen cmd is 1163 chars long
Sep 13 20:56:51.648927: | cmd(   0):PLUTO_VERB='prepare-host' PLUTO_VERSION='2.0' PLUTO_CONNECTION='ikev2-cert' PLUT:
Sep 13 20:56:51.648929: | cmd(  80):O_VIRT_INTERFACE='ens33' PLUTO_INTERFACE='ens33' PLUTO_XFRMI_ROUTE='' PLUTO_NEXT:
Sep 13 20:56:51.648931: | cmd( 160):_HOP='192.168.0.2' PLUTO_ME='192.168.0.136' PLUTO_MY_ID='@192.168.0.136' PLUTO_M:
Sep 13 20:56:51.648932: | cmd( 240):Y_CLIENT='192.168.0.136/32' PLUTO_MY_CLIENT_NET='192.168.0.136' PLUTO_MY_CLIENT_:
Sep 13 20:56:51.648934: | cmd( 320):MASK='255.255.255.255' PLUTO_MY_PORT='0' PLUTO_MY_PROTOCOL='0' PLUTO_SA_REQID='1:
Sep 13 20:56:51.648936: | cmd( 400):6392' PLUTO_SA_TYPE='ESP' PLUTO_PEER='192.168.0.1' PLUTO_PEER_ID='@user1.org' PL:
Sep 13 20:56:51.648938: | cmd( 480):UTO_PEER_CLIENT='192.168.0.1/32' PLUTO_PEER_CLIENT_NET='192.168.0.1' PLUTO_PEER_:
Sep 13 20:56:51.648939: | cmd( 560):CLIENT_MASK='255.255.255.255' PLUTO_PEER_PORT='0' PLUTO_PEER_PROTOCOL='0' PLUTO_:
Sep 13 20:56:51.648941: | cmd( 640):PEER_CA='' PLUTO_STACK='netkey' PLUTO_ADDTIME='0' PLUTO_CONN_POLICY='RSASIG+ECDS:
Sep 13 20:56:51.648943: | cmd( 720):A+ENCRYPT+TUNNEL+DONT_REKEY+IKEV2_ALLOW+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FR:
Sep 13 20:56:51.648945: | cmd( 800):AG_ALLOW+ESN_NO+RSASIG_v1_5' PLUTO_CONN_KIND='CK_INSTANCE' PLUTO_CONN_ADDRFAMILY:
Sep 13 20:56:51.648947: | cmd( 880):='ipv4' XAUTH_FAILED=0 PLUTO_IS_PEER_CISCO='0' PLUTO_PEER_DNS_INFO='' PLUTO_PEER:
Sep 13 20:56:51.648948: | cmd( 960):_DOMAIN_INFO='' PLUTO_PEER_BANNER='' PLUTO_CFG_SERVER='0' PLUTO_CFG_CLIENT='0' P:
Sep 13 20:56:51.648950: | cmd(1040):LUTO_NM_CONFIGURED='0' VTI_IFACE='' VTI_ROUTING='no' VTI_SHARED='no' SPI_IN=0xad:
Sep 13 20:56:51.648952: | cmd(1120):2d1db SPI_OUT=0x7df75183 ipsec _updown 2>&1:
Sep 13 20:56:51.651754: | running updown command "ipsec _updown" for verb route 
Sep 13 20:56:51.651766: | command executing route-host
Sep 13 20:56:51.651785: | executing route-host: PLUTO_VERB='route-host' PLUTO_VERSION='2.0' PLUTO_CONNECTION='ikev2-cert' PLUTO_VIRT_INTERFACE='ens33' PLUTO_INTERFACE='ens33' PLUTO_XFRMI_ROUTE='' PLUTO_NEXT_HOP='192.168.0.2' PLUTO_ME='192.168.0.136' PLUTO_MY_ID='@192.168.0.136' PLUTO_MY_CLIENT='192.168.0.136/32' PLUTO_MY_CLIENT_NET='192.168.0.136' PLUTO_MY_CLIENT_MASK='255.255.255.255' PLUTO_MY_PORT='0' PLUTO_MY_PROTOCOL='0' PLUTO_SA_REQID='16392' PLUTO_SA_TYPE='ESP' PLUTO_PEER='192.168.0.1' PLUTO_PEER_ID='@user1.org' PLUTO_PEER_CLIENT='192.168.0.1/32' PLUTO_PEER_CLIENT_NET='192.168.0.1' PLUTO_PEER_CLIENT_MASK='255.255.255.255' PLUTO_PEER_PORT='0' PLUTO_PEER_PROTOCOL='0' PLUTO_PEER_CA='' PLUTO_STACK='netkey' PLUTO_ADDTIME='0' PLUTO_CONN_POLICY='RSASIG+ECDSA+ENCRYPT+TUNNEL+DONT_REKEY+IKEV2_ALLOW+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG_ALLOW+ESN_NO+RSASIG_v1_5' PLUTO_CONN_KIND='CK_INSTANCE' PLUTO_CONN_ADDRFAMILY='ipv4' XAUTH_FAILED=0 PLUTO_IS_PEER_CISCO='0' PLUTO_PEER_DNS_INFO='' PLUTO_PEER_DOMAIN_INFO='' PLUTO_PEER_BANNER='' PL...
Sep 13 20:56:51.651789: | popen cmd is 1161 chars long
Sep 13 20:56:51.651792: | cmd(   0):PLUTO_VERB='route-host' PLUTO_VERSION='2.0' PLUTO_CONNECTION='ikev2-cert' PLUTO_:
Sep 13 20:56:51.651793: | cmd(  80):VIRT_INTERFACE='ens33' PLUTO_INTERFACE='ens33' PLUTO_XFRMI_ROUTE='' PLUTO_NEXT_H:
Sep 13 20:56:51.651795: | cmd( 160):OP='192.168.0.2' PLUTO_ME='192.168.0.136' PLUTO_MY_ID='@192.168.0.136' PLUTO_MY_:
Sep 13 20:56:51.651797: | cmd( 240):CLIENT='192.168.0.136/32' PLUTO_MY_CLIENT_NET='192.168.0.136' PLUTO_MY_CLIENT_MA:
Sep 13 20:56:51.651799: | cmd( 320):SK='255.255.255.255' PLUTO_MY_PORT='0' PLUTO_MY_PROTOCOL='0' PLUTO_SA_REQID='163:
Sep 13 20:56:51.651801: | cmd( 400):92' PLUTO_SA_TYPE='ESP' PLUTO_PEER='192.168.0.1' PLUTO_PEER_ID='@user1.org' PLUT:
Sep 13 20:56:51.651802: | cmd( 480):O_PEER_CLIENT='192.168.0.1/32' PLUTO_PEER_CLIENT_NET='192.168.0.1' PLUTO_PEER_CL:
Sep 13 20:56:51.651808: | cmd( 560):IENT_MASK='255.255.255.255' PLUTO_PEER_PORT='0' PLUTO_PEER_PROTOCOL='0' PLUTO_PE:
Sep 13 20:56:51.651810: | cmd( 640):ER_CA='' PLUTO_STACK='netkey' PLUTO_ADDTIME='0' PLUTO_CONN_POLICY='RSASIG+ECDSA+:
Sep 13 20:56:51.651812: | cmd( 720):ENCRYPT+TUNNEL+DONT_REKEY+IKEV2_ALLOW+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG:
Sep 13 20:56:51.651813: | cmd( 800):_ALLOW+ESN_NO+RSASIG_v1_5' PLUTO_CONN_KIND='CK_INSTANCE' PLUTO_CONN_ADDRFAMILY=':
Sep 13 20:56:51.651815: | cmd( 880):ipv4' XAUTH_FAILED=0 PLUTO_IS_PEER_CISCO='0' PLUTO_PEER_DNS_INFO='' PLUTO_PEER_D:
Sep 13 20:56:51.651817: | cmd( 960):OMAIN_INFO='' PLUTO_PEER_BANNER='' PLUTO_CFG_SERVER='0' PLUTO_CFG_CLIENT='0' PLU:
Sep 13 20:56:51.651819: | cmd(1040):TO_NM_CONFIGURED='0' VTI_IFACE='' VTI_ROUTING='no' VTI_SHARED='no' SPI_IN=0xad2d:
Sep 13 20:56:51.651820: | cmd(1120):1db SPI_OUT=0x7df75183 ipsec _updown 2>&1:
Sep 13 20:56:51.660131: | route_and_eroute: instance "ikev2-cert"[1] 192.168.0.1, setting eroute_owner {spd=0x55b124e6c6e0,sr=0x55b124e6c6e0} to #2 (was #0) (newest_ipsec_sa=#0)
Sep 13 20:56:51.660155: |     #1 spent 1.39 milliseconds in install_ipsec_sa()
Sep 13 20:56:51.660159: | ISAKMP_v2_IKE_AUTH: instance ikev2-cert[1], setting IKEv2 newest_ipsec_sa to #2 (was #0) (spd.eroute=#2) cloned from #1
Sep 13 20:56:51.660162: | adding 4 bytes of padding (including 1 byte padding-length)
Sep 13 20:56:51.660165: | emitting 1 0x00 repeated bytes of padding and length into IKEv2 Encryption Payload
Sep 13 20:56:51.660169: | emitting 1 0x01 repeated bytes of padding and length into IKEv2 Encryption Payload
Sep 13 20:56:51.660171: | emitting 1 0x02 repeated bytes of padding and length into IKEv2 Encryption Payload
Sep 13 20:56:51.660173: | emitting 1 0x03 repeated bytes of padding and length into IKEv2 Encryption Payload
Sep 13 20:56:51.660175: | emitting 12 zero bytes of length of truncated HMAC/KEY into IKEv2 Encryption Payload
Sep 13 20:56:51.660177: | emitting length of IKEv2 Encryption Payload: 800
Sep 13 20:56:51.660180: | emitting length of ISAKMP Message: 828
Sep 13 20:56:51.660183: | construct_enc_iv: encryption IV/starting-variable: salt-size=0 wire-IV-size=8 block-size 8
Sep 13 20:56:51.660185: | construct_enc_iv: encryption IV/starting-variable: computed counter-size=0
Sep 13 20:56:51.660187: | encryption IV/starting-variable
Sep 13 20:56:51.660189: |   13 45 cc 0f  9c 9a c1 2f
Sep 13 20:56:51.660190: | data before encryption:
Sep 13 20:56:51.660192: |   25 00 00 15  02 00 00 00  31 39 32 2e  31 36 38 2e
Sep 13 20:56:51.660194: |   30 2e 31 33  36 27 00 02  0f 04 30 82  02 06 30 82
Sep 13 20:56:51.660195: |   01 6f a0 03  02 01 02 02  05 00 b5 e3  7f 8e 30 0d
Sep 13 20:56:51.660197: |   06 09 2a 86  48 86 f7 0d  01 01 0b 05  00 30 2b 31
Sep 13 20:56:51.660198: |   15 30 13 06  03 55 04 03  13 0c 49 4b  45 76 32 20
Sep 13 20:56:51.660200: |   56 50 4e 20  43 41 31 12  30 10 06 03  55 04 0a 13
Sep 13 20:56:51.660202: |   09 49 4b 45  76 32 20 56  50 4e 30 1e  17 0d 32 30
Sep 13 20:56:51.660203: |   30 39 31 32  31 31 32 30  31 38 5a 17  0d 33 30 30
Sep 13 20:56:51.660205: |   39 31 32 31  31 32 30 31  38 5a 30 2c  31 16 30 14
Sep 13 20:56:51.660207: |   06 03 55 04  03 13 0d 31  39 32 2e 31  36 38 2e 30
Sep 13 20:56:51.660208: |   2e 31 33 36  31 12 30 10  06 03 55 04  0a 13 09 49
Sep 13 20:56:51.660210: |   4b 45 76 32  20 56 50 4e  30 81 9f 30  0d 06 09 2a
Sep 13 20:56:51.660212: |   86 48 86 f7  0d 01 01 01  05 00 03 81  8d 00 30 81
Sep 13 20:56:51.660213: |   89 02 81 81  00 bb 39 97  53 fb e7 c6  f9 88 44 e6
Sep 13 20:56:51.660215: |   6f d1 91 39  56 d7 67 3b  c9 a9 63 ed  fa c1 36 79
Sep 13 20:56:51.660216: |   30 e8 fc 22  da d3 28 55  32 5d 1b a6  62 f4 53 9f
Sep 13 20:56:51.660218: |   04 0e e4 86  d4 ea bd 47  28 77 b9 6f  eb a6 38 8d
Sep 13 20:56:51.660220: |   04 3b 20 77  e8 ff 30 0f  b9 c8 e7 29  e9 ed 6b 47
Sep 13 20:56:51.660221: |   8c 0f f3 f6  d8 8c 52 ee  86 cb f1 fc  a1 fc 8b 41
Sep 13 20:56:51.660223: |   6d ca 30 81  c3 ca bc b1  86 6d 67 35  a6 e8 20 50
Sep 13 20:56:51.660225: |   0b b6 cd 04  c3 36 9b 67  e2 bb 19 27  18 63 27 84
Sep 13 20:56:51.660231: |   c5 20 4d a0  0d 02 03 01  00 01 a3 35  30 33 30 0f
Sep 13 20:56:51.660233: |   06 03 55 1d  11 04 08 30  06 87 04 c0  a8 00 88 30
Sep 13 20:56:51.660235: |   13 06 03 55  1d 25 04 0c  30 0a 06 08  2b 06 01 05
Sep 13 20:56:51.660236: |   05 07 03 01  30 0b 06 03  55 1d 0f 04  04 03 02 05
Sep 13 20:56:51.660238: |   a0 30 0d 06  09 2a 86 48  86 f7 0d 01  01 0b 05 00
Sep 13 20:56:51.660240: |   03 81 81 00  b2 75 0d 16  a9 8f 3e 14  89 b8 8f 4d
Sep 13 20:56:51.660241: |   da 9f 5f 2e  9d 40 b1 70  31 7f b1 42  0b c1 d9 c7
Sep 13 20:56:51.660243: |   e1 8a 0d 49  ac 72 9c 6c  ac 17 94 a7  7a 5f 98 22
Sep 13 20:56:51.660245: |   7a 03 12 7a  70 8e 86 69  60 1e 20 e8  88 d8 6e df
Sep 13 20:56:51.660246: |   4f 02 e7 20  ca 07 e2 57  54 f2 cf 3e  b5 c6 cf cc
Sep 13 20:56:51.660248: |   18 f2 71 92  1b b8 fd f8  27 e9 f9 5e  0d 5a cf e1
Sep 13 20:56:51.660249: |   4d 5d ee 7e  3d ac 8b 92  ab 6e 3e c7  df 80 25 40
Sep 13 20:56:51.660251: |   a3 3c 89 a5  95 58 62 9b  bb ce ca 0a  ad ac cf 07
Sep 13 20:56:51.660253: |   b6 86 59 5e  21 00 00 88  01 00 00 00  a2 eb 8f e8
Sep 13 20:56:51.660254: |   6e 1f 68 b8  2e 5b 60 f8  2a 67 1d a9  af 6a 94 92
Sep 13 20:56:51.660256: |   d9 71 15 b9  b7 58 2a 06  d1 e0 f4 08  0c 1c 0c 17
Sep 13 20:56:51.660258: |   50 63 12 27  a0 05 d1 45  40 9e 89 41  1c d3 3a c5
Sep 13 20:56:51.660259: |   bc 06 a6 b1  e1 9f eb de  9a 14 b5 2d  81 32 ef fe
Sep 13 20:56:51.660261: |   67 d6 d3 c4  8c a7 ee eb  e8 cd 56 26  70 71 d5 e4
Sep 13 20:56:51.660263: |   34 88 fa 82  3a 4b 00 b4  b5 ba ab 68  db 88 49 bf
Sep 13 20:56:51.660264: |   97 c1 3c 50  e3 69 4d 50  98 a4 99 33  32 02 e9 80
Sep 13 20:56:51.660266: |   1d b1 9c cf  f7 03 06 c2  72 70 61 c1  2c 00 00 28
Sep 13 20:56:51.660267: |   00 00 00 24  01 03 04 03  7d f7 51 83  03 00 00 08
Sep 13 20:56:51.660269: |   01 00 00 03  03 00 00 08  03 00 00 02  00 00 00 08
Sep 13 20:56:51.660271: |   05 00 00 00  2d 00 00 18  01 00 00 00  07 00 00 10
Sep 13 20:56:51.660272: |   00 00 ff ff  c0 a8 00 01  c0 a8 00 01  00 00 00 18
Sep 13 20:56:51.660274: |   01 00 00 00  07 00 00 10  00 00 ff ff  c0 a8 00 88
Sep 13 20:56:51.660276: |   c0 a8 00 88  00 01 02 03
Sep 13 20:56:51.660278: | NSS ike_alg_nss_cbc: 3des_cbc - enter
Sep 13 20:56:51.660329: | NSS ike_alg_nss_cbc: 3des_cbc - exit
Sep 13 20:56:51.660331: | data after encryption:
Sep 13 20:56:51.660333: |   52 f8 fb a5  94 69 d9 22  90 d4 0a df  9b e7 6b 4a
Sep 13 20:56:51.660335: |   cd 8a 83 8d  52 88 ca 64  b8 de a5 43  a0 fc 19 38
Sep 13 20:56:51.660337: |   5a 36 ed 65  46 c0 b9 35  8d 7d a8 d7  cf f3 e3 62
Sep 13 20:56:51.660338: |   22 f4 ab 10  71 bf 09 8c  11 b3 a5 2d  af 2a bf f7
Sep 13 20:56:51.660340: |   d7 59 32 8b  8f 16 b2 7e  27 0a e8 f1  04 ad d8 9e
Sep 13 20:56:51.660341: |   e9 98 8f 9e  9f 06 bf 94  d0 a0 41 0a  51 5b e5 ed
Sep 13 20:56:51.660343: |   e0 dd 81 0a  1d 51 09 fc  1f 9a 4f 38  51 6f b9 bf
Sep 13 20:56:51.660345: |   b4 d8 96 88  ea 78 4f 9e  e8 0d 35 68  e2 e3 45 31
Sep 13 20:56:51.660346: |   14 19 34 ba  b8 a8 2a 56  d9 ed 6b 03  26 7e d8 ad
Sep 13 20:56:51.660348: |   84 d6 a8 0c  1b 3c f5 e5  33 b1 02 57  fa d1 57 a2
Sep 13 20:56:51.660350: |   4a 1a f6 69  3b 90 a8 7a  59 49 f8 5a  bd 07 d4 7c
Sep 13 20:56:51.660351: |   06 06 50 62  cd 40 ae 53  47 90 c5 21  e4 d1 44 64
Sep 13 20:56:51.660353: |   3f c7 d7 b6  e8 f1 cf 60  f4 a5 87 ba  18 cd a0 ac
Sep 13 20:56:51.660354: |   54 80 88 cd  ba e7 41 7a  b5 99 17 81  a6 3c f8 d1
Sep 13 20:56:51.660356: |   38 cc 60 12  a6 d1 6e f4  7e c0 dc 25  85 6b c4 1a
Sep 13 20:56:51.660358: |   e0 f9 fd a4  40 f0 61 33  c4 e4 f7 01  90 49 69 1a
Sep 13 20:56:51.660359: |   7d af c4 f8  e5 1e 4d b1  50 3e 6c b3  c2 ab 14 01
Sep 13 20:56:51.660361: |   a7 7d 14 84  76 09 22 0a  39 72 e3 dc  80 96 60 00
Sep 13 20:56:51.660363: |   03 88 ed 15  28 c1 3b 71  f3 c3 67 0c  83 62 dd 4f
Sep 13 20:56:51.660364: |   31 c7 34 cd  b4 9e 1a f9  38 4c e5 b2  2b e0 98 e7
Sep 13 20:56:51.660366: |   f4 f4 02 96  c5 da f7 0b  9a ec 2a 37  86 69 93 e3
Sep 13 20:56:51.660367: |   16 33 72 25  97 1f ae c0  a4 68 d5 ef  e7 8e 74 dc
Sep 13 20:56:51.660371: |   8f 08 f8 eb  15 77 1e 17  f2 db 8f 86  22 83 85 0d
Sep 13 20:56:51.660373: |   4f 95 56 cc  d7 2f ba ee  53 fd a4 fc  4b 53 02 27
Sep 13 20:56:51.660374: |   13 e0 fe e5  f9 31 d3 68  69 4e 88 4c  ea bb 80 fe
Sep 13 20:56:51.660376: |   2f 29 50 49  4a 62 6c 16  99 df 6e 10  29 3d 8b ac
Sep 13 20:56:51.660378: |   37 95 55 0d  0d 1b 26 7e  76 0c 90 b8  fb 5a 40 9f
Sep 13 20:56:51.660379: |   05 b8 31 1d  ee eb 1c 94  1a 9f 06 3a  9d 34 99 50
Sep 13 20:56:51.660381: |   ea ea 0c b5  d5 50 ac a5  e2 85 dd 5d  12 58 92 ac
Sep 13 20:56:51.660383: |   7a e7 e0 d8  cc c6 8b 7b  a8 e8 d8 34  46 05 6a b2
Sep 13 20:56:51.660384: |   5d b3 ed 82  9c f2 f7 ae  57 52 7d 91  fa 3f 82 61
Sep 13 20:56:51.660386: |   b3 e6 26 22  35 1b 09 b0  75 f2 c1 26  9e 9e 61 7c
Sep 13 20:56:51.660387: |   22 c5 e1 7d  ff 98 57 6e  44 3b ba ca  e2 11 9c 76
Sep 13 20:56:51.660389: |   39 3c 9e 2f  72 ae 14 27  af 23 d6 4f  f5 29 d6 00
Sep 13 20:56:51.660391: |   78 fc 66 11  af 17 d5 0e  2a d9 00 e6  fe a7 df 68
Sep 13 20:56:51.660392: |   ff 17 0a 70  a9 00 54 b1  a8 5c 75 e5  52 06 73 f5
Sep 13 20:56:51.660394: |   cc 5b e7 fd  bb 0f b3 ec  cd b9 d4 fe  1f ff 34 6a
Sep 13 20:56:51.660396: |   c6 95 6f a4  cf 9f cc 9e  64 42 e2 ca  7b 4d 23 a6
Sep 13 20:56:51.660397: |   85 d4 c1 32  a7 7b 6f ed  b1 9c d4 33  ad 16 32 cb
Sep 13 20:56:51.660399: |   ba 55 b6 9a  f0 99 d9 40  19 32 31 2a  b3 d6 d6 e2
Sep 13 20:56:51.660400: |   f7 65 17 14  25 ab ba 14  a2 b5 9a 93  cf 1a a9 3a
Sep 13 20:56:51.660402: |   be 2b 06 cd  5e c1 39 13  c9 f0 34 93  54 43 c8 56
Sep 13 20:56:51.660404: |   00 b6 c7 95  89 c3 3d bb  17 05 f0 a2  e8 b5 8a e2
Sep 13 20:56:51.660405: |   39 80 af 75  16 4b f5 1c  ea dd 4b e3  92 da 81 0f
Sep 13 20:56:51.660407: |   42 e9 79 54  8b 43 bc a5  33 2b 87 08  4a 4b 97 38
Sep 13 20:56:51.660409: |   e4 a5 fe 61  32 a2 e1 6f  73 dd 01 1b  dd 0a d8 38
Sep 13 20:56:51.660410: |   57 77 11 eb  95 7f 40 74  f5 54 be 10  43 ed 3b 97
Sep 13 20:56:51.660412: |   ff 3e fa 1b  99 c3 cc ad  2c c6 cc e9  bd 75 b2 fa
Sep 13 20:56:51.660413: |   62 4b 1c 20  e6 c5 f9 b8
Sep 13 20:56:51.660416: | integ PRF sha init authkey-key@0x55b124e61c30 (size 20)
Sep 13 20:56:51.660419: | integ: authkey-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.660421: |     key-offset: 0, key-size: 20
Sep 13 20:56:51.660423: | EXTRACT_KEY_FROM_KEY:
Sep 13 20:56:51.660425: |     target: SHA_1_HMAC
Sep 13 20:56:51.660426: |     flags: SIGN
Sep 13 20:56:51.660428: |     key_size: 20-bytes
Sep 13 20:56:51.660430: |     base: base-key@0x55b124e61c30 (20-bytes, EXTRACT_KEY_FROM_KEY)
Sep 13 20:56:51.660432: |     operation: FLAGS_ONLY
Sep 13 20:56:51.660434: |     params: 8-bytes@0x7ffee51a2f28
Sep 13 20:56:51.660446: |     result: newref clone-key@0x55b124e795b0 (20-bytes, SHA_1_HMAC)(in init_symkey() at ike_alg_prf_mac_nss_ops.c:98)
Sep 13 20:56:51.660454: | integ prf: created sha context 0x55b124e7ceb0 from authkey-key@0x55b124e795b0
Sep 13 20:56:51.660456: | integ prf: begin sha with context 0x55b124e7ceb0 from authkey-key@0x55b124e795b0
Sep 13 20:56:51.660460: | integ: delref clone-key@0x55b124e795b0
Sep 13 20:56:51.660462: | integ PRF sha crypt-prf@0x55b124e79768
Sep 13 20:56:51.660464: | integ PRF sha update message-bytes@0x55b124082d80 (length 816)
Sep 13 20:56:51.660466: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.660468: |   2e 20 23 20  00 00 00 01  00 00 03 3c  24 00 03 20
Sep 13 20:56:51.660469: |   13 45 cc 0f  9c 9a c1 2f  52 f8 fb a5  94 69 d9 22
Sep 13 20:56:51.660471: |   90 d4 0a df  9b e7 6b 4a  cd 8a 83 8d  52 88 ca 64
Sep 13 20:56:51.660473: |   b8 de a5 43  a0 fc 19 38  5a 36 ed 65  46 c0 b9 35
Sep 13 20:56:51.660474: |   8d 7d a8 d7  cf f3 e3 62  22 f4 ab 10  71 bf 09 8c
Sep 13 20:56:51.660476: |   11 b3 a5 2d  af 2a bf f7  d7 59 32 8b  8f 16 b2 7e
Sep 13 20:56:51.660478: |   27 0a e8 f1  04 ad d8 9e  e9 98 8f 9e  9f 06 bf 94
Sep 13 20:56:51.660479: |   d0 a0 41 0a  51 5b e5 ed  e0 dd 81 0a  1d 51 09 fc
Sep 13 20:56:51.660481: |   1f 9a 4f 38  51 6f b9 bf  b4 d8 96 88  ea 78 4f 9e
Sep 13 20:56:51.660484: |   e8 0d 35 68  e2 e3 45 31  14 19 34 ba  b8 a8 2a 56
Sep 13 20:56:51.660486: |   d9 ed 6b 03  26 7e d8 ad  84 d6 a8 0c  1b 3c f5 e5
Sep 13 20:56:51.660488: |   33 b1 02 57  fa d1 57 a2  4a 1a f6 69  3b 90 a8 7a
Sep 13 20:56:51.660489: |   59 49 f8 5a  bd 07 d4 7c  06 06 50 62  cd 40 ae 53
Sep 13 20:56:51.660491: |   47 90 c5 21  e4 d1 44 64  3f c7 d7 b6  e8 f1 cf 60
Sep 13 20:56:51.660493: |   f4 a5 87 ba  18 cd a0 ac  54 80 88 cd  ba e7 41 7a
Sep 13 20:56:51.660494: |   b5 99 17 81  a6 3c f8 d1  38 cc 60 12  a6 d1 6e f4
Sep 13 20:56:51.660496: |   7e c0 dc 25  85 6b c4 1a  e0 f9 fd a4  40 f0 61 33
Sep 13 20:56:51.660498: |   c4 e4 f7 01  90 49 69 1a  7d af c4 f8  e5 1e 4d b1
Sep 13 20:56:51.660499: |   50 3e 6c b3  c2 ab 14 01  a7 7d 14 84  76 09 22 0a
Sep 13 20:56:51.660501: |   39 72 e3 dc  80 96 60 00  03 88 ed 15  28 c1 3b 71
Sep 13 20:56:51.660502: |   f3 c3 67 0c  83 62 dd 4f  31 c7 34 cd  b4 9e 1a f9
Sep 13 20:56:51.660504: |   38 4c e5 b2  2b e0 98 e7  f4 f4 02 96  c5 da f7 0b
Sep 13 20:56:51.660506: |   9a ec 2a 37  86 69 93 e3  16 33 72 25  97 1f ae c0
Sep 13 20:56:51.660507: |   a4 68 d5 ef  e7 8e 74 dc  8f 08 f8 eb  15 77 1e 17
Sep 13 20:56:51.660509: |   f2 db 8f 86  22 83 85 0d  4f 95 56 cc  d7 2f ba ee
Sep 13 20:56:51.660511: |   53 fd a4 fc  4b 53 02 27  13 e0 fe e5  f9 31 d3 68
Sep 13 20:56:51.660512: |   69 4e 88 4c  ea bb 80 fe  2f 29 50 49  4a 62 6c 16
Sep 13 20:56:51.660514: |   99 df 6e 10  29 3d 8b ac  37 95 55 0d  0d 1b 26 7e
Sep 13 20:56:51.660515: |   76 0c 90 b8  fb 5a 40 9f  05 b8 31 1d  ee eb 1c 94
Sep 13 20:56:51.660517: |   1a 9f 06 3a  9d 34 99 50  ea ea 0c b5  d5 50 ac a5
Sep 13 20:56:51.660519: |   e2 85 dd 5d  12 58 92 ac  7a e7 e0 d8  cc c6 8b 7b
Sep 13 20:56:51.660520: |   a8 e8 d8 34  46 05 6a b2  5d b3 ed 82  9c f2 f7 ae
Sep 13 20:56:51.660522: |   57 52 7d 91  fa 3f 82 61  b3 e6 26 22  35 1b 09 b0
Sep 13 20:56:51.660524: |   75 f2 c1 26  9e 9e 61 7c  22 c5 e1 7d  ff 98 57 6e
Sep 13 20:56:51.660525: |   44 3b ba ca  e2 11 9c 76  39 3c 9e 2f  72 ae 14 27
Sep 13 20:56:51.660527: |   af 23 d6 4f  f5 29 d6 00  78 fc 66 11  af 17 d5 0e
Sep 13 20:56:51.660528: |   2a d9 00 e6  fe a7 df 68  ff 17 0a 70  a9 00 54 b1
Sep 13 20:56:51.660530: |   a8 5c 75 e5  52 06 73 f5  cc 5b e7 fd  bb 0f b3 ec
Sep 13 20:56:51.660532: |   cd b9 d4 fe  1f ff 34 6a  c6 95 6f a4  cf 9f cc 9e
Sep 13 20:56:51.660533: |   64 42 e2 ca  7b 4d 23 a6  85 d4 c1 32  a7 7b 6f ed
Sep 13 20:56:51.660535: |   b1 9c d4 33  ad 16 32 cb  ba 55 b6 9a  f0 99 d9 40
Sep 13 20:56:51.660537: |   19 32 31 2a  b3 d6 d6 e2  f7 65 17 14  25 ab ba 14
Sep 13 20:56:51.660538: |   a2 b5 9a 93  cf 1a a9 3a  be 2b 06 cd  5e c1 39 13
Sep 13 20:56:51.660540: |   c9 f0 34 93  54 43 c8 56  00 b6 c7 95  89 c3 3d bb
Sep 13 20:56:51.660541: |   17 05 f0 a2  e8 b5 8a e2  39 80 af 75  16 4b f5 1c
Sep 13 20:56:51.660543: |   ea dd 4b e3  92 da 81 0f  42 e9 79 54  8b 43 bc a5
Sep 13 20:56:51.660545: |   33 2b 87 08  4a 4b 97 38  e4 a5 fe 61  32 a2 e1 6f
Sep 13 20:56:51.660546: |   73 dd 01 1b  dd 0a d8 38  57 77 11 eb  95 7f 40 74
Sep 13 20:56:51.660548: |   f5 54 be 10  43 ed 3b 97  ff 3e fa 1b  99 c3 cc ad
Sep 13 20:56:51.660550: |   2c c6 cc e9  bd 75 b2 fa  62 4b 1c 20  e6 c5 f9 b8
Sep 13 20:56:51.660566: | integ PRF sha final length 12
Sep 13 20:56:51.660572: |   0d 9d eb 80  ed 02 9a a3  79 8a 6f b0
Sep 13 20:56:51.660574: | data being hmac:
Sep 13 20:56:51.660576: |   dc 3a 94 c4  30 44 5b 90  cc c8 77 25  23 cb 7d 48
Sep 13 20:56:51.660578: |   2e 20 23 20  00 00 00 01  00 00 03 3c  24 00 03 20
Sep 13 20:56:51.660579: |   13 45 cc 0f  9c 9a c1 2f  52 f8 fb a5  94 69 d9 22
Sep 13 20:56:51.660581: |   90 d4 0a df  9b e7 6b 4a  cd 8a 83 8d  52 88 ca 64
Sep 13 20:56:51.660583: |   b8 de a5 43  a0 fc 19 38  5a 36 ed 65  46 c0 b9 35
Sep 13 20:56:51.660584: |   8d 7d a8 d7  cf f3 e3 62  22 f4 ab 10  71 bf 09 8c
Sep 13 20:56:51.660586: |   11 b3 a5 2d  af 2a bf f7  d7 59 32 8b  8f 16 b2 7e
Sep 13 20:56:51.660587: |   27 0a e8 f1  04 ad d8 9e  e9 98 8f 9e  9f 06 bf 94
Sep 13 20:56:51.660589: |   d0 a0 41 0a  51 5b e5 ed  e0 dd 81 0a  1d 51 09 fc
Sep 13 20:56:51.660593: |   1f 9a 4f 38  51 6f b9 bf  b4 d8 96 88  ea 78 4f 9e
Sep 13 20:56:51.660595: |   e8 0d 35 68  e2 e3 45 31  14 19 34 ba  b8 a8 2a 56
Sep 13 20:56:51.660596: |   d9 ed 6b 03  26 7e d8 ad  84 d6 a8 0c  1b 3c f5 e5
Sep 13 20:56:51.660598: |   33 b1 02 57  fa d1 57 a2  4a 1a f6 69  3b 90 a8 7a
Sep 13 20:56:51.660600: |   59 49 f8 5a  bd 07 d4 7c  06 06 50 62  cd 40 ae 53
Sep 13 20:56:51.660601: |   47 90 c5 21  e4 d1 44 64  3f c7 d7 b6  e8 f1 cf 60
Sep 13 20:56:51.660603: |   f4 a5 87 ba  18 cd a0 ac  54 80 88 cd  ba e7 41 7a
Sep 13 20:56:51.660604: |   b5 99 17 81  a6 3c f8 d1  38 cc 60 12  a6 d1 6e f4
Sep 13 20:56:51.660606: |   7e c0 dc 25  85 6b c4 1a  e0 f9 fd a4  40 f0 61 33
Sep 13 20:56:51.660608: |   c4 e4 f7 01  90 49 69 1a  7d af c4 f8  e5 1e 4d b1
Sep 13 20:56:51.660609: |   50 3e 6c b3  c2 ab 14 01  a7 7d 14 84  76 09 22 0a
Sep 13 20:56:51.660611: |   39 72 e3 dc  80 96 60 00  03 88 ed 15  28 c1 3b 71
Sep 13 20:56:51.660613: |   f3 c3 67 0c  83 62 dd 4f  31 c7 34 cd  b4 9e 1a f9
Sep 13 20:56:51.660614: |   38 4c e5 b2  2b e0 98 e7  f4 f4 02 96  c5 da f7 0b
Sep 13 20:56:51.660616: |   9a ec 2a 37  86 69 93 e3  16 33 72 25  97 1f ae c0
Sep 13 20:56:51.660617: |   a4 68 d5 ef  e7 8e 74 dc  8f 08 f8 eb  15 77 1e 17
Sep 13 20:56:51.660619: |   f2 db 8f 86  22 83 85 0d  4f 95 56 cc  d7 2f ba ee
Sep 13 20:56:51.660621: |   53 fd a4 fc  4b 53 02 27  13 e0 fe e5  f9 31 d3 68
Sep 13 20:56:51.660622: |   69 4e 88 4c  ea bb 80 fe  2f 29 50 49  4a 62 6c 16
Sep 13 20:56:51.660624: |   99 df 6e 10  29 3d 8b ac  37 95 55 0d  0d 1b 26 7e
Sep 13 20:56:51.660626: |   76 0c 90 b8  fb 5a 40 9f  05 b8 31 1d  ee eb 1c 94
Sep 13 20:56:51.660627: |   1a 9f 06 3a  9d 34 99 50  ea ea 0c b5  d5 50 ac a5
Sep 13 20:56:51.660629: |   e2 85 dd 5d  12 58 92 ac  7a e7 e0 d8  cc c6 8b 7b
Sep 13 20:56:51.660630: |   a8 e8 d8 34  46 05 6a b2  5d b3 ed 82  9c f2 f7 ae
Sep 13 20:56:51.660632: |   57 52 7d 91  fa 3f 82 61  b3 e6 26 22  35 1b 09 b0
Sep 13 20:56:51.660634: |   75 f2 c1 26  9e 9e 61 7c  22 c5 e1 7d  ff 98 57 6e
Sep 13 20:56:51.660635: |   44 3b ba ca  e2 11 9c 76  39 3c 9e 2f  72 ae 14 27
Sep 13 20:56:51.660637: |   af 23 d6 4f  f5 29 d6 00  78 fc 66 11  af 17 d5 0e
Sep 13 20:56:51.660638: |   2a d9 00 e6  fe a7 df 68  ff 17 0a 70  a9 00 54 b1
Sep 13 20:56:51.660640: |   a8 5c 75 e5  52 06 73 f5  cc 5b e7 fd  bb 0f b3 ec
Sep 13 20:56:51.660642: |   cd b9 d4 fe  1f ff 34 6a  c6 95 6f a4  cf 9f cc 9e
Sep 13 20:56:51.660643: |   64 42 e2 ca  7b 4d 23 a6  85 d4 c1 32  a7 7b 6f ed
Sep 13 20:56:51.660645: |   b1 9c d4 33  ad 16 32 cb  ba 55 b6 9a  f0 99 d9 40
Sep 13 20:56:51.660647: |   19 32 31 2a  b3 d6 d6 e2  f7 65 17 14  25 ab ba 14
Sep 13 20:56:51.660648: |   a2 b5 9a 93  cf 1a a9 3a  be 2b 06 cd  5e c1 39 13
Sep 13 20:56:51.660650: |   c9 f0 34 93  54 43 c8 56  00 b6 c7 95  89 c3 3d bb
Sep 13 20:56:51.660651: |   17 05 f0 a2  e8 b5 8a e2  39 80 af 75  16 4b f5 1c
Sep 13 20:56:51.660653: |   ea dd 4b e3  92 da 81 0f  42 e9 79 54  8b 43 bc a5
Sep 13 20:56:51.660655: |   33 2b 87 08  4a 4b 97 38  e4 a5 fe 61  32 a2 e1 6f
Sep 13 20:56:51.660656: |   73 dd 01 1b  dd 0a d8 38  57 77 11 eb  95 7f 40 74
Sep 13 20:56:51.660658: |   f5 54 be 10  43 ed 3b 97  ff 3e fa 1b  99 c3 cc ad
Sep 13 20:56:51.660660: |   2c c6 cc e9  bd 75 b2 fa  62 4b 1c 20  e6 c5 f9 b8
Sep 13 20:56:51.660661: | out calculated auth:
Sep 13 20:56:51.660663: |   0d 9d eb 80  ed 02 9a a3  79 8a 6f b0
Sep 13 20:56:51.660670: | ikev2_parent_inI2outR2_continue_tail returned STF_OK
Sep 13 20:56:51.660676: |   #1 spent 13 milliseconds in processing: Responder: process IKE_AUTH request in v2_dispatch()
Sep 13 20:56:51.660679: | MD.ST contains the CHILD SA #2
Sep 13 20:56:51.660684: | suspend processing: state #1 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:4500 (in complete_v2_state_transition() at ikev2.c:3235)
Sep 13 20:56:51.660688: | start processing: state #2 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:4500 (in complete_v2_state_transition() at ikev2.c:3235)
Sep 13 20:56:51.660691: | #2 complete_v2_state_transition() UNDEFINED -> V2_IPSEC_R with status STF_OK; transition.[from]state=PARENT_R1
Sep 13 20:56:51.660695: | transitioning from state STATE_PARENT_R1 to state STATE_V2_IPSEC_R
Sep 13 20:56:51.660698: | child state #2: UNDEFINED(ignore) => V2_IPSEC_R(established CHILD SA)
Sep 13 20:56:51.660700: | Message ID: updating counters for #2 after switching state ...
Sep 13 20:56:51.660704: | Message ID: CHILD #1.#2 updating responder received message request 1: ike.initiator.sent=-1 ike.initiator.recv=-1 ike.responder.sent=0 ike.responder.recv=0->1 child.wip.initiator=-1 child.wip.responder=1->-1
Sep 13 20:56:51.660707: | Message ID: CHILD #1.#2 updating responder sent message response 1: ike.initiator.sent=-1 ike.initiator.recv=-1 ike.responder.sent=0->1 ike.responder.recv=1 child.wip.initiator=-1 child.wip.responder=-1
Sep 13 20:56:51.660710: | Message ID: IKE #1 no pending message initiators to schedule: ike.initiator.sent=-1 ike.initiator.recv=-1 ike.responder.sent=1 ike.responder.recv=1 ike.wip.initiator=-1 ike.wip.responder=-1
Sep 13 20:56:51.660712: | pstats #2 ikev2.child established
Sep 13 20:56:51.660718: "ikev2-cert"[1] 192.168.0.1 #2: negotiated connection [192.168.0.136-192.168.0.136:0-65535 0] -> [192.168.0.1-192.168.0.1:0-65535 0]
Sep 13 20:56:51.660722: | NAT-T: encaps is 'yes'
Sep 13 20:56:51.660726: "ikev2-cert"[1] 192.168.0.1 #2: STATE_V2_IPSEC_R: IPsec SA established tunnel mode {ESP=>0x0ad2d1db <0x7df75183 xfrm=3DES_CBC-HMAC_SHA1_96 NATOA=none NATD=none DPD=active}
Sep 13 20:56:51.660730: | sending V2 new request packet to 192.168.0.1:4500 (from 192.168.0.136:4500)
Sep 13 20:56:51.660735: | sending 832 bytes for STATE_PARENT_R1 through ens33 from 192.168.0.136:4500 to 192.168.0.1:4500 (using #1)
Sep 13 20:56:51.660738: |   00 00 00 00  dc 3a 94 c4  30 44 5b 90  cc c8 77 25
Sep 13 20:56:51.660739: |   23 cb 7d 48  2e 20 23 20  00 00 00 01  00 00 03 3c
Sep 13 20:56:51.660741: |   24 00 03 20  13 45 cc 0f  9c 9a c1 2f  52 f8 fb a5
Sep 13 20:56:51.660743: |   94 69 d9 22  90 d4 0a df  9b e7 6b 4a  cd 8a 83 8d
Sep 13 20:56:51.660744: |   52 88 ca 64  b8 de a5 43  a0 fc 19 38  5a 36 ed 65
Sep 13 20:56:51.660746: |   46 c0 b9 35  8d 7d a8 d7  cf f3 e3 62  22 f4 ab 10
Sep 13 20:56:51.660748: |   71 bf 09 8c  11 b3 a5 2d  af 2a bf f7  d7 59 32 8b
Sep 13 20:56:51.660749: |   8f 16 b2 7e  27 0a e8 f1  04 ad d8 9e  e9 98 8f 9e
Sep 13 20:56:51.660751: |   9f 06 bf 94  d0 a0 41 0a  51 5b e5 ed  e0 dd 81 0a
Sep 13 20:56:51.660752: |   1d 51 09 fc  1f 9a 4f 38  51 6f b9 bf  b4 d8 96 88
Sep 13 20:56:51.660754: |   ea 78 4f 9e  e8 0d 35 68  e2 e3 45 31  14 19 34 ba
Sep 13 20:56:51.660756: |   b8 a8 2a 56  d9 ed 6b 03  26 7e d8 ad  84 d6 a8 0c
Sep 13 20:56:51.660757: |   1b 3c f5 e5  33 b1 02 57  fa d1 57 a2  4a 1a f6 69
Sep 13 20:56:51.660759: |   3b 90 a8 7a  59 49 f8 5a  bd 07 d4 7c  06 06 50 62
Sep 13 20:56:51.660761: |   cd 40 ae 53  47 90 c5 21  e4 d1 44 64  3f c7 d7 b6
Sep 13 20:56:51.660762: |   e8 f1 cf 60  f4 a5 87 ba  18 cd a0 ac  54 80 88 cd
Sep 13 20:56:51.660764: |   ba e7 41 7a  b5 99 17 81  a6 3c f8 d1  38 cc 60 12
Sep 13 20:56:51.660765: |   a6 d1 6e f4  7e c0 dc 25  85 6b c4 1a  e0 f9 fd a4
Sep 13 20:56:51.660767: |   40 f0 61 33  c4 e4 f7 01  90 49 69 1a  7d af c4 f8
Sep 13 20:56:51.660769: |   e5 1e 4d b1  50 3e 6c b3  c2 ab 14 01  a7 7d 14 84
Sep 13 20:56:51.660770: |   76 09 22 0a  39 72 e3 dc  80 96 60 00  03 88 ed 15
Sep 13 20:56:51.660772: |   28 c1 3b 71  f3 c3 67 0c  83 62 dd 4f  31 c7 34 cd
Sep 13 20:56:51.660774: |   b4 9e 1a f9  38 4c e5 b2  2b e0 98 e7  f4 f4 02 96
Sep 13 20:56:51.660775: |   c5 da f7 0b  9a ec 2a 37  86 69 93 e3  16 33 72 25
Sep 13 20:56:51.660777: |   97 1f ae c0  a4 68 d5 ef  e7 8e 74 dc  8f 08 f8 eb
Sep 13 20:56:51.660778: |   15 77 1e 17  f2 db 8f 86  22 83 85 0d  4f 95 56 cc
Sep 13 20:56:51.660780: |   d7 2f ba ee  53 fd a4 fc  4b 53 02 27  13 e0 fe e5
Sep 13 20:56:51.660782: |   f9 31 d3 68  69 4e 88 4c  ea bb 80 fe  2f 29 50 49
Sep 13 20:56:51.660783: |   4a 62 6c 16  99 df 6e 10  29 3d 8b ac  37 95 55 0d
Sep 13 20:56:51.660785: |   0d 1b 26 7e  76 0c 90 b8  fb 5a 40 9f  05 b8 31 1d
Sep 13 20:56:51.660788: |   ee eb 1c 94  1a 9f 06 3a  9d 34 99 50  ea ea 0c b5
Sep 13 20:56:51.660790: |   d5 50 ac a5  e2 85 dd 5d  12 58 92 ac  7a e7 e0 d8
Sep 13 20:56:51.660792: |   cc c6 8b 7b  a8 e8 d8 34  46 05 6a b2  5d b3 ed 82
Sep 13 20:56:51.660793: |   9c f2 f7 ae  57 52 7d 91  fa 3f 82 61  b3 e6 26 22
Sep 13 20:56:51.660795: |   35 1b 09 b0  75 f2 c1 26  9e 9e 61 7c  22 c5 e1 7d
Sep 13 20:56:51.660796: |   ff 98 57 6e  44 3b ba ca  e2 11 9c 76  39 3c 9e 2f
Sep 13 20:56:51.660798: |   72 ae 14 27  af 23 d6 4f  f5 29 d6 00  78 fc 66 11
Sep 13 20:56:51.660800: |   af 17 d5 0e  2a d9 00 e6  fe a7 df 68  ff 17 0a 70
Sep 13 20:56:51.660801: |   a9 00 54 b1  a8 5c 75 e5  52 06 73 f5  cc 5b e7 fd
Sep 13 20:56:51.660803: |   bb 0f b3 ec  cd b9 d4 fe  1f ff 34 6a  c6 95 6f a4
Sep 13 20:56:51.660805: |   cf 9f cc 9e  64 42 e2 ca  7b 4d 23 a6  85 d4 c1 32
Sep 13 20:56:51.660806: |   a7 7b 6f ed  b1 9c d4 33  ad 16 32 cb  ba 55 b6 9a
Sep 13 20:56:51.660808: |   f0 99 d9 40  19 32 31 2a  b3 d6 d6 e2  f7 65 17 14
Sep 13 20:56:51.660809: |   25 ab ba 14  a2 b5 9a 93  cf 1a a9 3a  be 2b 06 cd
Sep 13 20:56:51.660811: |   5e c1 39 13  c9 f0 34 93  54 43 c8 56  00 b6 c7 95
Sep 13 20:56:51.660813: |   89 c3 3d bb  17 05 f0 a2  e8 b5 8a e2  39 80 af 75
Sep 13 20:56:51.660814: |   16 4b f5 1c  ea dd 4b e3  92 da 81 0f  42 e9 79 54
Sep 13 20:56:51.660816: |   8b 43 bc a5  33 2b 87 08  4a 4b 97 38  e4 a5 fe 61
Sep 13 20:56:51.660818: |   32 a2 e1 6f  73 dd 01 1b  dd 0a d8 38  57 77 11 eb
Sep 13 20:56:51.660819: |   95 7f 40 74  f5 54 be 10  43 ed 3b 97  ff 3e fa 1b
Sep 13 20:56:51.660821: |   99 c3 cc ad  2c c6 cc e9  bd 75 b2 fa  62 4b 1c 20
Sep 13 20:56:51.660822: |   e6 c5 f9 b8  0d 9d eb 80  ed 02 9a a3  79 8a 6f b0
Sep 13 20:56:51.660947: | releasing #2's fd-fd@(nil) because IKEv2 transitions finished
Sep 13 20:56:51.660955: | delref fdp@NULL (in success_v2_state_transition() at ikev2.c:2935)
Sep 13 20:56:51.660958: | unpending #2's IKE SA #1
Sep 13 20:56:51.660961: | unpending state #1 connection "ikev2-cert"[1] 192.168.0.1
Sep 13 20:56:51.660963: | releasing #1's fd-fd@(nil) because IKEv2 transitions finished so releaseing IKE SA
Sep 13 20:56:51.660965: | delref fdp@NULL (in success_v2_state_transition() at ikev2.c:2968)
Sep 13 20:56:51.660968: | #2 will expire in 28800 seconds (policy doesn't allow re-key)
Sep 13 20:56:51.660971: | event_schedule: newref EVENT_SA_EXPIRE-pe@0x55b124e7ced8
Sep 13 20:56:51.660973: | inserting event EVENT_SA_EXPIRE, timeout in 28800 seconds for #2
Sep 13 20:56:51.660976: | libevent_malloc: newref ptr-libevent@0x55b124e79668 size 136
Sep 13 20:56:51.660983: | libevent_realloc: delref ptr-libevent@0x55b124e38448
Sep 13 20:56:51.660985: | libevent_realloc: newref ptr-libevent@0x55b124e75dd8 size 128
Sep 13 20:56:51.660988: | dpd enabled, scheduling ikev2 liveness checks
Sep 13 20:56:51.660991: | event_schedule: newref EVENT_v2_LIVENESS-pe@0x55b124e38448
Sep 13 20:56:51.660993: | inserting event EVENT_v2_LIVENESS, timeout in 30 seconds for #2
Sep 13 20:56:51.660996: | libevent_malloc: newref ptr-libevent@0x55b124e6f288 size 136
Sep 13 20:56:51.661001: | resume sending helper answer for #1 suppresed complete_v2_state_transition()
Sep 13 20:56:51.661006: | #1 spent 14 milliseconds in resume sending helper answer
Sep 13 20:56:51.661010: | stop processing: state #2 connection "ikev2-cert"[1] 192.168.0.1 from 192.168.0.1:4500 (in resume_handler() at server.c:860)
Sep 13 20:56:51.661014: | libevent_free: delref ptr-libevent@0x7f2910009c38
Sep 13 20:56:51.661028: | processing signal PLUTO_SIGCHLD
Sep 13 20:56:51.661031: | waitpid returned ECHILD (no child processes left)
Sep 13 20:56:51.661034: | spent 0.00315 milliseconds in signal handler PLUTO_SIGCHLD
Sep 13 20:56:51.661036: | processing signal PLUTO_SIGCHLD
Sep 13 20:56:51.661038: | waitpid returned ECHILD (no child processes left)
Sep 13 20:56:51.661040: | spent 0.00196 milliseconds in signal handler PLUTO_SIGCHLD
Sep 13 20:56:51.661042: | processing signal PLUTO_SIGCHLD
Sep 13 20:56:51.661044: | waitpid returned ECHILD (no child processes left)
Sep 13 20:56:51.661049: | spent 0.00515 milliseconds in signal handler PLUTO_SIGCHLD
